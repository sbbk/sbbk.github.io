{"mappings":"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","sources":["node_modules/com.visr-vr.vertex.jsclient/src/vertexruntime.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class Guid {\r\n        static NewGuid() {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = (c == 'x') ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        }\r\n    }\r\n    Vertex.Guid = Guid;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        class Component {\r\n            constructor() {\r\n                this.doNotSerialize = false;\r\n                this.events = new Map();\r\n                this.isUpdatingState = false;\r\n                this.onChanged = new Vertex.EventBus();\r\n                this.onAdded = new Vertex.EventBus();\r\n                this.onRemoved = new Vertex.EventBus();\r\n                this.onChanged = new Vertex.EventBus();\r\n                this.onAdded = new Vertex.EventBus();\r\n                this.onRemoved = new Vertex.EventBus();\r\n            }\r\n            get Dirty() { return this.dirty; }\r\n            markDirty() {\r\n                this.dirty = true;\r\n            }\r\n            clearDirty() {\r\n                this.dirty = false;\r\n            }\r\n            triggerOnChanged() {\r\n                if (!this.isUpdatingState) {\r\n                    this.markDirty();\r\n                    this.onChanged.trigger(this);\r\n                }\r\n            }\r\n            getNode() {\r\n                return this.node;\r\n            }\r\n            writeData(writer, delta) {\r\n            }\r\n            readData(reader) {\r\n            }\r\n            writeDataBSON(writer) {\r\n                let ctx = writer.startObject();\r\n                writer.endObject(ctx);\r\n            }\r\n            readDataBSON(reader) {\r\n                reader.readObject((a, b, c) => { });\r\n            }\r\n        }\r\n        NodeComponentModel.Component = Component;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"ComponentModel/component.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class EventHub {\r\n        constructor() {\r\n            this.events = new Map();\r\n        }\r\n        ;\r\n        on(name, handler) {\r\n            var event = this.events.get(name);\r\n            if (!event) {\r\n                event = new EventBus();\r\n                this.events.set(name, event);\r\n            }\r\n            event.on(handler);\r\n        }\r\n        off(name, handler) {\r\n            var event = this.events.get(name);\r\n            if (!event)\r\n                return;\r\n            event.off(handler);\r\n        }\r\n        fire(name, data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var event = this.events.get(name);\r\n                if (!event)\r\n                    return;\r\n                yield event.trigger(data);\r\n            });\r\n        }\r\n        reset(name) {\r\n            var event = this.events.get(name);\r\n            if (!event)\r\n                return;\r\n            event.reset();\r\n        }\r\n    }\r\n    Vertex.EventHub = EventHub;\r\n    class EventBus {\r\n        constructor() {\r\n            this.handlers = [];\r\n        }\r\n        on(handler) {\r\n            this.handlers.push(handler);\r\n        }\r\n        off(handler) {\r\n            this.handlers = this.handlers.filter(h => h !== handler);\r\n        }\r\n        trigger(data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                //this.handlers.slice(0).forEach(h => h(data));\r\n                let handlerCopy = this.handlers.slice(0);\r\n                for (let handler of handlerCopy) {\r\n                    yield handler(data);\r\n                }\r\n            });\r\n        }\r\n        reset() {\r\n            this.handlers = [];\r\n        }\r\n        expose() {\r\n            return this; //hmm\r\n        }\r\n    }\r\n    Vertex.EventBus = EventBus;\r\n    class MonitoredEvent {\r\n        constructor(target) {\r\n            this.handlers = [];\r\n            this.target = target;\r\n        }\r\n        on(handler) {\r\n            this.handlers.push(handler);\r\n        }\r\n        off(handler) {\r\n            this.handlers = this.handlers.filter(h => h !== handler);\r\n        }\r\n        trigger(data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                //this.handlers.slice(0).forEach(h => h(data));\r\n                let handlerCopy = this.handlers.slice(0);\r\n                for (let handler of handlerCopy) {\r\n                    yield handler(data);\r\n                }\r\n            });\r\n        }\r\n        reset() {\r\n            this.handlers = [];\r\n        }\r\n        expose() {\r\n            return this;\r\n        }\r\n    }\r\n    Vertex.MonitoredEvent = MonitoredEvent;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class DebugReporter {\r\n        constructor() {\r\n            this.displayDebugContext = false;\r\n            this.displayDebugState = false;\r\n            this.debugState = \"\";\r\n            this.debugContext = null;\r\n        }\r\n        setDebugState(state, context) {\r\n            this.debugState = state;\r\n            this.debugContext = context;\r\n            if (this.displayDebugState === true) {\r\n                console.debug(\"[VERTX:BinaryWriter]: \" + this.debugState, this.displayDebugContext ? this.debugContext : null);\r\n            }\r\n        }\r\n    }\r\n    Vertex.DebugReporter = DebugReporter;\r\n    class BinaryWriter extends DebugReporter {\r\n        constructor(maxSize) {\r\n            super();\r\n            this.littleEndian = true;\r\n            this.buffer = new Uint8Array(maxSize);\r\n            this.writer = new DataView(this.buffer.buffer);\r\n            this.index = 0;\r\n        }\r\n        get Index() {\r\n            return this.index;\r\n        }\r\n        set Index(value) {\r\n            this.index = value;\r\n        }\r\n        clear() {\r\n            this.buffer.fill(0x0, 0, this.buffer.length);\r\n        }\r\n        asBufferView() {\r\n            return this.buffer.subarray(0, this.index);\r\n        }\r\n        toBuffer() {\r\n            return this.buffer.buffer.slice(0, this.index);\r\n        }\r\n        dispose() {\r\n        }\r\n        writeSingle(value) {\r\n            this.writer.setFloat32(this.index, value, this.littleEndian);\r\n            this.index += 4;\r\n        }\r\n        writeDouble(value) {\r\n            this.writer.setFloat64(this.index, value, this.littleEndian);\r\n            this.index += 8;\r\n        }\r\n        writeInt16(value) {\r\n            this.writer.setInt16(this.index, value, this.littleEndian);\r\n            this.index += 2;\r\n        }\r\n        writeInt32(value) {\r\n            this.writer.setInt32(this.index, value, this.littleEndian);\r\n            this.index += 4;\r\n        }\r\n        writeUInt16(value) {\r\n            this.writer.setUint16(this.index, value, this.littleEndian);\r\n            this.index += 2;\r\n        }\r\n        writeUInt32(value) {\r\n            this.writer.setUint32(this.index, value, this.littleEndian);\r\n            this.index += 4;\r\n        }\r\n        writeBool(value) {\r\n            if (value === true) {\r\n                this.buffer.set([1], this.index);\r\n            }\r\n            else {\r\n                this.buffer.set([0], this.index);\r\n            }\r\n            this.index += 1;\r\n        }\r\n        writeByte(value) {\r\n            this.buffer[this.index] = value;\r\n            this.index += 1;\r\n        }\r\n        writeString(value) {\r\n            if (typeof value !== \"string\") {\r\n                console.error(\"The value of \" + value + \" must be a string\");\r\n                return;\r\n            }\r\n            if (value === null) {\r\n                console.error(\"The string: \" + value + \" cannot be null\");\r\n                return;\r\n            }\r\n            if (value.length === 0) {\r\n                this.write7BitEncodedInt(0);\r\n                return;\r\n            }\r\n            var stringValue = value;\r\n            //The string is written to the buffer using UTF8 magic.\r\n            var uriEncoded = Vertex.UTF8.Encode(value);\r\n            //We prefex the string with a uInt of it's length.\r\n            this.write7BitEncodedInt(uriEncoded.length);\r\n            this.buffer.set(uriEncoded, this.index);\r\n            this.index += uriEncoded.length;\r\n        }\r\n        writeBytes(buffer, length) {\r\n            this.buffer.set(buffer, this.index);\r\n            this.index += length;\r\n        }\r\n        //-_-\r\n        //[todo] Test and evaluate this, this is an encoding bug hotspot!\r\n        write7BitEncodedInt(value) {\r\n            if (value > 256)\r\n                console.warn(\"Encoding huge string!! is this intentional?\");\r\n            var v = value >>> 0; //cut the sign bit off the number\r\n            while (v >= 0x80) {\r\n                this.buffer[this.index] = (v | 0x80);\r\n                this.index += 1;\r\n                v = (v >> 7) >>> 0;\r\n            }\r\n            this.buffer[this.index] = v;\r\n            this.index += 1;\r\n        }\r\n        writeArray(buffer) {\r\n            var charBuffer = new Uint8Array(buffer);\r\n            for (var i = 0; i < charBuffer.byteLength; i++) {\r\n                this.buffer[this.index] = charBuffer[i];\r\n                this.index++;\r\n            }\r\n        }\r\n    }\r\n    Vertex.BinaryWriter = BinaryWriter;\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"binarywriter.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class BinaryReader extends Vertex.DebugReporter {\r\n        constructor(buffer) {\r\n            super();\r\n            this.littleEndian = true;\r\n            this.buffer = new Uint8Array(buffer);\r\n            this.reader = new DataView(this.buffer.buffer);\r\n            this.index = 0;\r\n        }\r\n        get Index() {\r\n            return this.index;\r\n        }\r\n        set Index(value) {\r\n            this.index = value;\r\n        }\r\n        readSingle() {\r\n            this.index += 4;\r\n            if (this.index > this.buffer.byteLength) {\r\n                new Error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n                console.error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n            }\r\n            return this.reader.getFloat32(this.index - 4, this.littleEndian);\r\n        }\r\n        readDouble() {\r\n            this.index += 8;\r\n            if (this.index > this.buffer.byteLength) {\r\n                new Error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n                console.error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n            }\r\n            return this.reader.getFloat64(this.index - 8, this.littleEndian);\r\n        }\r\n        readInt16() {\r\n            this.index += 2;\r\n            if (this.index > this.buffer.byteLength) {\r\n                new Error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n                console.error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n            }\r\n            return this.reader.getInt16(this.index - 2, this.littleEndian);\r\n        }\r\n        readInt32() {\r\n            this.index += 4;\r\n            if (this.index > this.buffer.byteLength) {\r\n                new Error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n                console.error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n            }\r\n            return this.reader.getInt32(this.index - 4, this.littleEndian);\r\n        }\r\n        readUInt16() {\r\n            this.index += 2;\r\n            if (this.index > this.buffer.byteLength) {\r\n                new Error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n                console.error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n            }\r\n            return this.reader.getUint16(this.index - 2, this.littleEndian);\r\n        }\r\n        readUInt32() {\r\n            this.index += 4;\r\n            if (this.index > this.buffer.byteLength) {\r\n                new Error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n                console.error(\"Length error with reader, index \" + this.index + \" is greater than the buffer length \" + this.buffer.byteLength);\r\n            }\r\n            return this.reader.getUint32(this.index - 4, this.littleEndian);\r\n        }\r\n        readBool() {\r\n            var value = this.buffer[this.index];\r\n            this.index += 1;\r\n            if (value === 0) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n        readByte() {\r\n            this.index += 1;\r\n            return this.buffer[this.index - 1];\r\n        }\r\n        readBytes(count) {\r\n            let bytes = this.buffer.slice(this.index, this.index + count);\r\n            this.index += count;\r\n            return bytes;\r\n        }\r\n        peekByte() {\r\n            return this.buffer[this.index + 1];\r\n        }\r\n        readString() {\r\n            var length = this.read7BitEncodedInt();\r\n            if (length === 0)\r\n                return \"\";\r\n            var string = Vertex.UTF8.Decode(this.buffer.slice(this.index, this.index + length));\r\n            this.index += length;\r\n            return string;\r\n        }\r\n        read7BitEncodedInt() {\r\n            let length = 0, shift = 0, offset = 0;\r\n            let byte;\r\n            do {\r\n                byte = this.buffer[this.index + offset++];\r\n                length |= (byte & 0x7F) << shift;\r\n                shift += 7;\r\n            } while (byte >= 0x80);\r\n            this.index += offset;\r\n            return length;\r\n        }\r\n        readArray() {\r\n            return null;\r\n        }\r\n        skipAhead(numBytes) {\r\n            this.index += numBytes;\r\n        }\r\n    }\r\n    Vertex.BinaryReader = BinaryReader;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        let Layer;\r\n        (function (Layer) {\r\n            Layer[Layer[\"Layer1\"] = 2] = \"Layer1\";\r\n            Layer[Layer[\"Layer2\"] = 4] = \"Layer2\";\r\n            Layer[Layer[\"Layer3\"] = 8] = \"Layer3\";\r\n            Layer[Layer[\"Layer4\"] = 16] = \"Layer4\";\r\n            Layer[Layer[\"Layer5\"] = 32] = \"Layer5\";\r\n            Layer[Layer[\"Layer6\"] = 64] = \"Layer6\";\r\n            Layer[Layer[\"Layer7\"] = 128] = \"Layer7\";\r\n            Layer[Layer[\"Layer8\"] = 256] = \"Layer8\";\r\n            Layer[Layer[\"Layer9\"] = 512] = \"Layer9\";\r\n            Layer[Layer[\"Layer10\"] = 1024] = \"Layer10\";\r\n            Layer[Layer[\"Layer11\"] = 2048] = \"Layer11\";\r\n            Layer[Layer[\"Layer12\"] = 4096] = \"Layer12\";\r\n            Layer[Layer[\"Layer13\"] = 8192] = \"Layer13\";\r\n            Layer[Layer[\"Layer14\"] = 16384] = \"Layer14\";\r\n            Layer[Layer[\"Layer15\"] = 32768] = \"Layer15\";\r\n            Layer[Layer[\"Layer16\"] = 65536] = \"Layer16\";\r\n            Layer[Layer[\"Layer17\"] = 131072] = \"Layer17\";\r\n            Layer[Layer[\"Layer18\"] = 262144] = \"Layer18\";\r\n            Layer[Layer[\"Layer19\"] = 524288] = \"Layer19\";\r\n            Layer[Layer[\"Layer20\"] = 1048576] = \"Layer20\";\r\n            Layer[Layer[\"Layer21\"] = 2097152] = \"Layer21\";\r\n            Layer[Layer[\"Layer22\"] = 4194304] = \"Layer22\";\r\n            Layer[Layer[\"Layer23\"] = 8388608] = \"Layer23\";\r\n            Layer[Layer[\"Layer24\"] = 16777216] = \"Layer24\";\r\n            Layer[Layer[\"Layer25\"] = 33554432] = \"Layer25\";\r\n            Layer[Layer[\"Layer26\"] = 67108864] = \"Layer26\";\r\n            Layer[Layer[\"Layer27\"] = 134217728] = \"Layer27\";\r\n            Layer[Layer[\"Layer28\"] = 268435456] = \"Layer28\";\r\n            Layer[Layer[\"Layer29\"] = 536870912] = \"Layer29\";\r\n            Layer[Layer[\"Layer30\"] = 1073741824] = \"Layer30\";\r\n            Layer[Layer[\"Layer31\"] = -2147483648] = \"Layer31\";\r\n            Layer[Layer[\"Layer32\"] = 1] = \"Layer32\";\r\n            Layer[Layer[\"AllLayers\"] = 4294967295] = \"AllLayers\";\r\n        })(Layer = NodeComponentModel.Layer || (NodeComponentModel.Layer = {}));\r\n        let ComponentDataType;\r\n        (function (ComponentDataType) {\r\n            ComponentDataType[ComponentDataType[\"Binary\"] = 0] = \"Binary\";\r\n            ComponentDataType[ComponentDataType[\"BSON\"] = 1] = \"BSON\";\r\n            ComponentDataType[ComponentDataType[\"Json\"] = 2] = \"Json\";\r\n            ComponentDataType[ComponentDataType[\"BSONObject\"] = 3] = \"BSONObject\";\r\n        })(ComponentDataType = NodeComponentModel.ComponentDataType || (NodeComponentModel.ComponentDataType = {}));\r\n        var ComponentDataTypeStrings = [\r\n            \"Binary\",\r\n            \"BSON\",\r\n            \"Json\",\r\n            \"BSONObject\"\r\n        ];\r\n        // Determines what happens to the node when it's token is handed off\r\n        let TokenHandoffPolicy;\r\n        (function (TokenHandoffPolicy) {\r\n            // Destroy the node when the client hands off the token, usually when they leave a space\r\n            TokenHandoffPolicy[TokenHandoffPolicy[\"Destroy\"] = 0] = \"Destroy\";\r\n            // Keeps nodes persisted in the space but doesn't persist them when the last client leaves the space\r\n            TokenHandoffPolicy[TokenHandoffPolicy[\"DestroyWithLastClient\"] = 1] = \"DestroyWithLastClient\";\r\n            // Orphan this node and persist it in the space for other users to adopt\r\n            TokenHandoffPolicy[TokenHandoffPolicy[\"Persist\"] = 2] = \"Persist\";\r\n            // This node is destroyed from the space, but is persisted in the users personal store, it roams with them into the next space they join\r\n            TokenHandoffPolicy[TokenHandoffPolicy[\"Portable\"] = 3] = \"Portable\";\r\n        })(TokenHandoffPolicy = NodeComponentModel.TokenHandoffPolicy || (NodeComponentModel.TokenHandoffPolicy = {}));\r\n        var TokenHandoffPolicyStrings = [\r\n            \"Destroy\",\r\n            \"DestroyWithLastClient\",\r\n            \"Persist\",\r\n            \"Portable\"\r\n        ];\r\n        function EnumAsString(value) {\r\n            return TokenHandoffPolicyStrings[value];\r\n        }\r\n        NodeComponentModel.EnumAsString = EnumAsString;\r\n        /**\r\n         * this is a flags enum\r\n         * */\r\n        let LodPolicy;\r\n        (function (LodPolicy) {\r\n            LodPolicy[LodPolicy[\"None\"] = 0] = \"None\";\r\n            LodPolicy[LodPolicy[\"Distance\"] = 1] = \"Distance\";\r\n            LodPolicy[LodPolicy[\"Frequency\"] = 2] = \"Frequency\";\r\n            LodPolicy[LodPolicy[\"DistanceAndFrequency\"] = 3] = \"DistanceAndFrequency\";\r\n        })(LodPolicy = NodeComponentModel.LodPolicy || (NodeComponentModel.LodPolicy = {}));\r\n        //export class ViewNode extends BABYLON.Mesh {\r\n        //    constructor(name: string, scene: BABYLON.Scene) {\r\n        //        super(name, scene);\r\n        //    }\r\n        //    onNodeChangedObservable: BABYLON.Observable<BABYLON.Mesh> = new BABYLON.Observable<BABYLON.Mesh>();\r\n        //}\r\n        class VertexNode {\r\n            constructor(componentSystem, space) {\r\n                this.isDirty = false;\r\n                this.name = \"default\";\r\n                this.tokenHandoffPolicy = TokenHandoffPolicy.Destroy;\r\n                this.tags = [];\r\n                this.layer = Layer.Layer32;\r\n                this.componentDataType = ComponentDataType.Binary;\r\n                this.components = [];\r\n                this.lodPolicy = LodPolicy.None;\r\n                this.lodDistance = 0.0;\r\n                this.doNotSerialize = false;\r\n                this.onDestroy = new Vertex.EventBus();\r\n                this.event = new Vertex.EventHub();\r\n                this.space = null;\r\n                this.space = space;\r\n                this.id = Vertex.Guid.NewGuid();\r\n                this.parent = \"00000000-0000-0000-0000-000000000000\",\r\n                    this.spaceId = \"00000000-0000-0000-0000-000000000000\",\r\n                    this.componentSystem = componentSystem;\r\n                this.hasToken = false;\r\n            }\r\n            get HasToken() {\r\n                return this.hasToken;\r\n            }\r\n            get HasChanges() {\r\n                if (this.isDirty)\r\n                    return true;\r\n                for (var id of this.components) {\r\n                    var component = this.componentSystem.getComponent(id, this);\r\n                    if (component && component.Dirty)\r\n                        return true;\r\n                }\r\n                return false;\r\n            }\r\n            set HasChanges(value) {\r\n                //if (value && !this.isDirty)\r\n                //    this.isDirty = value;\r\n                for (var id of this.components) {\r\n                    var component = this.componentSystem.getComponent(id, this);\r\n                    if (!component)\r\n                        continue;\r\n                    if (value) {\r\n                        component.markDirty();\r\n                    }\r\n                    else {\r\n                        component.clearDirty();\r\n                    }\r\n                }\r\n                this.isDirty = value;\r\n            }\r\n            get Space() {\r\n                return this.space;\r\n            }\r\n            createComponent(name) {\r\n                if (!(this.componentSystem)) {\r\n                    console.error(\"Entity \" + this.id + \" does not have a valid ComponentSystem reference\");\r\n                    return;\r\n                }\r\n                var component = this.componentSystem.createComponent(name);\r\n                return component;\r\n            }\r\n            addComponent(name, instance = null) {\r\n                if (!(this.componentSystem)) {\r\n                    console.error(\"Entity \" + this.id + \" does not have a valid ComponentSystem reference\");\r\n                    return;\r\n                }\r\n                if (this.components.findIndex((v, i, o) => { return v === name; }) === -1) {\r\n                    this.components.push(name);\r\n                }\r\n                var component = this.componentSystem.getComponent(name, this);\r\n                if (component === null) {\r\n                    component = this.componentSystem.addComponent(name, this, instance);\r\n                }\r\n                component.markDirty();\r\n                return component;\r\n            }\r\n            getComponent(name) {\r\n                return this.componentSystem.getComponent(name, this);\r\n            }\r\n            removeComponent(name) {\r\n                this.componentSystem.removeComponent(name, this);\r\n                this.HasChanges = true;\r\n                let i = this.components.indexOf(name);\r\n                if (i > -1) {\r\n                    this.components.splice(i, 1);\r\n                }\r\n                if (this.hasToken)\r\n                    this.isDirty = true;\r\n            }\r\n            acquireToken(policy = TokenHandoffPolicy.Destroy, callback) {\r\n                this.hasToken = true;\r\n                var self = this;\r\n                this.space.acquireToken(this, policy, (result) => {\r\n                    //console.log(\"Token result for: \" + self.id)\r\n                    //console.log(result);\r\n                    callback(result.result);\r\n                });\r\n            }\r\n            releaseToken(policy = TokenHandoffPolicy.Destroy) {\r\n                this.space.releaseToken(this, policy);\r\n            }\r\n            writeData(writer, delta) {\r\n                writer.setDebugState(\"[VERTX:BinaryWriter:Node:\" + this.id + \"]\", this);\r\n                writer.setDebugState(\"[VERTX:BinaryWriter:Node:Properties]\", this);\r\n                writer.writeString(this.id);\r\n                writer.writeString(this.parent);\r\n                writer.writeString(this.spaceId);\r\n                writer.writeString(this.name);\r\n                writer.writeUInt32(this.layer);\r\n                writer.writeUInt32(this.tokenHandoffPolicy);\r\n                writer.writeUInt32(this.componentDataType);\r\n                //An extra 8 bytes for future use\r\n                writer.writeInt32(0);\r\n                writer.setDebugState(\"[VERTX:BinaryWriter:Node:Tags]\", this);\r\n                writer.writeInt32(this.tags.length);\r\n                if (this.tags.length > 0) {\r\n                    for (var tag of this.tags) {\r\n                        writer.writeString(tag);\r\n                    }\r\n                }\r\n                writer.setDebugState(\"[VERTX:BinaryWriter:Node:Components]\", this);\r\n                var names = [];\r\n                var componentWriter = new Vertex.BinaryWriter(2048);\r\n                var bsonWriter = null;\r\n                if (this.componentDataType === ComponentDataType.BSON) {\r\n                    bsonWriter = new Vertex.BSONWriter(componentWriter);\r\n                }\r\n                componentWriter.displayDebugState = false;\r\n                for (var id of this.components) {\r\n                    var component = this.componentSystem.getComponent(id, this);\r\n                    if (!component) {\r\n                        console.error(\"Node Serialization Error. Context: \", {\r\n                            node: this,\r\n                            componentId: id,\r\n                            fetchedComponent: component\r\n                        });\r\n                        throw new Error(`Critical Node Serialization Error:'getComponent' returned null for component '${id}'.\\nMaybe this component isn't registered?`);\r\n                    }\r\n                    var write = function () {\r\n                        names.push(id);\r\n                        componentWriter.writeUInt16(0);\r\n                        let startIdx = componentWriter.Index;\r\n                        if (this.componentDataType === ComponentDataType.BSON) {\r\n                            component.writeDataBSON(bsonWriter);\r\n                        }\r\n                        else\r\n                            component.writeData(componentWriter, delta);\r\n                        let endIdx = componentWriter.Index;\r\n                        let size = endIdx - startIdx;\r\n                        //console.log(\"Component Data Size: \" + size);\r\n                        componentWriter.Index = startIdx - 2;\r\n                        componentWriter.writeUInt16(size);\r\n                        componentWriter.Index = endIdx;\r\n                    }.bind(this);\r\n                    if (component.doNotSerialize === false) {\r\n                        if (delta) {\r\n                            if (component.Dirty) {\r\n                                write();\r\n                            }\r\n                        }\r\n                        else {\r\n                            write();\r\n                        }\r\n                    }\r\n                }\r\n                writer.writeInt32(names.length);\r\n                for (var name of names) {\r\n                    writer.writeString(name);\r\n                }\r\n                var componentBuffer = componentWriter.toBuffer();\r\n                writer.setDebugState(\"[VERTX:BinaryWriter:Node:ComponentData: \" + componentBuffer.byteLength + \"bytes]\", this);\r\n                writer.writeInt32(componentBuffer.byteLength);\r\n                writer.writeArray(componentBuffer);\r\n                this.isDirty = false;\r\n            }\r\n            readData(reader) {\r\n                reader.setDebugState(\"[VERTX:BinaryWriter:Node:Properties]\", this);\r\n                try {\r\n                    this.id = reader.readString();\r\n                    this.parent = reader.readString();\r\n                    this.spaceId = reader.readString();\r\n                    this.name = reader.readString();\r\n                    this.layer = reader.readUInt32();\r\n                    this.tokenHandoffPolicy = reader.readUInt32();\r\n                    this.componentDataType = reader.readInt32();\r\n                    //Padding for future use\r\n                    reader.readInt32();\r\n                }\r\n                catch (e) {\r\n                    console.error(e);\r\n                }\r\n                reader.setDebugState(\"[VERTX:BinaryWriter:Node:Tags]\", this);\r\n                var tagLength = reader.readInt32();\r\n                if (tagLength > 0) {\r\n                    this.tags = [];\r\n                    for (var i = 0; i < tagLength; i++) {\r\n                        this.tags[i] = reader.readString();\r\n                    }\r\n                }\r\n                reader.setDebugState(\"[VERTX:BinaryWriter:Node:Components]\", this);\r\n                var componentLength = reader.readInt32();\r\n                if (componentLength > 0) {\r\n                    let oldComponents = this.components.slice(0);\r\n                    this.components = [];\r\n                    for (var i = 0; i < componentLength; i++) {\r\n                        this.components[i] = reader.readString();\r\n                    }\r\n                    for (let removedComponent of oldComponents) {\r\n                        if (this.components.indexOf(removedComponent) === -1) {\r\n                            this.removeComponent(removedComponent);\r\n                        }\r\n                    }\r\n                }\r\n                reader.setDebugState(\"[VERTX:BinaryWriter:Node:ComponentData]\", this);\r\n                this.updateComponentData(reader);\r\n                this.isDirty = false;\r\n            }\r\n            updateComponentData(reader) {\r\n                var bsonReader = null;\r\n                if (this.componentDataType === ComponentDataType.BSON)\r\n                    bsonReader = new Vertex.BSONReader(reader);\r\n                var componentDataLength = reader.readInt32();\r\n                reader.displayDebugState = false;\r\n                for (var id of this.components.values()) {\r\n                    var componentLength = reader.readUInt16();\r\n                    var startIndex = reader.Index;\r\n                    if (this.componentSystem.hasComponentSystem(id)) {\r\n                        reader.setDebugState(\"[VERTX:BinaryWriter:Node:ComponentData:\" + id + \"]\", component);\r\n                        var component = this.getComponent(id);\r\n                        let newComponent = false;\r\n                        if (component === null) {\r\n                            newComponent = true;\r\n                            component = this.createComponent(id);\r\n                        }\r\n                        try {\r\n                            if (componentLength > 0) {\r\n                                if (this.componentDataType === ComponentDataType.BSON) {\r\n                                    component.readDataBSON(bsonReader);\r\n                                }\r\n                                else {\r\n                                    component.readData(reader);\r\n                                }\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            console.error(`[VERTX:Node] An unhandled error occured when deserializing a '${id}' Component.`, {\r\n                                node: this,\r\n                                componentName: id,\r\n                                component: component,\r\n                                componentLength: componentLength,\r\n                                componentDataType: this.componentDataType\r\n                            });\r\n                        }\r\n                        if (newComponent) {\r\n                            this.addComponent(id, component);\r\n                        }\r\n                        component.triggerOnChanged();\r\n                        component.clearDirty();\r\n                        if (reader.Index !== (startIndex + componentLength)) {\r\n                            let dataType = this.componentDataType === ComponentDataType.BSON ? \"BSON\" : \"Binary\";\r\n                            console.error(`Deserialization [${dataType}] error for ${id}.\\n` +\r\n                                `StartIndex: ${startIndex}, Expected Index: ${(startIndex + componentLength)} (${componentLength} bytes), Actual Index: ${reader.Index}`, component);\r\n                            reader.Index = startIndex + componentLength;\r\n                        }\r\n                    }\r\n                    else {\r\n                        reader.skipAhead(componentLength);\r\n                    }\r\n                }\r\n            }\r\n            writeDataBSON(writer) {\r\n                if (this.componentDataType !== ComponentDataType.BSONObject) {\r\n                    console.error(\"Attempted to encode a component to BSON when it is in legacy mode!\", this);\r\n                    return;\r\n                }\r\n                let ctx = writer.startObject();\r\n                writer.writeString(\"Id\", this.id);\r\n                writer.writeString(\"Parent\", this.parent);\r\n                writer.writeString(\"SpaceId\", this.spaceId);\r\n                writer.writeString(\"TokenHandoffPolicy\", TokenHandoffPolicyStrings[this.tokenHandoffPolicy]);\r\n                writer.writeString(\"Name\", this.name);\r\n                writer.writeArray(\"Tags\", this.tags, writer.writeString);\r\n                writer.writeInt32(\"Layer\", this.layer);\r\n                writer.writeString(\"ComponentDataType\", ComponentDataTypeStrings[this.componentDataType]);\r\n                writer.writeArray(\"Components\", this.components, writer.writeString);\r\n                writer.writeObject(\"Data\", this.writeComponentDataBSON.bind(this));\r\n                writer.writeInt32(\"LodPolicy\", this.lodPolicy);\r\n                writer.writeDouble(\"LodDistance\", this.lodDistance);\r\n                writer.endObject(ctx);\r\n            }\r\n            writeComponentDataBSON(writer) {\r\n                let ctx = writer.startObject();\r\n                for (let componentName of this.components) {\r\n                    let component = this.getComponent(componentName);\r\n                    if (component) {\r\n                        writer.writeObject(componentName, component.writeDataBSON.bind(component));\r\n                    }\r\n                }\r\n                writer.endObject(ctx);\r\n            }\r\n            bsonReadAction(name, type, reader) {\r\n                if (name === \"Id\" && type === Vertex.BsonType.String)\r\n                    reader.readString(this, \"id\");\r\n                if (name === \"Parent\" && type === Vertex.BsonType.String)\r\n                    reader.readString(this, \"parent\");\r\n                if (name === \"SpaceId\" && type === Vertex.BsonType.String)\r\n                    reader.readString(this, \"spaceId\");\r\n                if (name === \"TokenHandoffPolicy\" && type === Vertex.BsonType.String)\r\n                    reader.readEnum(this, \"tokenHandoffPolicy\", TokenHandoffPolicyStrings);\r\n                if (name === \"Name\" && type === Vertex.BsonType.String)\r\n                    reader.readString(this, \"name\");\r\n                if (name === \"Tags\" && type === Vertex.BsonType.Array)\r\n                    reader.readArray(this, \"tags\", reader.readString);\r\n                if (name === \"Layer\" && type === Vertex.BsonType.Int32)\r\n                    reader.readInt32(this, \"layer\");\r\n                if (name === \"ComponentDataType\" && type === Vertex.BsonType.String)\r\n                    reader.readEnum(this, \"componentDataType\", ComponentDataTypeStrings);\r\n                if (name === \"Components\" && type === Vertex.BsonType.Array) {\r\n                    let oldComponents = this.components.slice(0);\r\n                    reader.readArray(this, \"components\", reader.readString);\r\n                    for (let removedComponent of oldComponents) {\r\n                        if (this.components.indexOf(removedComponent) === -1) {\r\n                            this.removeComponent(removedComponent);\r\n                        }\r\n                    }\r\n                }\r\n                if (name === \"Data\" && type === Vertex.BsonType.Object)\r\n                    reader.readObject(this.readComponentDataBson.bind(this));\r\n                if (name === \"LodPolicy\" && type === Vertex.BsonType.Int32)\r\n                    reader.readInt32(this, \"lodPolicy\");\r\n                if (name === \"LodDistance\" && type === Vertex.BsonType.Double)\r\n                    reader.readDouble(this, \"lodDistance\");\r\n            }\r\n            readComponentDataBson(name, type, reader) {\r\n                if (this.componentSystem.hasComponentSystem(name)) {\r\n                    var component = this.getComponent(name);\r\n                    let newComponent = false;\r\n                    if (component === null) {\r\n                        newComponent = true;\r\n                        component = this.createComponent(name);\r\n                    }\r\n                    try {\r\n                        component.readDataBSON(reader);\r\n                    }\r\n                    catch (e) {\r\n                        console.error(`[VERTX:Node] An unhandled error occured when deserializing a '${name}' Component.`, {\r\n                            node: this,\r\n                            componentName: name,\r\n                            component: component,\r\n                            componentDataType: this.componentDataType\r\n                        });\r\n                    }\r\n                    if (newComponent) {\r\n                        this.addComponent(name, component);\r\n                    }\r\n                    component.triggerOnChanged();\r\n                    component.clearDirty();\r\n                }\r\n                else {\r\n                    reader.readObjectBlind();\r\n                }\r\n            }\r\n            readDataBSON(reader) {\r\n                if (this.componentDataType !== ComponentDataType.BSONObject) {\r\n                    console.error(\"Attempted to decode a component from BSON when it is in mode:\", this.componentDataType, this);\r\n                    return;\r\n                }\r\n                reader.readObject(this.bsonReadAction.bind(this));\r\n            }\r\n        }\r\n        NodeComponentModel.VertexNode = VertexNode;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let Net;\r\n    (function (Net) {\r\n        class ClientStats {\r\n            constructor() {\r\n                this.sentMessageCount = 0;\r\n                this.rcvMessageCount = 0;\r\n                this.bytesSent = 0;\r\n                this.bytesRecieved = 0;\r\n            }\r\n        }\r\n        Net.ClientStats = ClientStats;\r\n        class Client {\r\n            constructor(uri, spaceId) {\r\n                this.isConnected = false;\r\n                this.openEvent = new Vertex.EventBus();\r\n                this.closeEvent = new Vertex.EventBus();\r\n                this.errorEvent = new Vertex.EventBus();\r\n                this.dataEvent = new Vertex.EventBus();\r\n                this.spaceId = spaceId;\r\n                this.uri = uri;\r\n                this.viewpointId = Vertex.Guid.NewGuid();\r\n                console.log(`[VERTX:Client] Uri: ${this.uri}, SpaceId: ${this.spaceId}, ViewpointID: ${this.viewpointId}`);\r\n            }\r\n            get ViewpointId() {\r\n                return this.viewpointId;\r\n            }\r\n            connect() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                });\r\n            }\r\n            disconnect() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                });\r\n            }\r\n            sendData(buffer) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                });\r\n            }\r\n            sendDataView(buffer) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                });\r\n            }\r\n        }\r\n        Net.Client = Client;\r\n    })(Net = Vertex.Net || (Vertex.Net = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        class Structure {\r\n            constructor() {\r\n            }\r\n            writeData(writer, delta) {\r\n            }\r\n            readData(reader) {\r\n            }\r\n            writeDataBSON(writer) {\r\n                // Detect if this method is being directly invoked or invoked via an override method.\r\n                if (this.writeDataBSON === Structure.prototype.writeDataBSON) {\r\n                    console.warn(\"This structure does not implement writeDataBSON. An empty BSON Object will be written.\", this);\r\n                    const ctx = writer.startObject();\r\n                    writer.endObject(ctx);\r\n                }\r\n                else {\r\n                    console.warn(`Invoking super.writeDataBSON in is unnecessary and has performance implications`, this);\r\n                }\r\n            }\r\n            readDataBSON(reader) {\r\n                // Detect if this method is being directly invoked or invoked via an override method.\r\n                if (this.readDataBSON === Structure.prototype.readDataBSON) {\r\n                    console.warn(\"This structure does not implement readDataBSON. An empty BSON Object will be read.\", this);\r\n                    reader.readObjectBlind();\r\n                }\r\n                else {\r\n                    console.warn(\"Invoking super.readDataBSON is unnecessary and has performance implications\", this);\r\n                }\r\n            }\r\n        }\r\n        NodeComponentModel.Structure = Structure;\r\n        class EmptyArgs extends Structure {\r\n        }\r\n        NodeComponentModel.EmptyArgs = EmptyArgs;\r\n        /**\r\n         * event bus to fire Command messages (or legacy Event messages)\r\n         * */\r\n        class RPCEventBus extends Vertex.EventBus {\r\n            constructor(eventName, c, isBroadcast = false) {\r\n                super();\r\n                this.eventName = eventName;\r\n                this.structConstructor = c;\r\n                this.isBroadcast = isBroadcast || false;\r\n            }\r\n            fireWithArgs(args) {\r\n                this.trigger(args);\r\n            }\r\n            fireFromData(reader) {\r\n                const struct = new this.structConstructor();\r\n                let didRead = false;\r\n                if (reader instanceof Vertex.BSONReader) {\r\n                    struct.readDataBSON(reader);\r\n                    didRead = true;\r\n                }\r\n                if (reader instanceof Vertex.BinaryReader) {\r\n                    struct.readData(reader);\r\n                    didRead = true;\r\n                }\r\n                if (!didRead) {\r\n                    throw new Error(\"Unrecognized Reader Type\");\r\n                }\r\n                this.trigger(struct);\r\n            }\r\n            fire(component, data) {\r\n                // if this is a command (not broadcast)\r\n                //   locally trigger the event if we are the token holder\r\n                //   otherwise send event message\r\n                // if this is a broadcast\r\n                //   assert we are the token holder, then send broadcast message\r\n                if (!this.isBroadcast) {\r\n                    if (component.node.HasToken) {\r\n                        this.trigger(data);\r\n                    }\r\n                    else {\r\n                        let runtime = Vertex.Globals.getRuntime();\r\n                        console.assert(runtime !== null, \"Could not find a valid Vertex Runtime object\");\r\n                        runtime.space.spaceLink.sendRPCMessage(component.node.id, component.name, this.eventName, data);\r\n                    }\r\n                }\r\n                else { // this.isBroadcast == true\r\n                    if (component.node.HasToken !== true) {\r\n                        console.warn(`[VERTX] Not sending broadcast event because we do not control the node ${component.node.id}/${component.name}/${this.eventName}`);\r\n                    }\r\n                    else { // have token\r\n                        let runtime = Vertex.Globals.getRuntime();\r\n                        console.assert(runtime !== null, \"Could not find a valid Vertex Runtime object\");\r\n                        runtime.space.spaceLink.sendBroadcastMessage(component.node.id, component.name, this.eventName, data);\r\n                        // todo: this might be the wrong place to do it\r\n                        // when we send a broadcast, the server does not respond back to us,\r\n                        // but we should fire that event synthetically on the client for consistency.\r\n                        this.trigger(data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        NodeComponentModel.RPCEventBus = RPCEventBus;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"space.ts\"/>\r\n/// <reference path=\"Websocket/client.ts\"/>\r\n/// <reference path=\"eventbus.ts\" />\r\n/// <reference path=\"BinarySerializer/binaryreader.ts\" />\r\n/// <reference path=\"BinarySerializer/binarywriter.ts\" />\r\n/// <reference path=\"ComponentModel/node.ts\"/>\r\n/// <reference path=\"ComponentModel/rpc.ts\"/>\r\n//Connects a VERTX space to a running instance of the runtime\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let MessageType;\r\n    (function (MessageType) {\r\n        MessageType[MessageType[\"Test\"] = 0] = \"Test\";\r\n        MessageType[MessageType[\"Control\"] = 1] = \"Control\";\r\n        MessageType[MessageType[\"State\"] = 2] = \"State\";\r\n        /** Legacy RPC Command */\r\n        MessageType[MessageType[\"Event\"] = 3] = \"Event\";\r\n        MessageType[MessageType[\"Destroy\"] = 4] = \"Destroy\";\r\n        MessageType[MessageType[\"Create\"] = 5] = \"Create\";\r\n        MessageType[MessageType[\"AcquireToken\"] = 6] = \"AcquireToken\";\r\n        MessageType[MessageType[\"AcquireTokenResult\"] = 7] = \"AcquireTokenResult\";\r\n        /** Legacy Broadcast Event */\r\n        MessageType[MessageType[\"BroadcastEvent\"] = 8] = \"BroadcastEvent\";\r\n        MessageType[MessageType[\"ReleaseToken\"] = 9] = \"ReleaseToken\";\r\n        //DataChannel Messages\r\n        MessageType[MessageType[\"DCSubscribe\"] = 10] = \"DCSubscribe\";\r\n        MessageType[MessageType[\"DCMessage\"] = 11] = \"DCMessage\";\r\n        MessageType[MessageType[\"DCUnsubscribe\"] = 12] = \"DCUnsubscribe\";\r\n        //BSON State messages\r\n        MessageType[MessageType[\"BSONState\"] = 13] = \"BSONState\";\r\n        // Dedicated Heartbeat message\r\n        MessageType[MessageType[\"Heartbeat\"] = 14] = \"Heartbeat\";\r\n        /** BSON RPC Command */\r\n        MessageType[MessageType[\"Command\"] = 15] = \"Command\";\r\n        MessageType[MessageType[\"TickRateControl\"] = 16] = \"TickRateControl\";\r\n        MessageType[MessageType[\"ServerResponse\"] = 17] = \"ServerResponse\";\r\n        MessageType[MessageType[\"ViewpointControl\"] = 18] = \"ViewpointControl\";\r\n        /** BSON Broadcast Event */\r\n        MessageType[MessageType[\"Broadcast\"] = 19] = \"Broadcast\";\r\n    })(MessageType = Vertex.MessageType || (Vertex.MessageType = {}));\r\n    ;\r\n    class TokenResult {\r\n    }\r\n    Vertex.TokenResult = TokenResult;\r\n    ;\r\n    class DataChannel {\r\n        constructor(space) {\r\n            this.onMessage = new Vertex.EventBus();\r\n            this.isInitialized = false;\r\n            this.spaceLink = space.spaceLink;\r\n        }\r\n        init() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.isInitialized)\r\n                    return;\r\n                this.isInitialized = true;\r\n                if (!this.spaceLink) {\r\n                    console.error(\"[VERTX:DataChannel] This DataChannel does not have a valid SpaceLink\");\r\n                    return;\r\n                }\r\n                console.log(\"[VERTX:DataChannel] Creating DataChannel: \" + this.id);\r\n                yield this.spaceLink.sendDCSubscribe(this.id, this);\r\n            });\r\n        }\r\n        destroy() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (!this.spaceLink) {\r\n                    console.error(\"[VERTX:DataChannel] This DataChannel does not have a valid SpaceLink\");\r\n                    return;\r\n                }\r\n                yield this.spaceLink.sendDCUnsubscribe(this.id, this);\r\n            });\r\n        }\r\n        sendMessage(message) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                yield this.spaceLink.sendDCMessage(this.id, message);\r\n            });\r\n        }\r\n    }\r\n    Vertex.DataChannel = DataChannel;\r\n    class SpaceLink {\r\n        constructor(space, client) {\r\n            this.readyEvent = new Vertex.EventBus();\r\n            this.updateTaskId = -1;\r\n            this.heartbeatTaskId = -1;\r\n            this.dispatchTable = [];\r\n            this.onTokenAcquireResult = new Vertex.EventBus();\r\n            this.dataChannels = new Map();\r\n            this.updateWriter = null;\r\n            this.space = space;\r\n            this.client = client;\r\n            var self = this;\r\n            var callback = () => {\r\n                this.update();\r\n            };\r\n            //forward bind events\r\n            this.client.openEvent.on(() => {\r\n                console.log(\"[VERTX:SpaceLink] Connected to socket\");\r\n                this.readyEvent.trigger();\r\n                var updateRate = 1000 / 60; //set 30 tick update rate\r\n                self.updateTaskId = setInterval(function () {\r\n                    self.update();\r\n                }, updateRate);\r\n                // note: the newest space server will send heartbeat messages (type 14/0x0e) which the client\r\n                // auto-responds with, which removes the need for this heartbeat loop.\r\n                // however, for backwards-compatibility with older space servers, we will still manually send heartbeat\r\n                // messages. This does not have any real drawback but is technically not necessary if the space\r\n                // server is definitely a version that sends heartbeats.\r\n                // note: chromium browsers run intervals at significantly reduced rates when in background,\r\n                // which means this sort of thing isn't that reliable.\r\n                // the newer space server (server-initiated heartbeat) fixes this issue, since chromium\r\n                // etc will still fire websocket events in this situation, just not intervals/timeouts \r\n                let disableHeartbeat = sessionStorage && sessionStorage.getItem(\"Vertex._clientHeartbeatDisabled\") || null;\r\n                if (disableHeartbeat && disableHeartbeat != \"false\") {\r\n                    console.warn(`[VERTX:SpaceLink] The 'Vertex._clientHeartbeatDisabled' debug setting is set in SessionStorage.\\n` +\r\n                        `This may cause unexpected disconnection on some VERTX Stacks.`);\r\n                }\r\n                else {\r\n                    self.heartbeatTaskId = setInterval(function () {\r\n                        self.sendHeartbeatMessage();\r\n                    }, 2000);\r\n                }\r\n            });\r\n            this.client.closeEvent.on(() => {\r\n                console.warn(\"[VERTX:SpaceLink] Disconnected from socket\");\r\n                if (this.updateTaskId !== -1)\r\n                    clearInterval(this.updateTaskId);\r\n            });\r\n            this.dispatchTable[MessageType.Test] = this.handleNoMessage.bind(this);\r\n            this.dispatchTable[MessageType.Control] = this.handleNoMessage.bind(this);\r\n            this.dispatchTable[MessageType.State] = this.handleStateMessage.bind(this);\r\n            this.dispatchTable[MessageType.BSONState] = this.handleBSONStateMessage.bind(this);\r\n            this.dispatchTable[MessageType.Create] = this.handleNoMessage.bind(this);\r\n            this.dispatchTable[MessageType.Destroy] = this.handleDestroyMessage.bind(this);\r\n            this.dispatchTable[MessageType.Event] = this.handleRPCMessage.bind(this);\r\n            this.dispatchTable[MessageType.BroadcastEvent] = this.handleBroadcastMessage.bind(this);\r\n            this.dispatchTable[MessageType.AcquireTokenResult] = this.handleTokenAcquireResult.bind(this);\r\n            this.dispatchTable[MessageType.DCMessage] = this.handleDCMessage.bind(this);\r\n            this.dispatchTable[MessageType.Heartbeat] = this.handleHeartbeatMessage.bind(this);\r\n            this.client.dataEvent.on((buffer) => {\r\n                //console.log(\"[VERTX:SpaceLink] Got data \" + buffer.byteLength + \"bytes\");\r\n                self.processMessage(buffer);\r\n            });\r\n        }\r\n        sendDCMessage(id, message) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var writer = new Vertex.BinaryWriter(1024 * 10);\r\n                writer.writeByte(MessageType.DCMessage);\r\n                writer.writeString(id);\r\n                writer.writeString(message);\r\n                var buffer = writer.toBuffer();\r\n                yield this.client.sendData(buffer);\r\n            });\r\n        }\r\n        sendDCSubscribe(id, dataChannel) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.dataChannels.has(id)) {\r\n                    console.error(\"This SpaceLink already has a DataChannel with the id of: \" + id);\r\n                    return;\r\n                }\r\n                this.dataChannels[id] = dataChannel;\r\n                var writer = new Vertex.BinaryWriter(1024 * 4);\r\n                writer.writeByte(MessageType.DCSubscribe);\r\n                writer.writeString(id);\r\n                var buffer = writer.toBuffer();\r\n                yield this.client.sendData(buffer);\r\n            });\r\n        }\r\n        sendDCUnsubscribe(id, dataChannel) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.dataChannels.has(id)) {\r\n                    this.dataChannels[id] = dataChannel;\r\n                    var writer = new Vertex.BinaryWriter(1024 * 4);\r\n                    writer.writeByte(MessageType.DCUnsubscribe);\r\n                    writer.writeString(id);\r\n                    var buffer = writer.toBuffer();\r\n                    yield this.client.sendData(buffer);\r\n                    this.dataChannels.delete(id);\r\n                }\r\n                else {\r\n                    console.error(\"This SpaceLink does not have a DataChannel with the id of: \" + id);\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        handleDCMessage(reader) {\r\n            let channelId = reader.readString();\r\n            let message = reader.readString();\r\n            let channel = this.dataChannels[channelId];\r\n            if (channel) {\r\n                //console.log(\"Got DCMessage for: \" + channelId);\r\n                //console.log(message);\r\n                //console.log(this.dataChannels);\r\n                channel.onMessage.trigger(message);\r\n            }\r\n            else {\r\n                console.error(\"Got a DCMessage for context: \" + channelId + \" but that context was not found on this client\");\r\n            }\r\n            //if (this.dataChannels.has(channelId)) {\r\n            //}\r\n        }\r\n        processMessage(buffer) {\r\n            if (buffer.byteLength === 0) {\r\n                console.warn(\"Recieved empty buffer\");\r\n                return;\r\n            }\r\n            var reader = new Vertex.BinaryReader(buffer);\r\n            //reader.displayDebugContext = true;\r\n            //reader.displayDebugState = true;\r\n            reader.setDebugState(\"[VERTX:SpaceLink] Got buffer: \" + buffer.byteLength + \"bytes\", this);\r\n            var type = reader.readByte();\r\n            //a jam to send the reader to the dispatcher\r\n            var dispatchFunction = this.dispatchTable[type];\r\n            if (typeof dispatchFunction === 'function')\r\n                dispatchFunction(reader);\r\n            else\r\n                console.warn(`[SpaceLink] Cannot process message type: ${type}, ignoring...`);\r\n            //dispatchFunction.call(this, reader);\r\n        }\r\n        handleNoMessage(reader) {\r\n        }\r\n        handleHeartbeatMessage(reader) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                reader.setDebugState(\"[VERTX:SpaceLink:ControlMessage]\", this);\r\n                // note: if control messages are implemented further, they must be read properly here.\r\n                // for now, control messages are all empty, so there's nothing to read.\r\n                yield this.sendHeartbeatMessage();\r\n            });\r\n        }\r\n        handleStateMessage(reader) {\r\n            reader.setDebugState(\"[VERTX:SpaceLink:StateMessage]\", this);\r\n            this.space.readData(reader);\r\n        }\r\n        handleBSONStateMessage(reader) {\r\n            reader.setDebugState(\"[VERTX:SpaceLink:StateMessage]\", this);\r\n            this.space.readDataBSON(new Vertex.BSONReader(reader));\r\n        }\r\n        sendHeartbeatMessage() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var writer = new Vertex.BinaryWriter(1);\r\n                writer.writeByte(MessageType.Heartbeat);\r\n                yield this.client.sendData(writer.toBuffer());\r\n            });\r\n        }\r\n        sendDeleteMessage(node) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var writer = new Vertex.BinaryWriter(50);\r\n                writer.writeByte(MessageType.Destroy);\r\n                //Only support single node deletions for now, will add group deletions later\r\n                //this functionality is mainly used by the server to clean up an exiting client.\r\n                writer.writeInt32(1);\r\n                writer.writeString(node.id);\r\n                yield this.client.sendData(writer.toBuffer());\r\n            });\r\n        }\r\n        handleDestroyMessage(reader) {\r\n            reader.setDebugState(\"[VERTX:SpaceLink:DeleteMessage]\", this);\r\n            var numNodes = reader.readInt32();\r\n            for (var i = 0; i < numNodes; i++) {\r\n                var nodeId = reader.readString();\r\n                var node = this.space.findNode(nodeId);\r\n                if (node) {\r\n                    this.space.destroyNode(node, false);\r\n                }\r\n            }\r\n        }\r\n        handleBroadcastMessage(reader) {\r\n            var nodeId = reader.readString();\r\n            var componentId = reader.readString();\r\n            var eventName = reader.readString();\r\n            var node = this.space.findNode(nodeId);\r\n            //we only execute data events on nodes we actually don't own\r\n            if (!node.HasToken) {\r\n                var component = node.getComponent(componentId);\r\n                var event = component.events.get(eventName);\r\n                if (event)\r\n                    event.fireFromData(reader);\r\n                else\r\n                    console.error(`Recieved Broadcast RPC Message for event '${eventName}' on '${componentId}' of node ${nodeId}, but no event with that name exists for that component.`, component, component.events);\r\n            }\r\n            else {\r\n                console.warn(\"Got Broadcast RPC for node with token ownership: \" + nodeId);\r\n            }\r\n        }\r\n        handleRPCMessage(reader) {\r\n            var nodeId = reader.readString();\r\n            var componentId = reader.readString();\r\n            var eventName = reader.readString();\r\n            console.debug(`[VERTX:SpaceLink:handleRPCMessage] Received RPC ${nodeId}:${componentId} ${eventName}`);\r\n            var node = this.space.findNode(nodeId);\r\n            if (!node) {\r\n                console.warn(`[VERTX:SpaceLink:handleRPCMessage] Ignoring RPC '${eventName}' for ${nodeId}:${componentId} because the node does not exist locally.`);\r\n            }\r\n            //we only execute data events on nodes we actually own\r\n            if (node.HasToken) {\r\n                var component = node.getComponent(componentId);\r\n                if (component) {\r\n                    var event = component.events.get(eventName);\r\n                    if (event)\r\n                        event.fireFromData(reader);\r\n                    else\r\n                        console.error(`[VERTX:SpaceLink:handleRPCMessage] Ignoring RPC '${eventName}' for ${nodeId}:${componentId} because the event does not exist on that component.`);\r\n                }\r\n                else {\r\n                    console.error(`[VERTX:SpaceLink:handleRPCMessage] Ignoring RPC '${eventName}' for ${nodeId}:${componentId} because that component does not exist on that node.`);\r\n                }\r\n            }\r\n            else {\r\n                console.debug(`[VERTX:SpaceLink:handleRPCMessage] Ignoring RPC '${eventName}' for ${nodeId}:${componentId} because we don't have the token for that node.`);\r\n            }\r\n        }\r\n        sendRPCMessage(nodeId, componentId, eventId, data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var targetNode = this.space.findNode(nodeId);\r\n                //don't use the wire if we're sending messages to ourself\r\n                if (targetNode.HasToken) {\r\n                    var component = targetNode.getComponent(componentId);\r\n                    var event = component.events.get(eventId);\r\n                    event.fireWithArgs(data);\r\n                }\r\n                else {\r\n                    var writer = new Vertex.BinaryWriter(1024 * 4);\r\n                    writer.writeByte(MessageType.Event);\r\n                    writer.writeString(nodeId);\r\n                    writer.writeString(componentId);\r\n                    writer.writeString(eventId);\r\n                    data.writeData(writer, false);\r\n                    var buffer = writer.toBuffer();\r\n                    yield this.client.sendData(buffer);\r\n                }\r\n            });\r\n        }\r\n        sendBroadcastMessage(nodeId, componentId, eventId, data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var targetNode = this.space.findNode(nodeId);\r\n                //don't use the wire if we're sending messages to ourself\r\n                if (targetNode.HasToken) {\r\n                    // todo: this was never here before, is it correct?\r\n                    var writer = new Vertex.BinaryWriter(1024 * 4);\r\n                    writer.writeByte(MessageType.BroadcastEvent);\r\n                    writer.writeString(nodeId);\r\n                    writer.writeString(componentId);\r\n                    writer.writeString(eventId);\r\n                    data.writeData(writer, false);\r\n                    var buffer = writer.toBuffer();\r\n                    yield this.client.sendData(buffer);\r\n                }\r\n            });\r\n        }\r\n        handleTokenAcquireResult(reader) {\r\n            var result = new TokenResult();\r\n            var nodeCount = reader.readInt32();\r\n            for (var i = 0; i < nodeCount; i++) {\r\n                result.id = reader.readString();\r\n                result.context = reader.readString();\r\n                result.result = reader.readBool();\r\n                if (result.result === false) {\r\n                    var node = this.space.findNode(result.id);\r\n                    if (node) {\r\n                        node.hasToken = false;\r\n                    }\r\n                }\r\n                this.onTokenAcquireResult.trigger(result);\r\n            }\r\n        }\r\n        sendAcquireTokenMessage(nodeId, context, policy) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var writer = new Vertex.BinaryWriter(1024 * 4);\r\n                writer.writeByte(MessageType.AcquireToken);\r\n                writer.writeInt32(1);\r\n                writer.writeString(nodeId);\r\n                writer.writeString(context);\r\n                writer.writeString(Vertex.NodeComponentModel.EnumAsString(policy));\r\n                var buffer = writer.toBuffer();\r\n                yield this.client.sendData(buffer);\r\n            });\r\n        }\r\n        sendReleaseTokenMessage(nodeId, policy) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var writer = new Vertex.BinaryWriter(1024 * 4);\r\n                writer.writeByte(MessageType.ReleaseToken);\r\n                writer.writeInt32(1);\r\n                writer.writeString(nodeId);\r\n                writer.writeString(Vertex.NodeComponentModel.EnumAsString(policy));\r\n                var buffer = writer.toBuffer();\r\n                yield this.client.sendData(buffer);\r\n            });\r\n        }\r\n        connect() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                yield this.client.connect();\r\n            });\r\n        }\r\n        update() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                //increase the size of the write buffer to 50k this will hopefully head off issues with large nodes full of text!\r\n                if (this.updateWriter == null)\r\n                    this.updateWriter = new Vertex.BinaryWriter(1024 * 50);\r\n                this.updateWriter.clear();\r\n                //we soft reset and spin this as there can only be one and it saves tonnes of memory\r\n                //we run both update methods in this mode\r\n                //this should slowly drain existing scenes of Binary and BSON nodes in favour of new ones\r\n                var writer = this.updateWriter;\r\n                writer.Index = 0;\r\n                let startIndex = writer.Index;\r\n                {\r\n                    writer.writeByte(MessageType.State);\r\n                    this.space.writeData(writer, false);\r\n                    if (writer.Index - startIndex > 5) { // message byte, then 4 size bytes bytes \r\n                        yield this.client.sendDataView(writer.asBufferView());\r\n                    }\r\n                }\r\n                writer = this.updateWriter;\r\n                writer.Index = 0;\r\n                {\r\n                    writer.writeByte(MessageType.BSONState);\r\n                    var bsonWriter = new Vertex.BSONWriter(writer);\r\n                    this.space.writeDataBSON(bsonWriter);\r\n                    if ((writer.Index - startIndex) > 6) { // message byte, then 4 size bytes bytes, then a null terminator\r\n                        yield this.client.sendDataView(writer.asBufferView());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    Vertex.SpaceLink = SpaceLink;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let Net;\r\n    (function (Net) {\r\n        class WebSocketClient extends Net.Client {\r\n            constructor(uri, spaceId) {\r\n                super(uri, spaceId);\r\n                this.socket = null;\r\n                this.stats = new Net.ClientStats();\r\n            }\r\n            connect() {\r\n                const _super = name => super[name];\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    yield _super(\"connect\").call(this);\r\n                    var self = this;\r\n                    return new Promise((resolve, reject) => {\r\n                        var urlParams = \"?viewpointId=\" + encodeURIComponent(this.viewpointId) + \"&spaceId=\" + encodeURIComponent(this.spaceId);\r\n                        if (Vertex.Globals.bearerToken)\r\n                            urlParams += \"&bearerToken=\" + encodeURIComponent(Vertex.Globals.bearerToken);\r\n                        this.socket = new WebSocket(this.uri + urlParams);\r\n                        this.socket.binaryType = \"arraybuffer\";\r\n                        this.socket.onclose = (evt) => {\r\n                            console.warn(`WebSocket Closed: (WS Code: ${evt.code}). Reason Given by Server:\\n${evt.reason}`);\r\n                            reject(`WebSocket Closed: (WS Code: ${evt.code}). Reason Given by Server:\\n${evt.reason}`);\r\n                            self.onClose(evt);\r\n                        };\r\n                        this.socket.onerror = (evt) => {\r\n                            reject(`WebSocket Error:\\n${evt.type}`);\r\n                            let errorArg = {\r\n                                message: 'A WebSocket error ocurred',\r\n                                event: evt\r\n                            };\r\n                            self.onError(errorArg);\r\n                        };\r\n                        this.socket.onmessage = (evt) => {\r\n                            resolve();\r\n                            self.onMessage(evt);\r\n                        };\r\n                        this.socket.onopen = (evt) => {\r\n                            self.onOpen(evt);\r\n                        };\r\n                    });\r\n                });\r\n            }\r\n            disconnect() {\r\n                const _super = name => super[name];\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    console.log(\"[Vertex:WebSocketClient] Client called disconnect\");\r\n                    yield _super(\"disconnect\").call(this);\r\n                    if (this.socket) {\r\n                        this.socket.close(1000, \"Client called disconnect\");\r\n                    }\r\n                });\r\n            }\r\n            onClose(event) {\r\n                this.isConnected = false;\r\n                this.closeEvent.trigger(`Disconnect (${event.code}): ${event.reason}`);\r\n            }\r\n            onMessage(event) {\r\n                if (event.data instanceof ArrayBuffer) {\r\n                    this.dataEvent.trigger(event.data);\r\n                }\r\n            }\r\n            onOpen(event) {\r\n                this.isConnected = true;\r\n                this.openEvent.trigger();\r\n            }\r\n            onError(error) {\r\n                this.isConnected = false;\r\n                this.errorEvent.trigger(error);\r\n            }\r\n            sendData(buffer) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (!this.isConnected)\r\n                        return;\r\n                    this.stats.sentMessageCount++;\r\n                    this.stats.bytesSent += buffer.byteLength;\r\n                    Vertex.Globals.networkStatsCallback.trigger(this.stats);\r\n                    this.socket.send(buffer);\r\n                });\r\n            }\r\n            sendDataView(buffer) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (!this.isConnected)\r\n                        return;\r\n                    this.stats.sentMessageCount++;\r\n                    this.stats.bytesSent += buffer.byteLength;\r\n                    Vertex.Globals.networkStatsCallback.trigger(this.stats);\r\n                    this.socket.send(buffer);\r\n                });\r\n            }\r\n        }\r\n        Net.WebSocketClient = WebSocketClient;\r\n    })(Net = Vertex.Net || (Vertex.Net = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let SpaceDirectory;\r\n    (function (SpaceDirectory) {\r\n        /**\r\n         * Perform a lookup in the Space Directory.\r\n         * Returns 'null' upon failure.\r\n         * @param id the space to look up\r\n         * @param stackHost the hostname of the VERTX stack. May be accessible via Vertex.Globals.stackHost\r\n         * @param token a bearer token to look up with.\r\n         */\r\n        function lookupSpace(id, stackHost, token) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (!id)\r\n                    throw new Error(`id is required`);\r\n                if (!stackHost)\r\n                    throw new Error(`stackHost is required`);\r\n                let runningOnVertexCloud = location.hostname === \"vertx.cloud\" || location.hostname.endsWith(\".vertx.cloud\");\r\n                if (!token && !runningOnVertexCloud)\r\n                    throw new Error(`token is required`);\r\n                try {\r\n                    const url = `https://${stackHost}/core/directory/space/${id}`;\r\n                    const init = {\r\n                        method: 'POST',\r\n                        credentials: 'include',\r\n                        headers: {} // must declare this so we can additively set them later\r\n                    };\r\n                    if (token)\r\n                        init.headers[\"Authorization\"] = `Bearer ${token}`;\r\n                    const response = yield fetch(url, init);\r\n                    if (!response.ok) {\r\n                        if (response.body) {\r\n                            const bodyResponse = yield response.text();\r\n                            console.warn(`[VERTX] Space Directory Lookup for '${id}' failed. (${response.status} ${response.statusText})`, bodyResponse);\r\n                        }\r\n                        else {\r\n                            console.warn(`[VERTX] Space Directory Lookup for '${id}' failed. (${response.status} ${response.statusText})`);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    const body = yield response.json();\r\n                    if (!body) {\r\n                        throw new Error(`Directory Lookup returned unexpected value`);\r\n                    }\r\n                    return body;\r\n                }\r\n                catch (e) {\r\n                    console.warn(`[VERTX] Space Directory Lookup failed. The directory API may not be available on the stack '${stackHost}'.`, e);\r\n                    return null;\r\n                }\r\n            });\r\n        }\r\n        SpaceDirectory.lookupSpace = lookupSpace;\r\n    })(SpaceDirectory = Vertex.SpaceDirectory || (Vertex.SpaceDirectory = {}));\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"BinarySerializer/iserializable.ts\"/>\r\n/// <reference path=\"BinarySerializer/binaryreader.ts\"/>\r\n/// <reference path=\"BinarySerializer/binarywriter.ts\"/>\r\n/// <reference path=\"ComponentModel/node.ts\"/>\r\n/// <reference path=\"spacelink.ts\"/>\r\n/// <reference path=\"guid.ts\"/>\r\n/// <reference path=\"Websocket/websocketclient.ts\"/>\r\n/// <reference path=\"runtime.ts\"/>\r\n/// <reference path=\"spacedirectory.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    //Space host, container for the running space and it's entity heirachy\r\n    class Space {\r\n        constructor(id, connect) {\r\n            this.nodes = new Map();\r\n            this.defaultComponentDataType = Vertex.NodeComponentModel.ComponentDataType.BSONObject;\r\n            this.tokenResultCallbacks = new Map();\r\n            this.id = id;\r\n            if (connect === true) {\r\n                console.warn(`[VERTX.Space] The 'connect' parameter of the Space constructor is obsolete.`);\r\n            }\r\n            if (connect === false) {\r\n                throw new Error(\"The 'connect' parameter of the Space constructor is obsolete\");\r\n            }\r\n        }\r\n        get Id() { return this.id; }\r\n        get Name() { return this.name; }\r\n        init() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                // perform directory lookup.\r\n                const directoryResult = yield Vertex.SpaceDirectory.lookupSpace(this.id, Vertex.Globals.vertexStackUrl, Vertex.Globals.bearerToken);\r\n                // if not found, set up a client and legacy SpaceLink with default /space/ url\r\n                const isValidLookup = !!directoryResult && !!directoryResult.server;\r\n                if (!isValidLookup) {\r\n                    console.log(\"[VERTX] Space Directory lookup failed. Setting up Legacy SpaceLink...\");\r\n                    const spaceLink = yield this.createLegacySpaceLink(`wss://${Vertex.Globals.vertexStackUrl}/space/`);\r\n                    this.spaceLink = spaceLink;\r\n                }\r\n                // if found, set up a client based on version, and use URL from directory lookup.\r\n                if (isValidLookup) {\r\n                    console.log(`[VERTX] Space Directory lookup succeeded. Will connect to space ${directoryResult.spaceId} on ${directoryResult.server.url} using protocol ${directoryResult.server.protocol}`);\r\n                    switch (directoryResult.server.protocol) {\r\n                        case \"wss/2.0\": {\r\n                            const spaceLink = yield this.createSpaceLink2_0(directoryResult.server.url);\r\n                            this.spaceLink = spaceLink;\r\n                            break;\r\n                        }\r\n                        case \"wss/1.0\": {\r\n                            const spaceLink = yield this.createLegacySpaceLink(directoryResult.server.url);\r\n                            this.spaceLink = spaceLink;\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            // unknown protocol\r\n                            throw new Error(`The current VERTX Runtime cannot connect to this space. The protocol '${directoryResult.server.protocol}' is not supported in this version.`);\r\n                        }\r\n                    }\r\n                }\r\n                // connect spacelink\r\n                if (this.spaceLink) {\r\n                    this.spaceLink.onTokenAcquireResult.on(this.onAcquireTokenCallback.bind(this));\r\n                    yield this.spaceLink.connect();\r\n                    if (this.spaceLink instanceof Vertex.BSONSpaceLink) {\r\n                        console.warn(`[VERTX] Setting Client Viewpoint to [0,0,0] with a radius of 100m\\nFor performance, specify a smaller radius and regularly update your Viewpoint by invoking space.setClientViewpoint().`);\r\n                        yield this.setClientViewpoint({ position: [0, 0, 0], radius: 100 });\r\n                        console.log(`[VERTX] Requesting TickRate of 30Hz.\\nFor higher/lower performance scenarios, invoke 'space.setClientTickrate(30)' to increase/decrease the message frequency from the space.`);\r\n                        yield this.setClientTickrate(30);\r\n                    }\r\n                }\r\n                else {\r\n                    console.warn(\"[VERTX] No SpaceLink is specified. The space will run in offline mode.\");\r\n                }\r\n            });\r\n        }\r\n        createLegacySpaceLink(serverUrl) {\r\n            const client = new Vertex.Net.WebSocketClient(serverUrl, this.id);\r\n            const spaceLink = new Vertex.SpaceLink(this, client);\r\n            return spaceLink;\r\n        }\r\n        createSpaceLink2_0(serverUrl) {\r\n            const client = Vertex.Globals.runtime.createNetworkClient(serverUrl, this.id);\r\n            const spaceLink = new Vertex.BSONSpaceLink(this, client);\r\n            return spaceLink;\r\n        }\r\n        createNode(name) {\r\n            var node = new Vertex.NodeComponentModel.VertexNode(Vertex.Globals.runtime.componentSystem, this);\r\n            console.log(\"[VERTX:Space] Created local node: \" + node.id);\r\n            node.componentDataType = this.defaultComponentDataType;\r\n            node.tokenHandoffPolicy = Vertex.NodeComponentModel.TokenHandoffPolicy.Destroy;\r\n            node.name = name;\r\n            node.hasToken = true;\r\n            Vertex.Globals.event.fire(\"space:nodeCreated\", node);\r\n            return node;\r\n        }\r\n        createNodeFromData(reader) {\r\n            var node = new Vertex.NodeComponentModel.VertexNode(Vertex.Globals.runtime.componentSystem, this);\r\n            node.readData(reader);\r\n            console.log(\"[VERTX:Space] Created node from data: \" + node.id);\r\n            Vertex.Globals.event.fire(\"space:nodeCreated\", node);\r\n            return node;\r\n        }\r\n        createNodeFromBSONData(reader) {\r\n            var node = new Vertex.NodeComponentModel.VertexNode(Vertex.Globals.runtime.componentSystem, this);\r\n            node.componentDataType = Vertex.NodeComponentModel.ComponentDataType.BSONObject;\r\n            node.readDataBSON(reader);\r\n            console.log(\"[VERTX:Space] Created node from data: \" + node.id);\r\n            Vertex.Globals.event.fire(\"space:nodeCreated\", node);\r\n            return node;\r\n        }\r\n        addNode(node) {\r\n            console.log(\"[VERTX:Space] Added node: \" + node.id);\r\n            if (this.nodes.has(node.id)) {\r\n                console.error(\"A node with the ID of \" + node.id + \" was already added to the space\");\r\n            }\r\n            else {\r\n                this.nodes.set(node.id, node);\r\n            }\r\n            //todo: validate this behaviour\r\n            if (node.HasToken) {\r\n                node.HasChanges = true;\r\n                //manually fire this when the object is added to ensure it starts in a good state\r\n                for (var component of node.components) {\r\n                    node.getComponent(component).triggerOnChanged();\r\n                }\r\n                //we force a connection update here so the scene is in a good state when RPC's get sent\r\n                this.spaceLink.update();\r\n            }\r\n            Vertex.Globals.event.fire(\"space:nodeAdded\", node);\r\n        }\r\n        addNodeAndReleaseToken(node, policy) {\r\n            this.addNode(node);\r\n            if (node.HasToken)\r\n                node.releaseToken(policy);\r\n        }\r\n        destroyNode(node, propogate = true) {\r\n            console.log(\"[VERTX:Space] Removed node: \" + node.id);\r\n            //we remove components backwards in case their state has additive \r\n            //dependencies, this is dumb, we should resolve dependencies instead\r\n            //we might want to do this as a method on the node itself? \r\n            if (propogate) {\r\n                this.spaceLink.sendDeleteMessage(node);\r\n            }\r\n            // Since reverse reverses the array in-place, AND 'removeComponent' results\r\n            // in the component being removed from node.components, we need to make a copy to iterate over.\r\n            let iter = node.components\r\n                .slice(0, node.components.length)\r\n                .reverse();\r\n            for (var id of iter) {\r\n                try {\r\n                    node.removeComponent(id);\r\n                }\r\n                // make sure we remove all components, even if one misbehaves\r\n                catch (e) {\r\n                    console.error(`Unhandled error while removing ${id} Component`, { error: e, component: id, node: node });\r\n                }\r\n            }\r\n            node.onDestroy.trigger(node);\r\n            node.event.fire(\"onDestroy\", node);\r\n            this.nodes.delete(node.id);\r\n            Vertex.Globals.event.fire(\"space:nodeDestroyed\", node);\r\n        }\r\n        findNode(id) {\r\n            if (this.nodes.has(id))\r\n                return this.nodes.get(id);\r\n            return null;\r\n        }\r\n        acquireToken(node, policy, success) {\r\n            var privateNode = node;\r\n            privateNode.hasToken = true;\r\n            node.tokenHandoffPolicy = policy;\r\n            var nodeId = node.id;\r\n            var context = Vertex.Guid.NewGuid();\r\n            this.spaceLink.sendAcquireTokenMessage(nodeId, context, policy);\r\n            this.tokenResultCallbacks[context] = success;\r\n        }\r\n        onAcquireTokenCallback(result) {\r\n            var callback = this.tokenResultCallbacks[result.context];\r\n            if (callback)\r\n                callback(result);\r\n        }\r\n        releaseToken(node, policy) {\r\n            var privateNode = node;\r\n            privateNode.hasToken = false;\r\n            node.tokenHandoffPolicy = policy;\r\n            this.spaceLink.sendReleaseTokenMessage(node.id, policy);\r\n            //console.log(\"Releasing Node\");\r\n        }\r\n        writeData(writer, delta) {\r\n            var dirtyNodes = [];\r\n            for (var node of this.nodes.values()) {\r\n                if (node.doNotSerialize)\r\n                    continue;\r\n                if ((node.HasToken && node.HasChanges && (node.componentDataType === 0 || node.componentDataType === 1))) {\r\n                    dirtyNodes.push(node);\r\n                }\r\n            }\r\n            writer.writeInt32(dirtyNodes.length);\r\n            if (dirtyNodes.length > 0) {\r\n                writer.setDebugState(\"[VERTX:Space]\", this);\r\n                writer.setDebugState(\"[VERTX:Space:\" + dirtyNodes.length + \" Nodes]\", this);\r\n            }\r\n            for (var anon of dirtyNodes) {\r\n                var dirtyNode = anon;\r\n                writer.writeString(dirtyNode.id);\r\n                dirtyNode.writeData(writer, delta);\r\n                dirtyNode.HasChanges = false;\r\n            }\r\n        }\r\n        writeDataBSON(writer) {\r\n            var dirtyNodes = [];\r\n            for (var node of this.nodes.values()) {\r\n                if (node.doNotSerialize)\r\n                    continue;\r\n                if ((node.HasToken && node.HasChanges && node.componentDataType === Vertex.NodeComponentModel.ComponentDataType.BSONObject)) {\r\n                    dirtyNodes.push(node);\r\n                }\r\n            }\r\n            let ctx = writer.startObject();\r\n            //if (dirtyNodes.length > 0)\r\n            //    console.log(\"Writing \" + dirtyNodes.length + \" nodes\");\r\n            for (let dirtyNode of dirtyNodes) {\r\n                //var dirtyNode = anon as Vertex.NodeComponentModel.VertexNode;\r\n                writer.writeObject(dirtyNode.id, dirtyNode.writeDataBSON.bind(dirtyNode));\r\n                dirtyNode.HasChanges = false;\r\n            }\r\n            writer.endObject(ctx);\r\n        }\r\n        readData(reader) {\r\n            var numNodes = reader.readInt32();\r\n            if (numNodes > 0) {\r\n                reader.setDebugState(\"[VERTX:Space]\", this);\r\n                reader.setDebugState(\"[VERTX:Space:\" + numNodes + \" Nodes]\", this);\r\n            }\r\n            for (var i = 0; i < numNodes; i++) {\r\n                var nodeId = reader.readString();\r\n                if (this.nodes.has(nodeId)) {\r\n                    this.nodes.get(nodeId).readData(reader);\r\n                }\r\n                else {\r\n                    var node = this.createNodeFromData(reader);\r\n                    this.addNode(node);\r\n                }\r\n            }\r\n        }\r\n        bsonReadAction(nodeId, type, reader) {\r\n            if (nodeId === \"_vertexmessagelog\") {\r\n                let logContainer = { message: \"\" };\r\n                reader.readString(logContainer, \"message\");\r\n                if (logContainer.message)\r\n                    console.log(\"SpaceServerLog: \", logContainer.message);\r\n                return;\r\n            }\r\n            if (this.nodes.has(nodeId)) {\r\n                this.nodes.get(nodeId).readDataBSON(reader);\r\n            }\r\n            else {\r\n                var node = this.createNodeFromBSONData(reader);\r\n                this.addNode(node);\r\n            }\r\n        }\r\n        readDataBSON(reader) {\r\n            reader.readObject(this.bsonReadAction.bind(this));\r\n        }\r\n        /**\r\n         * set a new client tickrate in Hz. the tickrate should be between 0-90Hz. invalid values may be rejected by the server.\r\n         * a tickrate of 0 will pause all updates.\r\n         *\r\n         * this method only works for v2 spaces.\r\n         * calling for a v1 space will throw an error, but will not cause any side effects.\r\n         *\r\n         * awaiting this method is not necessary unless you need confirmation that the request was sent.\r\n         */\r\n        setClientTickrate(newTickrateHz) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.spaceLink instanceof Vertex.BSONSpaceLink) {\r\n                    yield this.spaceLink.sendTickrateControlMessage(newTickrateHz);\r\n                    return;\r\n                }\r\n                throw new Error(\"The current Space does not support setting a client tickrate.\");\r\n            });\r\n        }\r\n        /**\r\n         * set a viewpoint position and viewpoint radius. currently, setting both is required.\r\n         *\r\n         * this method only works for v2 spaces.\r\n         * calling for a v1 space will throw an error, but will not cause any side effects.\r\n         *\r\n         * awaiting this method is not necessary unless you need confirmation that the request was sent.\r\n         */\r\n        setClientViewpoint(options) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.spaceLink instanceof Vertex.BSONSpaceLink) {\r\n                    const { position, radius } = options;\r\n                    yield this.spaceLink.sendViewpointControlMessage(position, radius);\r\n                    return;\r\n                }\r\n                throw new Error(\"The current Space does not support setting a Viewpoint.\");\r\n            });\r\n        }\r\n    }\r\n    Vertex.Space = Space;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        class ComponentSystem {\r\n            constructor() {\r\n                this.systems = new Map();\r\n            }\r\n            register(system) {\r\n                if (this.systems[system.name]) {\r\n                    console.error(`[VERTX:ComponentSystem] A controller with the name ${system.name} already exists in the ComponentSystem`);\r\n                    return;\r\n                }\r\n                console.log(\"[VERTX:ComponentSystem] Registered component system \" + system.name);\r\n                this.systems.set(system.name, system);\r\n            }\r\n            override(system) {\r\n                if (!this.systems[system.name]) {\r\n                    console.log(\"[VERTX:ComponentSystem] Override of component system \" + system.name);\r\n                    this.systems.set(system.name, system);\r\n                }\r\n            }\r\n            init() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    for (var system of this.systems.values()) {\r\n                        system.init();\r\n                    }\r\n                });\r\n            }\r\n            hasComponentSystem(name) {\r\n                return this.systems.has(name);\r\n            }\r\n            addComponent(name, node, instance = null) {\r\n                var system = this.systems.get(name);\r\n                if (!system) {\r\n                    console.error(\"A controller with the name \" + name + \" was not found in the ComponentSystem\");\r\n                    return;\r\n                }\r\n                var component = system.addComponent(node, instance);\r\n                component.name = name;\r\n                component.node = node;\r\n                return component;\r\n            }\r\n            createComponent(name) {\r\n                var system = this.systems.get(name);\r\n                if (!system) {\r\n                    console.error(\"A controller with the name \" + name + \" was not found in the ComponentSystem\");\r\n                    return null;\r\n                }\r\n                return system.create();\r\n            }\r\n            getComponent(name, node) {\r\n                var system = this.systems.get(name);\r\n                if (!system) {\r\n                    console.error(\"A controller with the name \" + name + \" was not found in the ComponentSystem\");\r\n                    return null;\r\n                }\r\n                return system.getComponent(node);\r\n            }\r\n            removeComponent(name, node) {\r\n                var system = this.systems.get(name);\r\n                if (!system) {\r\n                    console.error(\"A controller with the name \" + name + \" was not found in the ComponentSystem\");\r\n                    return null;\r\n                }\r\n                return system.removeComponent(node);\r\n            }\r\n            update() {\r\n                for (var system of this.systems.values()) {\r\n                    system.update();\r\n                }\r\n            }\r\n            render() {\r\n                for (var system of this.systems.values()) {\r\n                    system.render();\r\n                }\r\n            }\r\n        }\r\n        NodeComponentModel.ComponentSystem = ComponentSystem;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"guid.ts\" />\r\n/// <reference path=\"eventbus.ts\" />\r\n/// <reference path=\"space.ts\" />\r\n/// <reference path=\"ComponentModel/componentsystem.ts\" />\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class VertexRuntimeTaskResult {\r\n        constructor(message) {\r\n            this.Message = message;\r\n        }\r\n    }\r\n    Vertex.VertexRuntimeTaskResult = VertexRuntimeTaskResult;\r\n    class GraphicsEngine {\r\n    }\r\n    Vertex.GraphicsEngine = GraphicsEngine;\r\n    class VertexRuntime {\r\n        constructor() {\r\n        }\r\n        setBearerToken(token) {\r\n        }\r\n        postLoadComponentSystem() {\r\n        }\r\n        init(options) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.isInitialized) {\r\n                    console.warn(\"This instance of the runtime has already been loaded!\");\r\n                    return;\r\n                }\r\n                this.graphics = new GraphicsEngine();\r\n                this.componentSystem = new Vertex.NodeComponentModel.ComponentSystem();\r\n                this.postLoadComponentSystem();\r\n                //this.componentSystem.register(new NodeComponentModel.TransformComponentSystem());\r\n                //this.componentSystem.register(new NodeComponentModel.GltfModelComponentSystem());\r\n                console.log(\"[VERTX:ComponentSystem] Register Component Systems\");\r\n                yield Globals.event.fire(\"vertex:registerComponentSystems\", this.componentSystem);\r\n                console.log(\"[VERTX:ComponentSystem] End Register Component Systems\");\r\n                var loadedId = Globals.spaceId;\r\n                if (typeof loadedId === \"undefined\") {\r\n                    console.warn(\"[VERTX:VertexRuntime] No SpaceId was set in the Globals object, using temp space id: \" + loadedId);\r\n                    loadedId = Vertex.Guid.NewGuid();\r\n                }\r\n                yield Vertex.Globals.event.fire(\"vertex:onBeforeConnect\");\r\n                this.space = new Vertex.Space(loadedId);\r\n                try {\r\n                    // This promise resolves as soon as we recieve a valid message, and \r\n                    // will be rejected if close/error happens before receiving a message.\r\n                    // If auth fails, the socket opens but is closed immediately.\r\n                    yield this.space.init();\r\n                    console.log(\"Finished waiting for init\");\r\n                }\r\n                catch (e) {\r\n                    if (options && options.allowOffline) {\r\n                        console.log(`[VERTX:VertexRuntime] Running in offline mode because the Space connection failed and the 'allowOffline' option was enabled.`);\r\n                    }\r\n                    else {\r\n                        console.error(`[VERTX:VertexRuntime] Space Connection Failed.`);\r\n                        throw e;\r\n                    }\r\n                }\r\n                var self = this;\r\n                Globals.event.fire(\"vertex:init\", this);\r\n                Globals.appContext.addEventListener(\"message\", function (event) {\r\n                    if (event.data && event.data.event) {\r\n                        Globals.event.fire(event.data.event, event.data.args);\r\n                    }\r\n                });\r\n                Globals.event.on(\"vertex:setAuthToken\", function (token) {\r\n                    console.warn(\"Setting a new bearer token!\");\r\n                    self.setBearerToken(token);\r\n                });\r\n                this.isInitialized = true;\r\n                return new VertexRuntimeTaskResult(\"[VERTX:VertexRuntime] Init completed sucessfully\");\r\n            });\r\n        }\r\n        ///// Creates a Vertex instance without GLTFModelComponents or a graphics context\r\n        //async InitHeadless(options?: InitOptions): Promise<VertexRuntimeTaskResult> {\r\n        //    if (this.isInitialized) {\r\n        //        console.warn(\"This instance of the runtime has already been loaded!\");\r\n        //        return;\r\n        //    }\r\n        //    this.componentSystem = new NodeComponentModel.ComponentSystem();\r\n        //    var loadedId = Globals.spaceId;\r\n        //    if (typeof loadedId === \"undefined\") {\r\n        //        console.warn(\"[VERTX:VertexRuntime] No SpaceId was set in the Globals object, using temp space id: \" + loadedId);\r\n        //        loadedId = Guid.NewGuid();\r\n        //    }\r\n        //    this.space = new Space(loadedId);\r\n        //    await this.space.init();\r\n        //    var self = this;\r\n        //    Globals.event.fire(\"vertex:init\", this);\r\n        //    Globals.appContext.addEventListener(\"message\", function (event) {\r\n        //        if (event.data && event.data.event) {\r\n        //            Globals.event.fire(event.data.event, event.data.args);\r\n        //        }\r\n        //    });\r\n        //    Globals.event.on(\"vertex:setAuthToken\", function (token) {\r\n        //        console.warn(\"Setting a new bearer token!\");\r\n        //        self.setBearerToken(token);\r\n        //    });\r\n        //    this.isInitialized = true;\r\n        //    return new VertexRuntimeTaskResult(\"[VERTX:VertexRuntime] InitHeadless completed successfully\");\r\n        //}\r\n        render() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                this.componentSystem.update();\r\n                this.componentSystem.render();\r\n            });\r\n        }\r\n        update() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n            });\r\n        }\r\n        run() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n            });\r\n        }\r\n        createNetworkClient(spaceServer, spaceId) {\r\n            return new Vertex.Net.WebSocketClient(spaceServer, spaceId);\r\n        }\r\n    }\r\n    Vertex.VertexRuntime = VertexRuntime;\r\n    class Globals {\r\n        static getRuntime() {\r\n            return Globals.runtime;\r\n        }\r\n        static getEngine() {\r\n            return Globals.runtime[\"engine\"];\r\n        }\r\n    }\r\n    Globals.canvasId = \"RenderCanvas\";\r\n    Globals.vertexStackUrl = window.location.host;\r\n    Globals.canvas = document.getElementById(Globals.canvasId);\r\n    /**\r\n     * reference to the current VertexRuntime.\r\n     * NOTE: Previously typed as 'any'.\r\n     *\r\n     * To fix TypeScript errors, you should use Vertex.Globals.getRuntime<>() to get a reference\r\n     * to the expected runtime. For example, Vertex.Globals.getRuntime<VertexBabylon.VertexBabylonRuntime>();\r\n     **/\r\n    Globals.runtime = null;\r\n    Globals.networkStatsCallback = new Vertex.EventBus();\r\n    Globals.event = new Vertex.EventHub();\r\n    Vertex.Globals = Globals;\r\n})(Vertex || (Vertex = {}));\r\n///<reference path=\"./Src/runtime.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    console.log(\"Loaded Vertex Runtime\");\r\n    function InitVertexHeadless(complete, options) {\r\n        console.log(\"Init Runtime Headless\");\r\n        Vertex.Globals.runtime = new Vertex.VertexRuntime();\r\n        Vertex.Globals.appContext = window;\r\n        Vertex.Globals.runtime.init(options)\r\n            .then((result) => {\r\n            console.log(result.Message);\r\n            complete();\r\n        });\r\n    }\r\n    Vertex.InitVertexHeadless = InitVertexHeadless;\r\n    function InitVertexHeadlessAsync(options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            Vertex.Globals.runtime = new Vertex.VertexRuntime();\r\n            Vertex.Globals.appContext = window;\r\n            let result = yield Vertex.Globals.runtime.init(options);\r\n            console.log(`Runtime Headless Init Result:`, result);\r\n        });\r\n    }\r\n    Vertex.InitVertexHeadlessAsync = InitVertexHeadlessAsync;\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"space.ts\"/>\r\n/// <reference path=\"Websocket/client.ts\"/>\r\n/// <reference path=\"eventbus.ts\" />\r\n/// <reference path=\"BinarySerializer/binaryreader.ts\" />\r\n/// <reference path=\"BinarySerializer/binarywriter.ts\" />\r\n/// <reference path=\"ComponentModel/node.ts\"/>\r\n/// <reference path=\"ComponentModel/rpc.ts\"/>\r\n/// <reference path=\"spacelink.ts\"/>\r\n//Connects a VERTX space to a running instance of the runtime\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class DestroyMessage {\r\n        constructor() {\r\n            this.nodes = [];\r\n        }\r\n        readDataBSON(reader) {\r\n            let self = this;\r\n            reader.readObject((name, type, _) => {\r\n                if (name === \"nodes\") {\r\n                    reader.readArray(self, \"nodes\", reader.readString);\r\n                }\r\n            });\r\n        }\r\n        writeDataBSON(writer) {\r\n            let ctx = writer.startObject();\r\n            writer.writeArray(\"nodes\", this.nodes, writer.writeString);\r\n            writer.endObject(ctx);\r\n        }\r\n    }\r\n    //this seems like quite a complicated message!\r\n    class AcquireTokenMessage {\r\n        constructor() {\r\n            this.actions = [];\r\n        }\r\n        //DONT USE THIS PATTERN USUALLY THIS ONLY WORKS HERE!\r\n        readDataBSON(reader) {\r\n            let self = this;\r\n            reader.readObject((name, type, _) => {\r\n                if (name === \"actions\") {\r\n                    self.actions = [];\r\n                    reader.readObject((idxString, t, _) => {\r\n                        let idx = parseInt(idxString);\r\n                        self.actions[idx] = new AcquireTokenAction();\r\n                        self.actions[idx].readDataBSON(reader);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        writeDataBSON(writer) {\r\n            let ctx = writer.startObject();\r\n            writer.writeObjectArray(\"actions\", this.actions);\r\n            writer.endObject(ctx);\r\n        }\r\n    }\r\n    class AcquireTokenAction {\r\n        readDataBSON(reader) {\r\n            let self = this;\r\n            reader.readObject((name, type, _) => {\r\n                if (name === \"node\") {\r\n                    reader.readString(this, \"id\");\r\n                }\r\n                if (name === \"context\") {\r\n                    reader.readString(this, \"context\");\r\n                }\r\n                if (name === \"result\") {\r\n                    reader.readBoolean(this, \"result\");\r\n                }\r\n                if (name === \"policy\") {\r\n                    let tempString = { policy: \"\" };\r\n                    reader.readString(tempString, \"policy\");\r\n                    this.policy = Vertex.NodeComponentModel.TokenHandoffPolicy[name];\r\n                }\r\n            });\r\n        }\r\n        writeDataBSON(writer) {\r\n            let ctx = writer.startObject();\r\n            writer.writeString(\"node\", this.id);\r\n            writer.writeString(\"context\", this.context);\r\n            writer.writeBoolean(\"result\", this.result);\r\n            writer.writeString(\"policy\", Vertex.NodeComponentModel.TokenHandoffPolicy[this.policy]);\r\n            writer.endObject(ctx);\r\n        }\r\n    }\r\n    class ReleaseTokenMessage {\r\n        readDataBSON(reader) {\r\n            let self = this;\r\n            reader.readObject((name, type, _) => {\r\n                if (name === \"id\") {\r\n                    reader.readString(this, \"id\");\r\n                }\r\n                if (name === \"policy\") {\r\n                    let tempString = { policy: \"\" };\r\n                    reader.readString(tempString, \"policy\");\r\n                    this.policy = Vertex.NodeComponentModel.TokenHandoffPolicy[name];\r\n                }\r\n            });\r\n        }\r\n        writeDataBSON(writer) {\r\n            let ctx = writer.startObject();\r\n            writer.writeString(\"id\", this.id);\r\n            writer.writeString(\"policy\", Vertex.NodeComponentModel.TokenHandoffPolicy[this.policy]);\r\n            writer.endObject(ctx);\r\n        }\r\n    }\r\n    class CommandMessage {\r\n        writeDataBSON(writer) {\r\n            let ctx = writer.startObject();\r\n            writer.writeString(\"node\", this.node);\r\n            writer.writeString(\"component\", this.component);\r\n            writer.writeString(\"command\", this.command);\r\n            if (this.args)\r\n                writer.writeObject(\"args\", this.args.writeDataBSON.bind(this.args));\r\n            writer.endObject(ctx);\r\n        }\r\n        readDataBSON(reader) {\r\n            reader.readObject(((name, type, _reader) => {\r\n                if (name === \"node\") {\r\n                    reader.readString(this, \"node\");\r\n                }\r\n                if (name === \"component\") {\r\n                    reader.readString(this, \"component\");\r\n                }\r\n                if (name === \"command\") {\r\n                    reader.readString(this, \"command\");\r\n                }\r\n                if (name === \"args\") {\r\n                    reader.readObjectBlind(this, \"argsBson\");\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    class BSONSpaceLink {\r\n        constructor(space, client) {\r\n            this.readyEvent = new Vertex.EventBus();\r\n            this.onTokenAcquireResult = new Vertex.EventBus();\r\n            this.client = null;\r\n            this.space = null;\r\n            this.updateTaskId = -1;\r\n            this.updateRate = 1000.0 / 60.0; //set 30 tick update rate\r\n            this.heartbeatTaskId = -1;\r\n            this.updateWriter = null;\r\n            this.dispatchTable = new Map();\r\n            this.space = space;\r\n            //this dispatch table maps actions to specific message types from the space server\r\n            this.dispatchTable.set(Vertex.MessageType.State, this.handleStateMessage.bind(this));\r\n            this.dispatchTable.set(Vertex.MessageType.Destroy, this.handleDestroyMessage.bind(this));\r\n            this.dispatchTable.set(Vertex.MessageType.AcquireTokenResult, this.handleTokenAcquireResult.bind(this));\r\n            this.dispatchTable.set(Vertex.MessageType.Heartbeat, this.handleHeartbeatMessage.bind(this));\r\n            this.dispatchTable.set(Vertex.MessageType.ServerResponse, this.handleServerResponseMessage.bind(this));\r\n            this.dispatchTable.set(Vertex.MessageType.Command, this.handleCommandMessage.bind(this));\r\n            this.dispatchTable.set(Vertex.MessageType.Broadcast, this.handleBroadcastMessage.bind(this));\r\n            // todo: does the server send TickRateControl/ViewpointControl messages?\r\n            this.client = client;\r\n            this.client.openEvent.on(this.onClientOpenEvent.bind(this));\r\n            this.client.closeEvent.on(this.onClientCloseEvent.bind(this));\r\n            this.client.dataEvent.on(this.onClientDataEvent.bind(this));\r\n            this.client.errorEvent.on(this.onClientErrorEvent.bind(this));\r\n        }\r\n        handleStateMessage(reader) {\r\n            this.space.readDataBSON(reader);\r\n        }\r\n        handleDestroyMessage(reader) {\r\n            let message = new DestroyMessage();\r\n            message.readDataBSON(reader);\r\n            if (message.nodes.length > 0) {\r\n                for (let id of message.nodes) {\r\n                    let node = this.space.findNode(id);\r\n                    if (node !== null) {\r\n                        this.space.destroyNode(node, false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        handleHeartbeatMessage(reader) {\r\n            reader.readObjectBlind();\r\n            // respond immediately to a heartbeat request\r\n            this.sendHeartbeatMessage();\r\n        }\r\n        handleServerResponseMessage(reader) {\r\n            let serverResponseMessage = {};\r\n            reader.readObject((name, type, _) => {\r\n                if (name == \"message\" && type == Vertex.BsonType.String) {\r\n                    reader.readString(serverResponseMessage, \"message\");\r\n                }\r\n                else {\r\n                    console.warn(`[BSONSpaceLink] ServerResponse contained unrecognised BSON Property ${name}`);\r\n                }\r\n            });\r\n            console.log(`[BSONSpaceLink] %cServer Message: %c${serverResponseMessage.message}`, 'font-weight: bold; color: cornflowerblue;', 'color: blue;');\r\n        }\r\n        handleTokenAcquireResult(reader) {\r\n            let message = new AcquireTokenAction();\r\n            message.readDataBSON(reader);\r\n            //console.log(message);\r\n            if (message.context !== \"null\")\r\n                this.onTokenAcquireResult.trigger(message);\r\n        }\r\n        handleCommandMessage(reader) {\r\n            let message = new CommandMessage();\r\n            message.readDataBSON(reader);\r\n            const node = this.space.findNode(message.node);\r\n            if (!node) {\r\n                console.warn(`[BSONSpaceLink] Recieved Command message for ${message.node}/${message.component}/${message.command}, which could not be found locally.`, { message });\r\n                return;\r\n            }\r\n            if (node.HasToken !== true) {\r\n                console.warn(`[BSONSpaceLink] Recieved Command message for ${message.node}/${message.component}/${message.command}, which we currently do not control.`, { message, node });\r\n                return;\r\n            }\r\n            const component = node.getComponent(message.component);\r\n            if (!component) {\r\n                console.warn(`[BSONSpaceLink] Recieved Command message for ${message.node}/${message.component}/${message.command}, which the component is not recognized.`, { message, node });\r\n                return;\r\n            }\r\n            const func = component.events.get(message.command);\r\n            if (!func) {\r\n                console.warn(`[BSONSpaceLink] Recieved Command message for ${message.node}/${message.component}/${message.command}, which does not contain this event locally.\\n\r\nThe sender's component assembly may not match the local one.`, { message, node, component });\r\n                return;\r\n            }\r\n            // deserialize args and fire\r\n            const binaryReader = new Vertex.BinaryReader(message.argsBson.buffer);\r\n            const bsonReader = new Vertex.BSONReader(binaryReader);\r\n            func.fireFromData(bsonReader);\r\n        }\r\n        handleBroadcastMessage(reader) {\r\n            let message = new CommandMessage();\r\n            message.readDataBSON(reader);\r\n            const node = this.space.findNode(message.node);\r\n            if (!node) {\r\n                console.warn(`[BSONSpaceLink] Recieved Broadcast message for ${message.node}/${message.component}/${message.command}, which could not be found locally.`, { message });\r\n                return;\r\n            }\r\n            if (node.HasToken === true) {\r\n                console.warn(`[BSONSpaceLink] Recieved Broadcast message for ${message.node}/${message.component}/${message.command}, which we currently control.`, { message, node });\r\n                return;\r\n            }\r\n            const component = node.getComponent(message.component);\r\n            if (!component) {\r\n                console.warn(`[BSONSpaceLink] Recieved Broadcast message for ${message.node}/${message.component}/${message.command}, which the component is not recognized.`, { message, node });\r\n                return;\r\n            }\r\n            const func = component.events.get(message.command);\r\n            if (!func) {\r\n                console.warn(`[BSONSpaceLink] Recieved Broadcast message for ${message.node}/${message.component}/${message.command}, which does not contain this event locally.\\n\r\nThe sender's component assembly may not match the local one.`, { message, node, component });\r\n                return;\r\n            }\r\n            // deserialize args and fire\r\n            const binaryReader = new Vertex.BinaryReader(message.argsBson.buffer);\r\n            const bsonReader = new Vertex.BSONReader(binaryReader);\r\n            func.fireFromData(bsonReader);\r\n        }\r\n        onClientErrorEvent(errorData) {\r\n            // todo: this is awful\r\n            console.error(\"[VERTX:BSONSpaceLink] A WebSocket Error Occurred\", errorData);\r\n        }\r\n        onClientOpenEvent() {\r\n            console.log(\"[VERTX:BSONSpaceLink] Connected to socket\");\r\n            this.readyEvent.trigger();\r\n            this.updateTaskId = setInterval(function () {\r\n                this.update();\r\n            }.bind(this), this.updateRate);\r\n            let disableHeartbeat = sessionStorage && sessionStorage.getItem(\"Vertex._clientHeartbeatDisabled\") || null;\r\n            if (disableHeartbeat && disableHeartbeat != \"false\") {\r\n                console.warn(`[VERTX:BSONSpaceLink] The 'Vertex._clientHeartbeatDisabled' debug setting is set in SessionStorage.\\n` +\r\n                    `This may cause unexpected disconnection on some VERTX Stacks.`);\r\n            }\r\n            else {\r\n                this.heartbeatTaskId = setInterval(function () {\r\n                    this.sendHeartbeatMessage();\r\n                }.bind(this), 2000);\r\n            }\r\n        }\r\n        onClientCloseEvent() {\r\n            console.warn(\"[VERTX:BSONSpaceLink] Disconnected from socket\");\r\n            if (this.updateTaskId !== -1)\r\n                clearInterval(this.updateTaskId);\r\n        }\r\n        onClientDataEvent(data) {\r\n            let reader = new Vertex.BinaryReader(data);\r\n            let bsonReader = new Vertex.BSONReader(reader);\r\n            let dispatchMethod = null;\r\n            bsonReader.readObject((name, type, reader) => {\r\n                let messageKey = Vertex.MessageType[name];\r\n                dispatchMethod = this.dispatchTable.get(messageKey);\r\n                // console.debug(`[BSONSpaceLink] TRACE ClientDataEvent of type ${name} (${messageKey})`);\r\n                // use the appropriate BSON reader for recognised message types\r\n                if (typeof dispatchMethod === \"function\") {\r\n                    dispatchMethod(reader);\r\n                }\r\n                // otherwise, skip over the unrecognised sections.\r\n                // TODO: this may not be desired behaviour? [wm]\r\n                else {\r\n                    console.debug(`[BSONSpaceLink] Unknown ClientDataEvent ${name} (${messageKey}) - skipping message...`);\r\n                    reader.readObjectBlind();\r\n                }\r\n            });\r\n        }\r\n        connect() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                console.log(\"[VERTX:BSONSpaceLink] Connecting...\");\r\n                yield this.client.connect();\r\n            });\r\n        }\r\n        update() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                yield this.createUpdateMessage();\r\n            });\r\n        }\r\n        createUpdateMessage() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this.updateWriter == null)\r\n                    this.updateWriter = new Vertex.BinaryWriter(1024 * 50);\r\n                this.updateWriter.clear();\r\n                this.updateWriter.Index = 0;\r\n                let writer = new Vertex.BSONWriter(this.updateWriter);\r\n                let ctx = writer.startObject();\r\n                let idx = writer.writer.Index;\r\n                //todo add any token handoff or event logic here\r\n                yield this.sendStateMessage(writer);\r\n                let updateSize = writer.writer.Index - idx;\r\n                writer.endObject(ctx);\r\n                if (updateSize > 14)\r\n                    this.client.sendDataView(this.updateWriter.asBufferView());\r\n            });\r\n        }\r\n        sendStateMessage(writer) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                writer.writeObject(\"State\", this.space.writeDataBSON.bind(this.space));\r\n            });\r\n        }\r\n        _writeEmptyObject(writer) {\r\n            const ctx = writer.startObject();\r\n            writer.endObject(ctx);\r\n        }\r\n        sendHeartbeatMessage() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const binaryWriter = new Vertex.BinaryWriter(64);\r\n                const writer = new Vertex.BSONWriter(binaryWriter);\r\n                const ctx = writer.startObject();\r\n                // heartbeat object contains nothing\r\n                writer.writeObject(\"Heartbeat\", this._writeEmptyObject);\r\n                writer.endObject(ctx);\r\n                //console.debug(\"[BSONSpaceLink] TRACE Sending heartbeat message...\")\r\n                yield this.client.sendDataView(binaryWriter.asBufferView());\r\n            });\r\n        }\r\n        sendDCMessage(id, message) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                console.warn(\"[BSONSpaceLink] sendDCMessage is not implemented\");\r\n            });\r\n        }\r\n        sendDCSubscribe(id, dataChannel) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                console.warn(\"[BSONSpaceLink] sendDCSubscribe is not implemented\");\r\n            });\r\n        }\r\n        sendDCUnsubscribe(id, dataChannel) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                console.warn(\"[BSONSpaceLink] sendDCUnsubscribe is not implemented\");\r\n            });\r\n        }\r\n        sendDeleteMessage(node) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                let message = new DestroyMessage();\r\n                message.nodes.push(node.id);\r\n                if (this.updateWriter == null)\r\n                    this.updateWriter = new Vertex.BinaryWriter(1024 * 50);\r\n                this.updateWriter.clear();\r\n                this.updateWriter.Index = 0;\r\n                let writer = new Vertex.BSONWriter(this.updateWriter);\r\n                let ctx = writer.startObject();\r\n                writer.writeObject(\"Destroy\", message.writeDataBSON.bind(message));\r\n                writer.endObject(ctx);\r\n                this.client.sendDataView(this.updateWriter.asBufferView());\r\n            });\r\n        }\r\n        sendRPCMessage(nodeId, componentId, eventId, data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                // in BSONSpaceLink, RPCs are sent as BSON 'Command' Messages only\r\n                const message = new CommandMessage();\r\n                message.node = nodeId;\r\n                message.component = componentId;\r\n                message.command = eventId;\r\n                message.args = data;\r\n                const updateWriter = new Vertex.BinaryWriter(1024 * 8);\r\n                const writer = new Vertex.BSONWriter(updateWriter);\r\n                const ctx = writer.startObject();\r\n                writer.writeObject(\"Command\", message.writeDataBSON.bind(message));\r\n                writer.endObject(ctx);\r\n                this.client.sendDataView(updateWriter.asBufferView());\r\n            });\r\n        }\r\n        sendBroadcastMessage(nodeId, componentId, eventId, data) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                // in BSONSpaceLink, Broadcasts are sent as BSON 'Broadcast' Messages only\r\n                const message = new CommandMessage();\r\n                message.node = nodeId;\r\n                message.component = componentId;\r\n                message.command = eventId;\r\n                message.args = data;\r\n                const updateWriter = new Vertex.BinaryWriter(1024 * 8);\r\n                const writer = new Vertex.BSONWriter(updateWriter);\r\n                const ctx = writer.startObject();\r\n                writer.writeObject(\"Broadcast\", message.writeDataBSON.bind(message));\r\n                writer.endObject(ctx);\r\n                this.client.sendDataView(updateWriter.asBufferView());\r\n            });\r\n        }\r\n        sendAcquireTokenMessage(nodeId, context, policy) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                let action = new AcquireTokenAction();\r\n                action.id = nodeId;\r\n                action.context = context;\r\n                action.policy = policy;\r\n                action.result = true;\r\n                let message = new AcquireTokenMessage();\r\n                message.actions.push(action);\r\n                if (this.updateWriter == null)\r\n                    this.updateWriter = new Vertex.BinaryWriter(1024 * 50);\r\n                this.updateWriter.clear();\r\n                this.updateWriter.Index = 0;\r\n                let writer = new Vertex.BSONWriter(this.updateWriter);\r\n                let ctx = writer.startObject();\r\n                writer.writeObject(\"AcquireToken\", message.writeDataBSON.bind(message));\r\n                writer.endObject(ctx);\r\n                this.client.sendDataView(this.updateWriter.asBufferView());\r\n            });\r\n        }\r\n        sendReleaseTokenMessage(nodeId, policy) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                let message = new ReleaseTokenMessage();\r\n                message.id = nodeId;\r\n                message.policy = policy;\r\n                if (this.updateWriter == null)\r\n                    this.updateWriter = new Vertex.BinaryWriter(1024 * 50);\r\n                this.updateWriter.clear();\r\n                this.updateWriter.Index = 0;\r\n                let writer = new Vertex.BSONWriter(this.updateWriter);\r\n                let ctx = writer.startObject();\r\n                writer.writeObject(\"ReleaseToken\", message.writeDataBSON.bind(message));\r\n                writer.endObject(ctx);\r\n                this.client.sendDataView(this.updateWriter.asBufferView());\r\n            });\r\n        }\r\n        sendTickrateControlMessage(newTickrateHz) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const binaryWriter = new Vertex.BinaryWriter(64);\r\n                const writer = new Vertex.BSONWriter(binaryWriter);\r\n                const ctx = writer.startObject();\r\n                writer.writeObject(\"TickRateControl\", (_writer) => {\r\n                    let _ctx = _writer.startObject();\r\n                    _writer.writeDouble(\"frequencyHz\", newTickrateHz);\r\n                    _writer.endObject(_ctx);\r\n                });\r\n                writer.endObject(ctx);\r\n                yield this.client.sendDataView(binaryWriter.asBufferView());\r\n            });\r\n        }\r\n        sendViewpointControlMessage(position, radius) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const binaryWriter = new Vertex.BinaryWriter(256);\r\n                const writer = new Vertex.BSONWriter(binaryWriter);\r\n                const ctx = writer.startObject();\r\n                writer.writeObject(\"ViewpointControl\", (_writer) => {\r\n                    let _ctx = _writer.startObject();\r\n                    if (Array.isArray(position) && position.length === 3) {\r\n                        _writer.writeArray(\"position\", position, _writer.writeDouble);\r\n                    }\r\n                    if (typeof radius === \"number\") {\r\n                        _writer.writeDouble(\"radius\", radius);\r\n                    }\r\n                    _writer.endObject(_ctx);\r\n                });\r\n                writer.endObject(ctx);\r\n                yield this.client.sendDataView(binaryWriter.asBufferView());\r\n            });\r\n        }\r\n    }\r\n    Vertex.BSONSpaceLink = BSONSpaceLink;\r\n})(Vertex || (Vertex = {}));\r\n;\r\nclass Transform {\r\n    constructor(position, rotation, scale) {\r\n        this.position = position;\r\n        this.rotation = rotation;\r\n        this.scale = scale;\r\n    }\r\n}\r\n/// <reference path=\"../BinarySerializer/binaryreader.ts\"/>\r\n/// <reference path=\"../BinarySerializer/binarywriter.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let BsonType;\r\n    (function (BsonType) {\r\n        BsonType[BsonType[\"Double\"] = 1] = \"Double\";\r\n        BsonType[BsonType[\"String\"] = 2] = \"String\";\r\n        BsonType[BsonType[\"Object\"] = 3] = \"Object\";\r\n        BsonType[BsonType[\"Array\"] = 4] = \"Array\";\r\n        BsonType[BsonType[\"Binary\"] = 5] = \"Binary\";\r\n        BsonType[BsonType[\"Undefined\"] = 6] = \"Undefined\";\r\n        BsonType[BsonType[\"Oid\"] = 7] = \"Oid\";\r\n        BsonType[BsonType[\"Boolean\"] = 8] = \"Boolean\";\r\n        BsonType[BsonType[\"Date\"] = 9] = \"Date\";\r\n        BsonType[BsonType[\"Null\"] = 10] = \"Null\";\r\n        BsonType[BsonType[\"Regex\"] = 11] = \"Regex\";\r\n        BsonType[BsonType[\"Reference\"] = 12] = \"Reference\";\r\n        BsonType[BsonType[\"Code\"] = 13] = \"Code\";\r\n        BsonType[BsonType[\"Symbol\"] = 14] = \"Symbol\";\r\n        BsonType[BsonType[\"CodeWScope\"] = 15] = \"CodeWScope\";\r\n        BsonType[BsonType[\"Int32\"] = 16] = \"Int32\";\r\n        BsonType[BsonType[\"Int64\"] = 18] = \"Int64\";\r\n        BsonType[BsonType[\"TimeStamp\"] = 17] = \"TimeStamp\";\r\n        //Vertex Specific Extensions\r\n        BsonType[BsonType[\"Single\"] = 19] = \"Single\";\r\n        BsonType[BsonType[\"Int16\"] = 20] = \"Int16\";\r\n        BsonType[BsonType[\"Uint8\"] = 21] = \"Uint8\";\r\n        BsonType[BsonType[\"UInt16\"] = 22] = \"UInt16\";\r\n        BsonType[BsonType[\"UInt32\"] = 23] = \"UInt32\";\r\n        BsonType[BsonType[\"UInt64\"] = 24] = \"UInt64\";\r\n        BsonType[BsonType[\"MinKey\"] = -1] = \"MinKey\";\r\n        BsonType[BsonType[\"MaxKey\"] = 127] = \"MaxKey\";\r\n    })(BsonType = Vertex.BsonType || (Vertex.BsonType = {}));\r\n    class BSONWriter {\r\n        constructor(writer) {\r\n            this.writer = null;\r\n            this.writer = writer;\r\n        }\r\n        writeInt16(name, value) {\r\n            this.writer.writeByte(BsonType.Int16);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeInt16(value);\r\n        }\r\n        writeInt32(name, value) {\r\n            this.writer.writeByte(BsonType.Int32);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeInt32(value);\r\n        }\r\n        writeInt64(name, value) {\r\n            console.error(\"this platform cannot encode 64 bit number as of yet\");\r\n        }\r\n        writeUInt16(name, value) {\r\n            this.writer.writeByte(BsonType.UInt16);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeUInt16(value);\r\n        }\r\n        writeUInt32(name, value) {\r\n            this.writer.writeByte(BsonType.UInt32);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeUInt32(value);\r\n        }\r\n        writeUInt64(name, value) {\r\n            console.error(\"this platform cannot encode 64 bit number as of yet\");\r\n        }\r\n        writeSingle(name, value) {\r\n            this.writer.writeByte(BsonType.Double);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeDouble(value);\r\n        }\r\n        writeDouble(name, value) {\r\n            this.writer.writeByte(BsonType.Double);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeDouble(value);\r\n        }\r\n        writeString(name, value) {\r\n            this.writer.writeByte(BsonType.String);\r\n            this.writerCStringInternal(name);\r\n            var stringEncoded = Vertex.UTF8.Encode(value);\r\n            this.writer.writeInt32(stringEncoded.length + 1);\r\n            this.writer.writeBytes(stringEncoded, stringEncoded.length);\r\n            this.writer.writeByte(0x0);\r\n        }\r\n        writeArray(name, array, writeAction) {\r\n            writeAction = writeAction.bind(this);\r\n            this.writer.writeByte(BsonType.Array);\r\n            this.writerCStringInternal(name);\r\n            let ctx = this.startObject();\r\n            for (let i = 0; i < array.length; i++) {\r\n                writeAction(i.toFixed(0).toString(), array[i]);\r\n            }\r\n            this.endObject(ctx);\r\n        }\r\n        writeObjectArray(name, array) {\r\n            this.writer.writeByte(BsonType.Array);\r\n            this.writerCStringInternal(name);\r\n            let ctx = this.startObject();\r\n            for (let i = 0; i < array.length; i++) {\r\n                this.writeObject(i.toFixed(0).toString(), array[i].writeDataBSON.bind(array[i]));\r\n            }\r\n            this.endObject(ctx);\r\n        }\r\n        writeBoolean(name, value) {\r\n            this.writer.writeByte(BsonType.Boolean);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeByte(value ? 0x1 : 0x0);\r\n        }\r\n        /**\r\n         * write an object header to the BSON Writer, then executes 'writerFunction'\r\n         * e.g. writes 0x03, followed by a BSON c_string form of the 'name' parameter.\r\n         * @param name\r\n         * @param writerFunction\r\n         */\r\n        writeObject(name, writerFunction) {\r\n            this.writer.writeByte(BsonType.Object);\r\n            this.writerCStringInternal(name);\r\n            writerFunction(this);\r\n        }\r\n        /**\r\n         * writes a BSON Object Header, then writes the provided bsonDocument as the complete object body.\r\n         *\r\n         * bsonDocument MUST be a complete BSON document, including the size at the start, and the 0x0 end marker.\r\n         */\r\n        writeObjectBlind(name, bsonDocument) {\r\n            this.writer.writeByte(BsonType.Object);\r\n            this.writerCStringInternal(name);\r\n            this.writer.writeBytes(bsonDocument, bsonDocument.length);\r\n        }\r\n        startObject() {\r\n            return this.beginBoundedSection();\r\n        }\r\n        endObject(context) {\r\n            this.writer.writeByte(0x0);\r\n            let size = this.endBoundedSection(context);\r\n        }\r\n        beginBoundedSection() {\r\n            let idx = this.writer.Index;\r\n            this.writer.writeInt32(0);\r\n            return idx;\r\n        }\r\n        endBoundedSection(context) {\r\n            let currentPos = this.writer.Index;\r\n            let size = currentPos - context;\r\n            this.writer.Index = context;\r\n            this.writer.writeInt32(size);\r\n            this.writer.Index = currentPos;\r\n            return size;\r\n        }\r\n        writerCStringInternal(value) {\r\n            var stringEncoded = Vertex.UTF8.Encode(value);\r\n            this.writer.writeBytes(stringEncoded, stringEncoded.length);\r\n            this.writer.writeByte(0x0);\r\n        }\r\n    }\r\n    Vertex.BSONWriter = BSONWriter;\r\n    class BSONReader {\r\n        constructor(reader) {\r\n            this.reader = null;\r\n            this.reader = reader;\r\n        }\r\n        getTypeSize(type) {\r\n            switch (type) {\r\n                case 0:\r\n                    return 0;\r\n                case BsonType.Double:\r\n                    return 8;\r\n                case BsonType.String:\r\n                    {\r\n                        let position = this.reader.Index;\r\n                        let size = this.reader.readInt32() + 4;\r\n                        this.reader.Index = position;\r\n                        return size;\r\n                    }\r\n                case BsonType.Object:\r\n                    {\r\n                        let position = this.reader.Index;\r\n                        let size = this.reader.readInt32();\r\n                        this.reader.Index = position;\r\n                        return size;\r\n                    }\r\n                case BsonType.Array:\r\n                    {\r\n                        let position = this.reader.Index;\r\n                        let size = this.reader.readInt32();\r\n                        this.reader.Index = position;\r\n                        return size;\r\n                    }\r\n                case BsonType.Boolean:\r\n                    return 1;\r\n                case BsonType.Int32:\r\n                    return 4;\r\n                case BsonType.Int64:\r\n                    return 8;\r\n                case BsonType.Single:\r\n                    return 4;\r\n                case BsonType.Int16:\r\n                    return 2;\r\n                case BsonType.Uint8:\r\n                    return 1;\r\n                case BsonType.UInt16:\r\n                    return 2;\r\n                case BsonType.UInt32:\r\n                    return 4;\r\n                case BsonType.UInt64:\r\n                    return 8;\r\n                default:\r\n                    console.error(\"Attempted to deserialize BSON type: \" + type + \" which is not supported by this serializer\");\r\n                    return 0;\r\n            }\r\n        }\r\n        readCStringInteral() {\r\n            let bytes = [];\r\n            let char = this.reader.readByte();\r\n            while (char != 0x0) {\r\n                bytes.push(char);\r\n                char = this.reader.readByte();\r\n            }\r\n            return Vertex.UTF8.Decode(bytes);\r\n        }\r\n        readInt16(target, property) {\r\n            target[property] = this.reader.readInt16();\r\n        }\r\n        readInt32(target, property) {\r\n            target[property] = this.reader.readInt32();\r\n        }\r\n        readInt64(target, property) {\r\n            console.error(\"BSON Reader: This platform does not support property type Int64\");\r\n        }\r\n        readUInt16(target, property) {\r\n            target[property] = this.reader.readUInt16();\r\n        }\r\n        readUInt32(target, property) {\r\n            target[property] = this.reader.readUInt32();\r\n        }\r\n        readUInt64(target, property) {\r\n            console.error(\"BSON Reader: This platform does not support property type UInt64\");\r\n        }\r\n        readSingle(target, property) {\r\n            target[property] = this.reader.readDouble();\r\n        }\r\n        readDouble(target, property) {\r\n            target[property] = this.reader.readDouble();\r\n        }\r\n        readString(target, property) {\r\n            target[property] = this.readStringInternal();\r\n        }\r\n        readEnum(target, property, lookupTable) {\r\n            let internalString = this.readStringInternal();\r\n            for (var i = 0; i < lookupTable.length; i++) {\r\n                if (lookupTable[i] == internalString) {\r\n                    target[property] = i;\r\n                }\r\n            }\r\n        }\r\n        readStringInternal() {\r\n            let stringLength = this.reader.readInt32(); //length int32\r\n            let stringBytes = this.reader.readBytes(stringLength - 1); //char* - the additional null char\r\n            if (this.reader.readByte() != 0x0) { // 0x0 terminating char\r\n                console.error(\"BSON Reader: Malformed string detected in BSON string bytestream\");\r\n            }\r\n            return Vertex.UTF8.Decode(stringBytes);\r\n        }\r\n        readBoolean(target, property) {\r\n            target[property] = this.reader.readByte() === 0x01 ? true : false;\r\n        }\r\n        readArray(target, property, readAction) {\r\n            readAction = readAction.bind(this);\r\n            let targetArray = target[property];\r\n            let elementCount = 0;\r\n            this.readObject((currentIdx, type, innerReader) => {\r\n                if (targetArray.length < elementCount + 1) {\r\n                    targetArray.push(null);\r\n                }\r\n                readAction(targetArray, parseInt(currentIdx));\r\n                elementCount++;\r\n            });\r\n            if (targetArray.length > elementCount) {\r\n                target[property] = targetArray.slice(0, elementCount);\r\n            }\r\n            return;\r\n            //let startingPosition = this.reader.Index;\r\n            //let arraySize = 0;\r\n            //let dump = { cache: null };\r\n            //this.readObject((name, type, innerReader) => {\r\n            //    arraySize++;\r\n            //    readAction(dump, \"cache\");\r\n            //});\r\n            //if (!targetArray || targetArray.length !== arraySize) {\r\n            //    target[property] = new Array(arraySize);\r\n            //    targetArray = target[property] as any[];\r\n            //}\r\n            //this.reader.Index = startingPosition;\r\n            ////console.log(\"Array of \" + arraySize + \" elements\");\r\n            //this.readObject((currentIdx, type, innerReader) => {\r\n            //    readAction(targetArray, currentIdx);\r\n            //});\r\n        }\r\n        readObjectBlind(target, property) {\r\n            // if no target is provided, just skip the reader.\r\n            // otherwise, we should output the raw data to target[property]\r\n            const shouldSkip = typeof target === \"undefined\";\r\n            if (shouldSkip) {\r\n                //the length of the document\r\n                let size = this.reader.readInt32();\r\n                size -= 4;\r\n                const start = this.reader.Index;\r\n                this.reader.skipAhead(size - 1);\r\n                const endMarker = this.reader.readByte();\r\n                if (endMarker != 0x0) {\r\n                    console.warn(\"[BSONReader] BSON document did not properly deserialize!\");\r\n                }\r\n                const readerSize = (this.reader.Index - start) + 5;\r\n                if (readerSize !== size + 5) {\r\n                    console.warn(\"[BSONReader] BSON Reader did not read the correct number of bytes for the document\");\r\n                }\r\n            }\r\n            else { // shouldSkip == false, read the data into Uint8Array\r\n                // peek the length, then dump the entire contents into data.\r\n                const size = this.reader.readInt32();\r\n                this.reader.skipAhead(-4); // 4 === sizeof Int32\r\n                // safety check\r\n                if (size > 32 * 1024) {\r\n                    console.warn(`[BSONReader] Refusing to blind read large (>32M) BSON object (Declared Size: ${size} bytes)`);\r\n                    // fall back to blind read\r\n                    return this.readObjectBlind(undefined, undefined);\r\n                }\r\n                const data = this.reader.readBytes(size);\r\n                // assert that the last byte is an end marker\r\n                const endMarker = data[data.length - 1];\r\n                if (endMarker !== 0x0) {\r\n                    console.warn(\"[BSONReader] BSON document did not properly deserialize!\", { document: data, detectedEndMarker: endMarker });\r\n                }\r\n                target[property] = data;\r\n            }\r\n        }\r\n        readObject(readAction) {\r\n            //the length of the document\r\n            let size = this.reader.readInt32();\r\n            size -= 4;\r\n            if (size === 0) {\r\n                this.reader.readByte();\r\n                return;\r\n            }\r\n            let idx = 0;\r\n            //console.log(size);\r\n            let start = this.reader.Index;\r\n            while (idx < size - 1) {\r\n                let type = this.reader.readByte();\r\n                let name = this.readCStringInteral();\r\n                let startPosition = this.reader.Index;\r\n                let expectedSize = this.getTypeSize(type);\r\n                readAction(name, type, this);\r\n                if (this.reader.Index === startPosition && expectedSize > 0) {\r\n                    //console.warn(\"Skipping ahead: \" + name + \" Expected Size: \" + expectedSize);\r\n                    this.reader.skipAhead(expectedSize);\r\n                }\r\n                idx = this.reader.Index - start;\r\n            }\r\n            let endMarker = this.reader.readByte();\r\n            if (endMarker != 0x0) {\r\n                console.warn(\"BSON document did not properly deserialize!\");\r\n            }\r\n            let readerSize = (this.reader.Index - start) + 5;\r\n            if (readerSize !== size + 5) {\r\n                console.warn(\"BSON Reader did not read the correct number of bytes for the document\");\r\n            }\r\n        }\r\n    }\r\n    Vertex.BSONReader = BSONReader;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    class UTF8 {\r\n        static Encode(str) {\r\n            var utf8 = [];\r\n            for (var i = 0; i < str.length; i++) {\r\n                var charcode = str.charCodeAt(i);\r\n                if (charcode < 0x80)\r\n                    utf8.push(charcode);\r\n                else if (charcode < 0x800) {\r\n                    utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));\r\n                }\r\n                else if (charcode < 0xd800 || charcode >= 0xe000) {\r\n                    utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\r\n                }\r\n                else {\r\n                    i++;\r\n                    charcode = ((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff);\r\n                    utf8.push(0xf0 | (charcode >> 18), 0x80 | ((charcode >> 12) & 0x3f), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\r\n                }\r\n            }\r\n            return utf8;\r\n        }\r\n        static Decode(data) {\r\n            var str = '';\r\n            var i;\r\n            for (i = 0; i < data.length; i++) {\r\n                var value = data[i];\r\n                if (value < 0x80) {\r\n                    str += String.fromCharCode(value);\r\n                }\r\n                else if (value > 0xBF && value < 0xE0) {\r\n                    str += String.fromCharCode((value & 0x1F) << 6 | data[i + 1] & 0x3F);\r\n                    i += 1;\r\n                }\r\n                else if (value > 0xDF && value < 0xF0) {\r\n                    str += String.fromCharCode((value & 0x0F) << 12 | (data[i + 1] & 0x3F) << 6 | data[i + 2] & 0x3F);\r\n                    i += 2;\r\n                }\r\n                else {\r\n                    var charCode = ((value & 0x07) << 18 | (data[i + 1] & 0x3F) << 12 | (data[i + 2] & 0x3F) << 6 | data[i + 3] & 0x3F) - 0x010000;\r\n                    str += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\r\n                    i += 3;\r\n                }\r\n            }\r\n            return str;\r\n        }\r\n    }\r\n    Vertex.UTF8 = UTF8;\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        class ComponentViewBase {\r\n            update() { }\r\n            ;\r\n            render() { }\r\n            ;\r\n        }\r\n        NodeComponentModel.ComponentViewBase = ComponentViewBase;\r\n        class EmptyComponentView extends ComponentViewBase {\r\n            addComponent(component, node) {\r\n            }\r\n            removeComponent(component, node) {\r\n            }\r\n            update() { }\r\n            ;\r\n            render() { }\r\n            ;\r\n        }\r\n        NodeComponentModel.EmptyComponentView = EmptyComponentView;\r\n        class ComponentControllerBase {\r\n            update() { }\r\n            ;\r\n            render() { }\r\n            ;\r\n        }\r\n        NodeComponentModel.ComponentControllerBase = ComponentControllerBase;\r\n        class EmptyComponentController extends ComponentControllerBase {\r\n            constructor() {\r\n                super();\r\n            }\r\n            addComponent(component, node) { }\r\n            removeComponent(component, node) { }\r\n        }\r\n        NodeComponentModel.EmptyComponentController = EmptyComponentController;\r\n        class ComponentSystemBase {\r\n            constructor(name, view, controller) {\r\n                this.components = new Map();\r\n                this.name = name;\r\n                this.view = view;\r\n                this.controller = controller;\r\n            }\r\n            init() { }\r\n            ;\r\n            update() {\r\n                this.controller.update();\r\n                this.view.update();\r\n            }\r\n            ;\r\n            render() {\r\n                this.controller.render();\r\n                this.view.render();\r\n            }\r\n            ;\r\n            addComponent(node, instance = null) {\r\n                if (this.components.has(node.id))\r\n                    return this.components.get(node.id);\r\n                var component = instance === null ? this.create() : instance;\r\n                this.components.set(node.id, component);\r\n                this.view.addComponent(component, node);\r\n                if (node.HasToken)\r\n                    this.controller.addComponent(component, node);\r\n                return component;\r\n            }\r\n            getComponent(node) {\r\n                if (this.components.has(node.id))\r\n                    return this.components.get(node.id);\r\n                return null;\r\n            }\r\n            removeComponent(node) {\r\n                if (this.components.has(node.id)) {\r\n                    var component = this.components.get(node.id);\r\n                    component.onRemoved.trigger();\r\n                    this.view.removeComponent(component, node);\r\n                    this.controller.removeComponent(component, node);\r\n                    this.components.delete(node.id);\r\n                }\r\n            }\r\n        }\r\n        NodeComponentModel.ComponentSystemBase = ComponentSystemBase;\r\n        class EmptyComponentSystem extends ComponentSystemBase {\r\n            constructor(componentClass) {\r\n                //cut the word Component off the end as described\r\n                var componentName = componentClass.name;\r\n                if (componentName.endsWith(\"Component\"))\r\n                    componentName = componentName.substring(0, componentName.length - (\"Component\".length));\r\n                super(componentName, new EmptyComponentView(), new EmptyComponentController());\r\n                this.componentClass = componentClass;\r\n                console.log(`[VERTX:EmtpyComponentSystem] Created EmptyComponentSystem for ${componentName}`, {\r\n                    class: componentClass,\r\n                    name: componentName,\r\n                    componentSystem: this\r\n                });\r\n            }\r\n            create() {\r\n                if (this.componentClass) {\r\n                    let instance = new this.componentClass();\r\n                    return instance;\r\n                }\r\n                else {\r\n                    console.error(\"[VERTX:EmtpyComponentSystem:create] Could not initialize constructor for \" + this.name);\r\n                }\r\n            }\r\n        }\r\n        NodeComponentModel.EmptyComponentSystem = EmptyComponentSystem;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        const transactionCharSet = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ_-\";\r\n        const transactionStrLen = 16;\r\n        function generateTransaction() {\r\n            let str = '';\r\n            for (let i = 0; i < transactionStrLen; ++i) {\r\n                let idx = Math.round(Math.random() * (transactionCharSet.length - 1));\r\n                str += transactionCharSet.charAt(idx);\r\n            }\r\n            return str;\r\n        }\r\n        function assertJanus(first, second) {\r\n            if (first.janus != second.janus)\r\n                throw new Error(`Unexpected response`);\r\n        }\r\n        function assertMatchingTransaction(first, second) {\r\n            if (first.transaction != second.transaction)\r\n                throw new Error(\"Wrong transaction\");\r\n        }\r\n        function assertSuccess(response) {\r\n            if (response.statusCode < 200 || response.statusCode >= 300) {\r\n                console.log(\"Janus non-success status\", response);\r\n                throw new Error(\"Expected success status\");\r\n            }\r\n            let janus = response.body && response.body.janus;\r\n            if (janus && janus == \"error\") {\r\n                console.log(\"Janus error response\", response);\r\n                throw new Error(\"Expected non-error janus response\");\r\n            }\r\n        }\r\n        class JanusApi {\r\n            /**\r\n             *\r\n             * @param vertexStackBase stackUrl with protocol and trailing slash, eg. 'https://vertx.cloud/'\r\n             */\r\n            constructor(vertexStackBase) {\r\n                this.janusBase = `${vertexStackBase}webrtc/`;\r\n            }\r\n            setBearerToken(token) {\r\n                this.token = token;\r\n            }\r\n            prepareInit(method) {\r\n                let init = {};\r\n                init.method = method;\r\n                init.headers = {\r\n                    \"Content-Type\": \"application/json\"\r\n                };\r\n                init.credentials = \"same-origin\";\r\n                if (this.token) {\r\n                    init.credentials = \"include\";\r\n                    init.headers[\"Authorization\"] = `Bearer ${this.token}`;\r\n                }\r\n                return init;\r\n            }\r\n            createVertexWebRtcSessionAsync(spaceId, viewpointId, debugVp8Test, debugH264Test) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    var api = `${this.janusBase}join`;\r\n                    var qparams = [\r\n                        `spaceId=${encodeURIComponent(spaceId)}`,\r\n                        `viewpointId=${encodeURIComponent(viewpointId)}`\r\n                    ];\r\n                    if (debugVp8Test)\r\n                        qparams.push(`debugvp8room=true`);\r\n                    if (debugH264Test)\r\n                        qparams.push(`debugh264room=true`);\r\n                    var query = qparams.join(\"&\");\r\n                    var uri = `${api}?${query}`;\r\n                    let init = this.prepareInit('post');\r\n                    let resp = yield fetch(uri, init);\r\n                    var result = yield resp.json();\r\n                    return result;\r\n                });\r\n            }\r\n            sendVertexKeepAlive(spaceId, viewpointId, sessionId) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    var api = `${this.janusBase}join/keepalive`;\r\n                    var qparams = [\r\n                        `spaceId=${encodeURIComponent(spaceId)}`,\r\n                        `viewpointId=${encodeURIComponent(viewpointId)}`,\r\n                        `sessionId=${sessionId}`\r\n                    ];\r\n                    var query = qparams.join(\"&\");\r\n                    var uri = `${api}?${query}`;\r\n                    let init = this.prepareInit('post');\r\n                    let resp = yield fetch(uri, init);\r\n                    return resp.ok;\r\n                });\r\n            }\r\n            getSessionInfoAsync(jSession) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    var result = {\r\n                        responseBody: null,\r\n                        error: null\r\n                    };\r\n                    try {\r\n                        let url = `${this.janusBase}janus/${jSession}`;\r\n                        let response = yield this.sendJanusRequestGet(url);\r\n                        if (response && response.body) {\r\n                            result.responseBody = response.body;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected response from server\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        result.error = e;\r\n                    }\r\n                    return result;\r\n                });\r\n            }\r\n            createVideoRoomPluginHandle(jsession) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    var result = {\r\n                        handle: 0,\r\n                        error: null\r\n                    };\r\n                    try {\r\n                        var message = {\r\n                            janus: \"attach\",\r\n                            plugin: \"janus.plugin.videoroom\",\r\n                            transaction: generateTransaction()\r\n                        };\r\n                        var response = yield this.sendJanusSessionRequest(jsession, message);\r\n                        assertSuccess(response);\r\n                        var body = response.body;\r\n                        assertSuccess(body);\r\n                        assertMatchingTransaction(message, body);\r\n                        // conveniently, this uses the same format as the 'create session' response: \r\n                        // the plugin handle is stored in data.id\r\n                        result.handle = body.data.id;\r\n                        console.debug(\"[WebRTC] Created videoroom session\", body);\r\n                    }\r\n                    catch (e) {\r\n                        result.error = e;\r\n                    }\r\n                    return result;\r\n                });\r\n            }\r\n            detachPluginHandle(jsession, handle) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    var result = {\r\n                        handle: 0,\r\n                        error: null\r\n                    };\r\n                    try {\r\n                        var message = {\r\n                            janus: \"detach\",\r\n                            transaction: generateTransaction()\r\n                        };\r\n                        var response = yield this.sendJanusPluginRequest(jsession, handle, message);\r\n                        assertSuccess(response);\r\n                        var body = response.body;\r\n                        assertSuccess(body);\r\n                        assertMatchingTransaction(message, body);\r\n                    }\r\n                    catch (e) {\r\n                        result.error = e;\r\n                    }\r\n                    return result;\r\n                });\r\n            }\r\n            joinVideoRoomAsPublisher(jsession, handle, roomId, displayName) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"join\",\r\n                                ptype: \"publisher\",\r\n                                room: roomId,\r\n                                display: displayName\r\n                            }\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(jsession, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Joined as publisher\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            leaveVideoRoom(jsession, handle) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"leave\",\r\n                            }\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(jsession, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Left videoroom\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            videoRoomSubscribe(session, handle, publisherId, roomId, enableRemoteAudio, enableRemoteVideo) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        if (handle == 0)\r\n                            throw new Error(\"invalid handle\");\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"join\",\r\n                                ptype: \"subscriber\",\r\n                                room: roomId,\r\n                                feed: publisherId,\r\n                                audio: enableRemoteAudio,\r\n                                video: enableRemoteVideo,\r\n                                offer_audio: enableRemoteAudio,\r\n                                offer_video: enableRemoteVideo,\r\n                                // don't close the peerconnection when the publisher leaves.\r\n                                // this is important, as it keeps the view's peerconnection with janus active, allowing that view to\r\n                                // switch to another subscription. This is useful if the publisher's internet drops and they re-publish\r\n                                // but they don't necessarily create a new vertex node.\r\n                                // The peerconnection will still be closed on vertex node removal.\r\n                                close_pc: false\r\n                            }\r\n                        };\r\n                        console.debug(\"[WebRTC] Joining as subscriber...\", { message, handle });\r\n                        let response = yield this.sendJanusPluginRequest(session, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Joined as subscriber\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            videoRoomSwitch(session, handle, publisherId) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        if (handle == 0)\r\n                            throw new Error(\"invalid handle\");\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"switch\",\r\n                                feed: publisherId,\r\n                            }\r\n                        };\r\n                        console.debug(\"[WebRTC] Switching subscription...\", { message, handle });\r\n                        let response = yield this.sendJanusPluginRequest(session, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Switched Subscription\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            videoRoomConfigureRestart(session, handle) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        if (handle == 0)\r\n                            throw new Error(\"invalid handle\");\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"configure\",\r\n                                restart: true,\r\n                            }\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(session, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Sent Configure Restart request\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            startSubscribe(session, handle, type, content) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        if (type != \"offer\" && type != \"answer\")\r\n                            throw new Error(\"unsupported sdp type\");\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"start\"\r\n                            },\r\n                            jsep: {\r\n                                type: type,\r\n                                sdp: content\r\n                            }\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(session, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Started subscriber feed\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            sendTrickleIce(jsession, handle, sdpMid, sdpMlineIndex, content) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        let message = {\r\n                            janus: \"trickle\",\r\n                            transaction: generateTransaction(),\r\n                            candidate: {\r\n                                sdpMid: sdpMid,\r\n                                sdpMLineIndex: sdpMlineIndex,\r\n                                candidate: content\r\n                            }\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(jsession, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] Sent ICE\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            sendTrickleIceCompleted(jsession, handle) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        let message = {\r\n                            janus: \"trickle\",\r\n                            transaction: generateTransaction(),\r\n                            candidate: {\r\n                                completed: true\r\n                            }\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(jsession, handle, message);\r\n                        assertSuccess(response);\r\n                        console.log(\"[WebRTC] ICE Completed\", response.body);\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            publishToVideoRoom(jsession, handle, audio, video, type, content) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        if (type != \"offer\" && type != \"answer\")\r\n                            throw new Error(\"sdp type unsupported\");\r\n                        let jsep = {\r\n                            type: type,\r\n                            sdp: content\r\n                        };\r\n                        let message = {\r\n                            janus: \"message\",\r\n                            transaction: generateTransaction(),\r\n                            body: {\r\n                                request: \"configure\",\r\n                                audio: !!audio,\r\n                                video: !!video,\r\n                            },\r\n                            jsep: jsep\r\n                        };\r\n                        let response = yield this.sendJanusPluginRequest(jsession, handle, message);\r\n                        assertSuccess(response);\r\n                        console.debug(\"[WebRTC] publish request made\", { request: message, response: response.body });\r\n                        return {};\r\n                    }\r\n                    catch (e) {\r\n                        return { error: e };\r\n                    }\r\n                });\r\n            }\r\n            sendJanusSessionRequest(jsession, message) {\r\n                let url = `${this.janusBase}janus/${jsession}`;\r\n                return this.sendJanusRequestPost(url, message);\r\n            }\r\n            sendJanusPluginRequest(jsession, handle, message) {\r\n                let url = `${this.janusBase}janus/${jsession}/${handle}`;\r\n                return this.sendJanusRequestPost(url, message);\r\n            }\r\n            sendJanusRequestPost(uri, message) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (!message.janus)\r\n                        throw new Error(`The 'janus' property is not set in message`);\r\n                    let init = this.prepareInit('post');\r\n                    init.body = JSON.stringify(message);\r\n                    let resp = yield fetch(uri, init);\r\n                    let body = yield resp.json();\r\n                    return {\r\n                        statusCode: resp.status,\r\n                        body: body\r\n                    };\r\n                });\r\n            }\r\n            sendJanusRequestGet(uri) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let init = this.prepareInit('get');\r\n                    let resp = yield fetch(uri, init);\r\n                    let body = yield resp.json();\r\n                    return {\r\n                        statusCode: resp.status,\r\n                        body: body\r\n                    };\r\n                });\r\n            }\r\n        }\r\n        NodeComponentModel.JanusApi = JanusApi;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let WebRtc;\r\n    (function (WebRtc) {\r\n        class WebRtcStatTracker {\r\n            constructor() {\r\n                this.displaySensitiveInfo = false;\r\n                this.displayAllRtcStats = false;\r\n                this.peerConnectionMonitors = new Map();\r\n                this.scopes = new Map();\r\n            }\r\n            getJsonSnapshot() {\r\n                return JSON.stringify(this.scopes, this.jsonMapReplacer.bind(this), 2);\r\n            }\r\n            downloadJsonSnapshot() {\r\n                let blob = new Blob([this.getJsonSnapshot()], { type: 'application/json' });\r\n                let fileUrl = URL.createObjectURL(blob);\r\n                let now = new Date();\r\n                let dateStr = now.toISOString().replace('.', '_').replace('/', '_');\r\n                let anchor = document.createElement('a');\r\n                anchor.href = fileUrl;\r\n                anchor.download = `webrtc_stats_${dateStr}.json`;\r\n                anchor.setAttribute('href', fileUrl);\r\n                anchor.click();\r\n            }\r\n            jsonMapReplacer(key, value) {\r\n                if (value instanceof Map) {\r\n                    return this.objectFromEntries(value);\r\n                }\r\n                return value;\r\n            }\r\n            objectFromEntries(entries) {\r\n                if (!entries || !entries[Symbol.iterator]) {\r\n                    throw new Error('Object.fromEntries() requires a single iterable argument');\r\n                }\r\n                let obj = {};\r\n                for (let [key, value] of entries) {\r\n                    obj[key] = value;\r\n                }\r\n                return obj;\r\n            }\r\n            ;\r\n            set(scopeName, statName, value, sensitive = false) {\r\n                // create scope if needed\r\n                let scope = this.scopes.get(scopeName);\r\n                if (!scope) {\r\n                    scope = {\r\n                        stats: new Map(),\r\n                        visible: displayByDefault(scopeName),\r\n                    };\r\n                    this.scopes.set(scopeName, scope);\r\n                }\r\n                // update the value\r\n                // we might need to split this down into an object\r\n                let parts = statName.split('.');\r\n                if (parts.length == 2) {\r\n                    // splitting logic\r\n                    let rootObj = scope.stats.get(parts[0]);\r\n                    if (!rootObj) {\r\n                        rootObj = {\r\n                            value: {},\r\n                            sensitive: false,\r\n                            timestamp: new Date()\r\n                        };\r\n                    }\r\n                    // now based on the split, set the value downwards.\r\n                    // todo: recursive?\r\n                    if (!rootObj.value[parts[1]])\r\n                        rootObj.value[parts[1]] = {};\r\n                    rootObj.value[parts[1]] = value;\r\n                    rootObj.timestamp = new Date();\r\n                    scope.stats.set(parts[0], rootObj);\r\n                }\r\n                // no dots - put it straight in\r\n                if (parts.length === 1) {\r\n                    scope.stats.set(statName, { value, sensitive: !!sensitive, timestamp: new Date() });\r\n                }\r\n                this.pendingRefresh = true;\r\n            }\r\n            increment(scopeName, stat, amount = 1) {\r\n                let scope = this.scopes.get(scopeName);\r\n                if (!scope) {\r\n                    scope = {\r\n                        stats: new Map(),\r\n                        visible: displayByDefault(scopeName)\r\n                    };\r\n                    this.scopes.set(scopeName, scope);\r\n                }\r\n                // increment the value\r\n                let current = scope.stats.get(stat);\r\n                if (!current) {\r\n                    this.set(scopeName, stat, 0);\r\n                    current = scope.stats.get(stat);\r\n                }\r\n                current.value = +current.value + amount;\r\n                current.timestamp = new Date();\r\n                this.pendingRefresh = true;\r\n            }\r\n            trackPeerConnection(scopeName, stat, peerConnection) {\r\n                this.set(scopeName, stat, { pending: true }, false);\r\n                let interval = setInterval(() => __awaiter(this, void 0, void 0, function* () {\r\n                    let stats = yield peerConnection.getStats();\r\n                    // reorganise the stats by type, because it's more useful\r\n                    const sortedStats = new Map();\r\n                    const boringStats = [\r\n                        'certificate',\r\n                        'codec',\r\n                        //'local-candidate',\r\n                        //'remote-candidate',\r\n                        'track',\r\n                        'stream',\r\n                        'peer-connection',\r\n                    ];\r\n                    stats.forEach((val) => {\r\n                        // each rtc stat has a 'type' and 'id' field.\r\n                        // we re-sort it by type.\r\n                        // also, just drop any irrelevant stats\r\n                        if (boringStats.indexOf(val.type) > -1)\r\n                            return;\r\n                        let arr = sortedStats.get(val.type);\r\n                        if (!arr) {\r\n                            arr = [];\r\n                            sortedStats.set(val.type, arr);\r\n                        }\r\n                        arr.push(val);\r\n                    });\r\n                    this.set(scopeName, \"rtcStats\", sortedStats);\r\n                }), 1000);\r\n                this.peerConnectionMonitors.set(peerConnection, interval);\r\n            }\r\n            untrackPeerConnection(peerConnection) {\r\n                let interval = this.peerConnectionMonitors.get(peerConnection);\r\n                if (interval)\r\n                    clearInterval(interval);\r\n            }\r\n            getScopeVisible(scopeName) {\r\n                let scope = this.scopes.get(scopeName);\r\n                if (!scope)\r\n                    return false;\r\n                return scope.visible;\r\n            }\r\n            setScopeVisible(scopeName, isVisible) {\r\n                let scope = this.scopes.get(scopeName);\r\n                if (!scope)\r\n                    return;\r\n                scope.visible = !!isVisible;\r\n                this.pendingRefresh = true;\r\n            }\r\n            setWindowVisible(isVisible) {\r\n                if (isVisible) {\r\n                    // create stats window if needed\r\n                    if (!this.statsWindowElement) {\r\n                        this.statsWindowElement = this.createStatsWindowElement();\r\n                    }\r\n                    // inject styles if needed\r\n                    if (!document.querySelector(\".vertex-webrtc-styles\")) {\r\n                        let styles = WebRtc.createStatsCss();\r\n                        document.head.appendChild(styles);\r\n                    }\r\n                    // ensure it's visible and such\r\n                    document.documentElement.appendChild(this.statsWindowElement);\r\n                    // start refresh handlers\r\n                    this.refreshIntervalHandle = setInterval(() => {\r\n                        if (this.pendingRefresh) {\r\n                            this.refreshStatsDisplay();\r\n                        }\r\n                    }, 16);\r\n                    this.periodicRefreshHandle = setInterval(() => {\r\n                        this.pendingRefresh = true;\r\n                    }, 1000);\r\n                }\r\n                else {\r\n                    clearInterval(this.refreshIntervalHandle);\r\n                    clearInterval(this.periodicRefreshHandle);\r\n                    if (this.statsWindowElement) {\r\n                        this.statsWindowElement.remove();\r\n                        this.statsWindowElement = undefined;\r\n                    }\r\n                }\r\n            }\r\n            createStatsWindowElement() {\r\n                let root = document.createElement('div');\r\n                root.classList.add(\"vertex-webrtc-stats-window\");\r\n                {\r\n                    let heading = document.createElement('div');\r\n                    heading.classList.add('vertex-webrtc-stats-window-header');\r\n                    heading.innerText = \"WebRTC Stats\";\r\n                    {\r\n                        let check = document.createElement('input');\r\n                        check.type = \"checkbox\";\r\n                        check.title = \"Reveal Sensitive Info\";\r\n                        check.checked = false;\r\n                        check.addEventListener('change', () => {\r\n                            this.displaySensitiveInfo = check.checked;\r\n                            this.pendingRefresh = true;\r\n                        });\r\n                        let checkLabel = document.createElement(\"label\");\r\n                        checkLabel.appendChild(check);\r\n                        checkLabel.appendChild(document.createTextNode(\"Show Sensitive Info\"));\r\n                        checkLabel.style.cssFloat = \"right\";\r\n                        heading.appendChild(checkLabel);\r\n                    }\r\n                    {\r\n                        let check = document.createElement('input');\r\n                        check.type = \"checkbox\";\r\n                        check.title = \"Show All RTC Info\";\r\n                        check.checked = false;\r\n                        check.addEventListener('change', () => {\r\n                            this.displayAllRtcStats = check.checked;\r\n                            this.pendingRefresh = true;\r\n                        });\r\n                        let checkLabel = document.createElement(\"label\");\r\n                        checkLabel.appendChild(check);\r\n                        checkLabel.appendChild(document.createTextNode(\"Show All RTC Info\"));\r\n                        checkLabel.style.cssFloat = \"right\";\r\n                        heading.appendChild(checkLabel);\r\n                    }\r\n                    {\r\n                        let saveBtn = document.createElement('button');\r\n                        saveBtn.type = 'button';\r\n                        saveBtn.style.cssFloat = 'right';\r\n                        saveBtn.innerText = \"Save\";\r\n                        saveBtn.addEventListener('click', () => {\r\n                            this.downloadJsonSnapshot();\r\n                        });\r\n                        heading.appendChild(saveBtn);\r\n                    }\r\n                    root.appendChild(heading);\r\n                }\r\n                {\r\n                    let body = document.createElement('div');\r\n                    body.classList.add('vertex-webrtc-stats-window-body');\r\n                    body.innerHTML = `<em>There are no stats.</em>`;\r\n                    root.appendChild(body);\r\n                }\r\n                return root;\r\n            }\r\n            refreshStatsDisplay() {\r\n                if (!this.statsWindowElement)\r\n                    return;\r\n                this.pendingRefresh = false;\r\n                let windowBody = this.statsWindowElement.querySelector('.vertex-webrtc-stats-window-body');\r\n                // clear window and draw again.\r\n                // !! slow!\r\n                while (windowBody.firstChild)\r\n                    windowBody.removeChild(windowBody.firstChild);\r\n                for (let [scope, { stats, visible }] of this.scopes.entries()) {\r\n                    let scopeContainer = document.createElement('div');\r\n                    scopeContainer.classList.add(\"vertex-webrtc-stats-scope\");\r\n                    scopeContainer.dataset[\"webrtcStatScope\"] = scope;\r\n                    let table = document.createElement(\"table\");\r\n                    table.style.verticalAlign = 'top';\r\n                    table.style.textAlign = \"left\";\r\n                    table.style.width = \"100%\";\r\n                    table.dataset[\"scopeName\"] = scope;\r\n                    {\r\n                        let thead = document.createElement(\"thead\");\r\n                        thead.classList.add(\"vertex-webrtc-toggle\", \"vertex-webrtc-toggle-inactive\");\r\n                        thead.addEventListener(\"click\", this.toggleBody.bind(this));\r\n                        table.appendChild(thead);\r\n                        let headRow = document.createElement(\"tr\");\r\n                        let th = document.createElement(\"th\");\r\n                        th.innerText = scope;\r\n                        th.colSpan = 2;\r\n                        headRow.appendChild(th);\r\n                        thead.appendChild(headRow);\r\n                    }\r\n                    if (visible) {\r\n                        let tbody = document.createElement(\"tbody\");\r\n                        table.appendChild(tbody);\r\n                        for (let [stat, val] of stats.entries()) {\r\n                            if (stat === 'rtcStats' && !this.displayAllRtcStats)\r\n                                continue;\r\n                            let tr = document.createElement(\"tr\");\r\n                            let statcell = document.createElement(\"th\");\r\n                            statcell.style.verticalAlign = 'top';\r\n                            let valcell = document.createElement(\"td\");\r\n                            statcell.innerText = stat;\r\n                            let isSensitive = val.sensitive && !this.displaySensitiveInfo;\r\n                            let [formattedValue, formattedTooltip] = formatVal(val.value, isSensitive);\r\n                            valcell.appendChild(formattedValue);\r\n                            valcell.title = formattedTooltip;\r\n                            tr.appendChild(statcell);\r\n                            tr.appendChild(valcell);\r\n                            tbody.appendChild(tr);\r\n                        }\r\n                    }\r\n                    scopeContainer.appendChild(table);\r\n                    windowBody.appendChild(scopeContainer);\r\n                }\r\n            }\r\n            toggleBody(event) {\r\n                let target = event.currentTarget;\r\n                let table = target.parentElement;\r\n                let scope = table.dataset[\"scopeName\"];\r\n                let current = this.getScopeVisible(scope);\r\n                this.setScopeVisible(scope, !current);\r\n            }\r\n        }\r\n        WebRtc.WebRtcStatTracker = WebRtcStatTracker;\r\n        function createStatsCss() {\r\n            // this is horrific but it means we don't have to rely on shipping and loading a stylesheet in client apps\r\n            let styles = document.createElement(\"style\");\r\n            styles.classList.add(\"vertex-webrtc-styles\");\r\n            styles.innerHTML = `\r\n.vertex-webrtc-stats-window {\r\n    color: black;\r\n    font-size: 0.8rem;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    min-width: 450px;\r\n    min-height: 200px;\r\n    border: 1px solid rgba(255, 255, 255, 0.75);\r\n    background: rgba(255, 255, 255, 0.666);\r\n    padding: 0.333rem;\r\n    margin: 1rem 2rem;\r\n    border-radius: 2px;\r\n    z-index: 1000;\r\n}\r\n\r\n.vertex-webrtc-stats-window-header {\r\n    /*cursor: move;*/\r\n    border: 1px solid rgba(255, 255, 255, 0.75);\r\n    background: rgba(255, 255, 255, 0.5);\r\n    padding: 0.333rem;\r\n    margin: -0.333rem -0.333rem 0.333rem;\r\n}\r\n\r\n.vertex-webrtc-stats-window-body {\r\n}\r\n.vertex-webrtc-stats-scope {\r\n    border-bottom: 1px solid black;\r\n}\r\n.vertex-webrtc-dimmed {\r\n    opacity: 50%;\r\n}\r\n\r\n.vertex-webrtc-toggle {\r\n    cursor: pointer;\r\n}\r\n\r\n.vertex-webrtc-toggle:hover {\r\n    text-decoration: underline;\r\n}\r\n`;\r\n            return styles;\r\n        }\r\n        WebRtc.createStatsCss = createStatsCss;\r\n        function displayByDefault(scopeName) {\r\n            if (scopeName.startsWith(\"vrh\"))\r\n                return true;\r\n            if (scopeName.startsWith(\"observer\"))\r\n                return true;\r\n            if (scopeName.startsWith(\"Controller\"))\r\n                return true;\r\n            return false;\r\n        }\r\n        function formatVal(val, isSensitiveValue) {\r\n            if (Array.isArray(val))\r\n                return arrayFormatter(val);\r\n            if (val instanceof Date)\r\n                return dateValueFormatter(val);\r\n            if (val instanceof Map)\r\n                return mapFormatter(val);\r\n            if (isRtcStatObject(val))\r\n                return rtcStatFormatter(val);\r\n            // place other specialized formatters above this one.\r\n            if (typeof val === 'object')\r\n                return objectFormatter(val);\r\n            // by now, this should be a trivial value - string cast it\r\n            return stringFormatter(val, isSensitiveValue);\r\n        }\r\n        function stringFormatter(val, isSensitive) {\r\n            let valStr = typeof val !== 'undefined' ? val.toString() : \"undefined\";\r\n            if (isSensitive) {\r\n                let parent = document.createElement('span');\r\n                let hiddenHint = document.createElement('em');\r\n                hiddenHint.classList.add(\"vertex-webrtc-dimmed\");\r\n                hiddenHint.innerText = \"(Hidden)\";\r\n                parent.appendChild(hiddenHint);\r\n                let obscuredValue = document.createTextNode(valStr.substr(-4));\r\n                parent.appendChild(obscuredValue);\r\n                return [parent];\r\n            }\r\n            // not sensitive\r\n            else {\r\n                let tn = document.createTextNode(valStr);\r\n                return [tn];\r\n            }\r\n        }\r\n        function dateValueFormatter(val) {\r\n            let now = new Date().getTime();\r\n            let then = val.getTime();\r\n            let delta = now - then;\r\n            let seconds = delta / 1000;\r\n            let tn = document.createTextNode(`${seconds}s ago`);\r\n            return [tn, val.toString()];\r\n        }\r\n        function mapFormatter(map) {\r\n            // format this as a mini table inside\r\n            let table = document.createElement('table');\r\n            table.style.verticalAlign = 'top';\r\n            let tbody = document.createElement('tbody');\r\n            table.appendChild(tbody);\r\n            for (let [key, val] of map.entries()) {\r\n                // heading\r\n                let hrow = document.createElement('tr');\r\n                let th = document.createElement('th');\r\n                th.innerText = key;\r\n                th.style.verticalAlign = \"top\";\r\n                hrow.appendChild(th);\r\n                tbody.appendChild(hrow);\r\n                // content cell\r\n                let [content, title] = formatVal(val, false);\r\n                let brow = document.createElement('tr');\r\n                let td = document.createElement('td');\r\n                td.appendChild(content);\r\n                td.title = title;\r\n                brow.appendChild(td);\r\n                tbody.appendChild(brow);\r\n            }\r\n            return [table];\r\n        }\r\n        function arrayFormatter(arr) {\r\n            // format this as a mini table inside\r\n            let table = document.createElement('table');\r\n            let tbody = document.createElement('tbody');\r\n            table.appendChild(tbody);\r\n            for (let val of arr) {\r\n                let [content, title] = formatVal(val, false);\r\n                let tr = document.createElement('tr');\r\n                let td = document.createElement('td');\r\n                td.appendChild(content);\r\n                td.title = title;\r\n                tr.appendChild(td);\r\n                tbody.appendChild(tr);\r\n            }\r\n            return [table];\r\n        }\r\n        function objectFormatter(val) {\r\n            // format this as a mini table inside\r\n            let table = document.createElement('table');\r\n            table.style.verticalAlign = 'top';\r\n            let tbody = document.createElement('tbody');\r\n            table.appendChild(tbody);\r\n            for (let key of Object.getOwnPropertyNames(val)) {\r\n                let row = document.createElement('tr');\r\n                // key/heading\r\n                let th = document.createElement('th');\r\n                th.innerText = key;\r\n                th.style.verticalAlign = \"top\";\r\n                row.appendChild(th);\r\n                // value/content\r\n                let item = val[key];\r\n                let td = document.createElement('td');\r\n                let [content, title] = formatVal(item, false);\r\n                td.appendChild(content);\r\n                td.title = title;\r\n                row.appendChild(td);\r\n                tbody.appendChild(row);\r\n            }\r\n            return [table];\r\n        }\r\n        const rtcStatAllIgnoredValues = [\r\n            'type',\r\n            'timestamp'\r\n        ];\r\n        const rtcStatIgnoredValues = {\r\n            'media-source': [\r\n                'trackIdentifier',\r\n                'audioLevel',\r\n                'totalAudioEnergy',\r\n                'echoReturnLossEnhancement',\r\n                'echoReturnLoss',\r\n                'totalSamplesDuration',\r\n            ],\r\n            'candidate-pair': [\r\n                'localCandidateId',\r\n                'remoteCandidateId',\r\n                'priority',\r\n                'transportId'\r\n            ],\r\n            'inbound-rtp': [\r\n                ''\r\n            ],\r\n            'outbound-rtp': [\r\n                'trackId',\r\n                'codecId',\r\n                'remoteSourceId',\r\n                'remoteId',\r\n                'transportId',\r\n                'mediaSourceId',\r\n                'firCount',\r\n                'pliCount',\r\n                'kind',\r\n                'framesEncoded',\r\n                'keyFramesEncoded',\r\n                'totalEncodeTime',\r\n                'totalEncodedBytesTarget',\r\n                'qpSum'\r\n            ],\r\n            'transport': [\r\n                'localCertificateId',\r\n                'remoteCertificateId',\r\n                'tlsVersion',\r\n                'dtlsCipher',\r\n                'srtpCipher',\r\n                'selectedCandidatePairChanges'\r\n            ]\r\n        };\r\n        const rtcStatFilters = {\r\n            'candidate-pair': (val) => {\r\n                if (val.state === 'waiting')\r\n                    return false;\r\n                if (val.state === 'in-progress')\r\n                    return false;\r\n                return true;\r\n            }\r\n        };\r\n        function rtcStatFormatter(val) {\r\n            // format this as a mini table inside\r\n            let table = document.createElement('table');\r\n            table.style.verticalAlign = 'top';\r\n            let tbody = document.createElement('tbody');\r\n            table.appendChild(tbody);\r\n            // apply filters to bypass some stats\r\n            let filterFunc = rtcStatFilters[val.type];\r\n            if (filterFunc)\r\n                if (!filterFunc(val))\r\n                    return [table];\r\n            for (let key of Object.getOwnPropertyNames(val)) {\r\n                // skip boring keys\r\n                if (rtcStatAllIgnoredValues.indexOf(key) > -1)\r\n                    continue;\r\n                if (Array.isArray(rtcStatIgnoredValues[val.type]))\r\n                    if (rtcStatIgnoredValues[val.type].indexOf(key) > -1)\r\n                        continue;\r\n                let row = document.createElement('tr');\r\n                // key/heading\r\n                let th = document.createElement('th');\r\n                th.innerText = key;\r\n                th.style.verticalAlign = \"top\";\r\n                row.appendChild(th);\r\n                // value/content\r\n                let item = val[key];\r\n                let td = document.createElement('td');\r\n                let [content, title] = formatVal(item, false);\r\n                td.appendChild(content);\r\n                td.title = title;\r\n                row.appendChild(td);\r\n                tbody.appendChild(row);\r\n            }\r\n            return [table];\r\n        }\r\n        function isRtcStatObject(val) {\r\n            if (typeof val !== 'object')\r\n                return false;\r\n            if ('id' in val &&\r\n                typeof val['id'] === 'string' &&\r\n                val['id'].startsWith('RTC'))\r\n                return true;\r\n            return false;\r\n        }\r\n    })(WebRtc = Vertex.WebRtc || (Vertex.WebRtc = {}));\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"janusapi.ts\"/>\r\n/// <reference path=\"webrtcstats.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        /** internally used as part of webrtc - this has some caveats and bugs and should not be used outside of webrtc. */\r\n        class _WebRTCEvent {\r\n            constructor() {\r\n                this.handlers = new Map();\r\n            }\r\n            add(handler, context) {\r\n                if (typeof handler === \"function\")\r\n                    this.handlers.set(handler, context);\r\n                else\r\n                    throw new Error(\"handler must be a function\");\r\n            }\r\n            remove(handler) {\r\n                this.handlers.delete(handler);\r\n            }\r\n            invoke(sender, e) {\r\n                this.handlers.forEach((thisArg, fn) => {\r\n                    if (thisArg)\r\n                        fn.call(thisArg, sender, e);\r\n                    else\r\n                        fn(sender, e);\r\n                });\r\n            }\r\n        }\r\n        NodeComponentModel._WebRTCEvent = _WebRTCEvent;\r\n        function delay(timeoutMs) {\r\n            return new Promise((resolve) => {\r\n                setTimeout(resolve, timeoutMs);\r\n            });\r\n        }\r\n        class JanusSessionObserver {\r\n            constructor(janus, statTracker) {\r\n                this.janus = janus;\r\n                this.cts = new CancellationTokenSource();\r\n                this.stats = statTracker;\r\n                this.onError = new _WebRTCEvent();\r\n                this.onKeepAlive = new _WebRTCEvent();\r\n                this.onEvent = new _WebRTCEvent();\r\n                this.onVideoRoomEvent = new _WebRTCEvent();\r\n                this.onWebRtcUp = new _WebRTCEvent();\r\n                this.onWebRtcMedia = new _WebRTCEvent();\r\n                this.onWebRtcSlowLink = new _WebRTCEvent();\r\n                this.onWebRtcHangup = new _WebRTCEvent();\r\n                this.onEvent.add(this.self_onEvent, this);\r\n            }\r\n            observeSession(sessionId, spaceId, viewpointId) {\r\n                if (this.observing) {\r\n                    throw new Error(\"already observing\");\r\n                }\r\n                this.spaceId = spaceId;\r\n                this.viewpointId = viewpointId;\r\n                this.sessionId = sessionId;\r\n                this.observing = true;\r\n                // todo: cancellation\r\n                // note: not awaited on purpose\r\n                this.stats.set(\"observer\", \"keepAlive.sentAt\", \"Never\");\r\n                this.stats.set(\"observer\", \"keepAlive.sendRtt\", -1);\r\n                this.stats.set(\"observer\", \"keepAlive.receivedAt\", \"Never\");\r\n                this.stats.set(\"observer\", \"lastMessage.time\", \"Never\");\r\n                this.stats.set(\"observer\", \"lastMessage.type\", \"none\");\r\n                this.beginObserveSessionAndKeepAliveAsync();\r\n            }\r\n            destroy() {\r\n                this.cts.cancel();\r\n            }\r\n            beginObserveSessionAndKeepAliveAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    // todo: cancellation\r\n                    try {\r\n                        while (!this.cts.isCancellationRequested) {\r\n                            try {\r\n                                var response = yield this.janus.getSessionInfoAsync(this.sessionId);\r\n                                if (response.error != null)\r\n                                    throw response.error;\r\n                                this.cts.throwIfCancelled();\r\n                                var root = response.responseBody;\r\n                                if (!root)\r\n                                    throw new Error(\"No response for session info, the session has probably closed.\");\r\n                                this.stats.set(\"observer\", \"lastMessage.time\", new Date());\r\n                                this.stats.set(\"observer\", \"lastMessage.type\", root.janus);\r\n                                // handle response and fire events\r\n                                var evt = root.janus;\r\n                                switch (evt) {\r\n                                    case \"keepalive\":\r\n                                        try {\r\n                                            this.stats.set(\"observer\", \"keepAlive.receivedAt\", new Date());\r\n                                            this.onKeepAlive.invoke(this, root);\r\n                                        }\r\n                                        catch (e) {\r\n                                            console.error(`[WebRTC] Unhandled Error while firing OnKeepAlive for session ${this.sessionId}:`, e);\r\n                                        }\r\n                                        break;\r\n                                    case \"event\":\r\n                                        try {\r\n                                            this.onEvent.invoke(this, root);\r\n                                        }\r\n                                        catch (e) {\r\n                                            console.error(`[WebRTC] Unhandled Error while firing OnEvent for session ${this.sessionId}`, e);\r\n                                        }\r\n                                        break;\r\n                                    case \"webrtcup\":\r\n                                        try {\r\n                                            this.onWebRtcUp.invoke(this, root);\r\n                                        }\r\n                                        catch (e) {\r\n                                            console.error(`[WebRTC] Unhandled error while firing OnWebRtcUp for session ${this.sessionId}`, e);\r\n                                        }\r\n                                        break;\r\n                                    case \"hangup\":\r\n                                        try {\r\n                                            this.onWebRtcHangup.invoke(this, root);\r\n                                        }\r\n                                        catch (e) {\r\n                                            console.error(`[WebRTC] Unhandled error while firing OnWebRtcHangup for session ${this.sessionId}`, e);\r\n                                        }\r\n                                        break;\r\n                                    case \"media\":\r\n                                        try {\r\n                                            this.onWebRtcMedia.invoke(this, root);\r\n                                        }\r\n                                        catch (e) {\r\n                                            console.error(`[WebRTC] Unhandled error while firing OnWebRtcMedia for session ${this.sessionId}`, e);\r\n                                        }\r\n                                        break;\r\n                                    case \"slowlink\":\r\n                                        try {\r\n                                            this.onWebRtcSlowLink.invoke(this, root);\r\n                                        }\r\n                                        catch (e) {\r\n                                            console.error(`[WebRTC] Unhandled error while firing OnWebRtcSlowLink for session ${this.sessionId}`, e);\r\n                                        }\r\n                                        break;\r\n                                    default:\r\n                                        console.warn(`[WebRTC] Unknown Janus Event '${evt}' received from server for ${this.sessionId}`, root);\r\n                                        break;\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                                this.stats.set(\"observer\", \"remoteError\", new Date());\r\n                                console.error(`[WebRTC] Unhandled Error while observing session ${this.sessionId}:`, e);\r\n                                this.onError.invoke(this, e);\r\n                                return;\r\n                            }\r\n                            finally {\r\n                                try {\r\n                                    let startTime = new Date().getTime();\r\n                                    yield this.janus.sendVertexKeepAlive(this.spaceId, this.viewpointId, this.sessionId);\r\n                                    let endTime = new Date().getTime();\r\n                                    let delta = endTime - startTime;\r\n                                    this.stats.set(\"observer\", \"keepAlive.sendRtt\", delta);\r\n                                    this.stats.set(\"observer\", \"keepAlive.sentAt\", new Date());\r\n                                }\r\n                                catch (e) {\r\n                                    this.stats.set(\"observer\", \"keepAliveError\", new Date());\r\n                                    console.error(`[WebRTC] Unhandled Error while sending KeepAlive for ${this.sessionId}: `, e);\r\n                                    this.onError.invoke(this, e);\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    finally {\r\n                        this.stats.set(\"observer\", \"observerStopped\", new Date());\r\n                    }\r\n                });\r\n            }\r\n            self_onEvent(sender, evt) {\r\n                let plugin = evt.plugindata.plugin;\r\n                switch (plugin) {\r\n                    case \"janus.plugin.videoroom\":\r\n                        // todo: could reprocess this\r\n                        this.onVideoRoomEvent.invoke(this, evt);\r\n                        break;\r\n                    default:\r\n                        console.warn(`[WebRTC] Unknown plugin '${plugin}' received in event from server for ${this.sessionId}:`, evt);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        NodeComponentModel.JanusSessionObserver = JanusSessionObserver;\r\n        class TaskCompletionSource {\r\n            constructor() {\r\n                this._completed = false;\r\n                let self = this;\r\n                this._promise = new Promise((a, b) => {\r\n                    self._resolver = a;\r\n                    self._rejecter = b;\r\n                });\r\n            }\r\n            trySetResult(value) {\r\n                this._resolver(value);\r\n                this._completed = true;\r\n                return true;\r\n            }\r\n            trySetException(e) {\r\n                this._rejecter(e);\r\n                this._completed = true;\r\n                return true;\r\n            }\r\n            trySetCancelled() {\r\n                this._rejecter(new Error(\"Task was cancelled\"));\r\n                this._completed = true;\r\n                return true;\r\n            }\r\n            get task() {\r\n                return this._promise;\r\n            }\r\n            get isCompleted() {\r\n                return this._completed;\r\n            }\r\n        }\r\n        NodeComponentModel.TaskCompletionSource = TaskCompletionSource;\r\n        class CancellationTokenSource {\r\n            constructor() {\r\n                this.callbacks = new Set();\r\n                this._cancellationPromise = new Promise((resolver) => {\r\n                    this._cancellationResolver = resolver;\r\n                });\r\n                this._cancelled = false;\r\n            }\r\n            get isCancellationRequested() { return this._cancelled; }\r\n            register(callback) {\r\n                this.callbacks.add(callback);\r\n            }\r\n            cancel() {\r\n                if (this._cancelled)\r\n                    return;\r\n                this._cancelled = true;\r\n                this._cancellationResolver();\r\n                for (let cb of this.callbacks)\r\n                    cb(this);\r\n            }\r\n            throwIfCancelled() {\r\n                if (this._cancelled)\r\n                    throw new Error(`The CancellationToken was cancelled`);\r\n            }\r\n            /** returns a promise which resolves when this token is cancelled */\r\n            promise() {\r\n                return this._cancellationPromise;\r\n            }\r\n            static get none() { return this._noneInstance; }\r\n            /**\r\n             * returns the provided token, or 'none' if no token is given. useful for ensuring\r\n             * a token is always valid even if one wasnt passed\r\n             * @param source\r\n             */\r\n            static ensure(source) {\r\n                if (source && source instanceof CancellationTokenSource)\r\n                    return source;\r\n                return this.none;\r\n            }\r\n        }\r\n        CancellationTokenSource._noneInstance = new CancellationTokenSource();\r\n        NodeComponentModel.CancellationTokenSource = CancellationTokenSource;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        class DefaultWebRtcUserMediaFactory {\r\n            constructor() {\r\n                this.initialized = false;\r\n            }\r\n            initializeUserMediaAsync(args) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        // todo: this has some real jammy control flow\r\n                        try {\r\n                            if (args.initAudio && args.initVideo) {\r\n                                yield this._initAV();\r\n                                console.debug(\"[VERTX:WebRtc:initializeUserMedia] Successfully initialized Video and Audio devices\");\r\n                            }\r\n                            else {\r\n                                throw new Error(\"Not initing audio+video because only audio or video was requested\");\r\n                            }\r\n                        }\r\n                        catch (err1) {\r\n                            // couldnt get both, try audio only\r\n                            try {\r\n                                if (args.initAudio) {\r\n                                    yield this._initA();\r\n                                    console.debug(\"[VERTX:WebRtc:initializeUserMedia] Successfully initialized Audio devices\");\r\n                                }\r\n                                else {\r\n                                    throw new Error(\"Not initing audio because audio was not requested\");\r\n                                }\r\n                            }\r\n                            catch (err2) {\r\n                                try {\r\n                                    if (args.initVideo) {\r\n                                        yield this._initV();\r\n                                        console.debug(\"[VERTX:WebRtc:initializeUserMedia] Successfully initialized Video devices\");\r\n                                    }\r\n                                    else {\r\n                                        throw new Error(\"Not initing video because video was not requested\");\r\n                                    }\r\n                                }\r\n                                catch (err3) {\r\n                                    console.debug(\"[VERTX:WebRtc:initializeUserMedia] Failed to initialize any media devices\");\r\n                                    throw { errors: [err1, err2, err3] };\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.error(\"[VERTX:WebRtc:initializeUserMedia] Failed to initialize any media devices\");\r\n                        throw e;\r\n                    }\r\n                    finally {\r\n                        this.initialized = true;\r\n                    }\r\n                });\r\n            }\r\n            getCurrentMediaAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (!this.initialized)\r\n                        throw new Error(\"Must initialize before getting media\");\r\n                    if (!this.userMediaStream)\r\n                        return [];\r\n                    let audio = this.userMediaStream.getAudioTracks() || [];\r\n                    let video = this.userMediaStream.getVideoTracks() || [];\r\n                    return audio.concat(video);\r\n                });\r\n            }\r\n            releaseUserMediaAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.initialized = false;\r\n                    // todo: maybe remove all the tracks?\r\n                    this.userMediaStream.stop();\r\n                    this.userMediaStream = null;\r\n                });\r\n            }\r\n            // this is sort of obtuse but matches the previous implementation\r\n            // this can be annoying because it spams up to 3 popups on some devices\r\n            // if the user says 'no'.\r\n            _initAV() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.userMediaStream = yield navigator.mediaDevices.getUserMedia({\r\n                        audio: true,\r\n                        video: true\r\n                    });\r\n                });\r\n            }\r\n            _initA() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.userMediaStream = yield navigator.mediaDevices.getUserMedia({\r\n                        audio: true,\r\n                        video: false\r\n                    });\r\n                });\r\n            }\r\n            _initV() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.userMediaStream = yield navigator.mediaDevices.getUserMedia({\r\n                        audio: false,\r\n                        video: true\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        NodeComponentModel.DefaultWebRtcUserMediaFactory = DefaultWebRtcUserMediaFactory;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        class WebRtcComponentLifecycle {\r\n        }\r\n        NodeComponentModel.WebRtcComponentLifecycle = WebRtcComponentLifecycle;\r\n        class BaseWebRtcComponentView extends WebRtcComponentLifecycle {\r\n            constructor() {\r\n                super(...arguments);\r\n                this.__dummyView = null;\r\n            }\r\n        }\r\n        NodeComponentModel.BaseWebRtcComponentView = BaseWebRtcComponentView;\r\n        class BaseWebRtcComponentController extends WebRtcComponentLifecycle {\r\n            constructor() {\r\n                super(...arguments);\r\n                this.__dummyController = null;\r\n            }\r\n        }\r\n        NodeComponentModel.BaseWebRtcComponentController = BaseWebRtcComponentController;\r\n        class WebRtcComponentSystem2Impl extends NodeComponentModel.ComponentSystemBase {\r\n            constructor(system, componentName, view, controller) {\r\n                super(componentName, view, controller);\r\n                this.system = system;\r\n            }\r\n            create() {\r\n                return this.system.createComponent();\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcComponentSystem2Impl = WebRtcComponentSystem2Impl;\r\n        class WebRtcComponentView2Impl extends NodeComponentModel.ComponentViewBase {\r\n            constructor(system, viewType) {\r\n                super();\r\n                this.viewObjects = new Map();\r\n                this.viewType = viewType;\r\n                this.system = system;\r\n            }\r\n            addComponent(basecomponent, node) {\r\n                let component = basecomponent;\r\n                let viewInstance = new this.viewType();\r\n                viewInstance.node = node;\r\n                viewInstance.component = component;\r\n                viewInstance.system = this.system;\r\n                viewInstance.bindComponent(this.system, node, component);\r\n                this.viewObjects.set(node.id, viewInstance);\r\n            }\r\n            removeComponent(basecomponent, node) {\r\n                let component = basecomponent;\r\n                let viewInstance = this.viewObjects.get(node.id);\r\n                this.viewObjects.delete(node.id);\r\n                if (viewInstance)\r\n                    viewInstance.unbindComponent(this.system, node, component);\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcComponentView2Impl = WebRtcComponentView2Impl;\r\n        class WebRtcComponentController2Impl extends NodeComponentModel.ComponentControllerBase {\r\n            constructor(system, controllerType) {\r\n                super();\r\n                this.controllerObjects = new Map();\r\n                this.controllerType = controllerType;\r\n                this.system = system;\r\n            }\r\n            addComponent(basecomponent, node) {\r\n                let component = basecomponent;\r\n                let controllerInstance = new this.controllerType();\r\n                controllerInstance.node = node;\r\n                controllerInstance.component = component;\r\n                controllerInstance.system = this.system;\r\n                controllerInstance.bindComponent(this.system, node, component);\r\n                this.controllerObjects.set(node.id, controllerInstance);\r\n            }\r\n            removeComponent(basecomponent, node) {\r\n                let component = basecomponent;\r\n                let controllerInstance = this.controllerObjects.get(node.id);\r\n                this.controllerObjects.delete(node.id);\r\n                if (controllerInstance)\r\n                    controllerInstance.unbindComponent(this.system, node, component);\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcComponentController2Impl = WebRtcComponentController2Impl;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        // Todo: None of these classes are currently exported.\r\n        // We could re-export them to enable legacy WebRTC support (probably still needed in places)\r\n        class DefaultWebRtcComponentSystem extends NodeComponentModel.ComponentSystemBase {\r\n            /**\r\n             * Constructs the DefaultWebRtcComponentSystem. This component system supports inheritance.\r\n             * @param componentName The component name. Defaults to \"WebRtc\"\r\n             * @param view The View. Defaults to a new DefaultWebRtcComponentView.\r\n             * @param controller The Controller. Defaults to a new DefaultWebRtcComponentController.\r\n             */\r\n            constructor(componentName, view, controller) {\r\n                componentName = componentName || \"WebRtc\";\r\n                view = view instanceof NodeComponentModel.ComponentViewBase ? view : new DefaultWebRtcComponentView();\r\n                controller = controller instanceof NodeComponentModel.ComponentControllerBase ? controller : new DefaultWebRtcComponentController();\r\n                super(componentName, view, controller);\r\n            }\r\n            create() {\r\n                return new NodeComponentModel.WebRtcComponent();\r\n            }\r\n        }\r\n        NodeComponentModel.DefaultWebRtcComponentSystem = DefaultWebRtcComponentSystem;\r\n        class DefaultWebRtcComponentView extends NodeComponentModel.ComponentViewBase {\r\n            constructor() {\r\n                super();\r\n                DefaultWebRtcComponentView.injectAdapterJsSafe();\r\n                this.remoteMediaStreams = new Map();\r\n            }\r\n            addComponent(baseComp, node) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let component = baseComp;\r\n                    // Wait for WebRTC Init, and display a hint to the developer if they forgot to init.\r\n                    DefaultWebRtcComponentView._hintIfWebRtcNotInitiailized(\"DefaultWebRtcComponentView:addComponent\");\r\n                    yield DefaultWebRtcComponentView.isInitializedAsync;\r\n                    // If the view is not us, then we'll use VERTX to ask the sender to make an offer\r\n                    if (node.HasToken == false) {\r\n                        let context = `${component.sndContext}-${component.rcvContext}`;\r\n                        let receiverConnection = yield component.createConnectionAsync(context, node.Space);\r\n                        receiverConnection.peerConnection.addEventListener(\"track\", (evt) => this.peerConnection_onTrack.call(this, evt, receiverConnection, component, node));\r\n                        receiverConnection.peerConnection.addEventListener(\"removetrack\", (evt) => this.peerConnection_onRemoveTrack.call(this, evt, receiverConnection, component, node));\r\n                        receiverConnection.peerConnection.addEventListener(\"connectionstatechange\", (evt) => this.peerConnection_onConnectionStateChange.call(this, evt, receiverConnection, component, node));\r\n                        let args = new NodeComponentModel.WebRtcOnConnectArgs();\r\n                        args.rcvContext = component.rcvContext;\r\n                        component.onConnect.fire(component, args);\r\n                        let stream = this.remoteMediaStreams.get(context);\r\n                        if (!stream) {\r\n                            stream = this.createRemoteMediaStream(context, node);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            removeComponent(baseComp, node) {\r\n                let component = baseComp;\r\n                let connections = component.getConnections();\r\n                for (let connection of connections) {\r\n                    this.destroyRemoteMediaStream(connection.context, node);\r\n                }\r\n                component.clearConnections();\r\n            }\r\n            createRemoteMediaStream(context, node) {\r\n                if (this.remoteMediaStreams.has(context))\r\n                    throw new Error(`[VERTX:DefaultWebRtcComponentView:createRemoteMediaStream] A media stream already exists for the context '${context}'`);\r\n                let stream = new MediaStream();\r\n                this.remoteMediaStreams.set(context, stream);\r\n                let args = {\r\n                    type: \"created\",\r\n                    context: context,\r\n                    stream: stream\r\n                };\r\n                node.event.fire(\"WebRtc:remotestreamchange\", args);\r\n                return stream;\r\n            }\r\n            destroyRemoteMediaStream(context, node) {\r\n                let stream = this.remoteMediaStreams.get(context);\r\n                if (stream) {\r\n                    let tracks = stream.getTracks();\r\n                    for (let track of tracks)\r\n                        stream.removeTrack(track);\r\n                    this.remoteMediaStreams.delete(context);\r\n                }\r\n                let args = {\r\n                    type: \"destroyed\",\r\n                    context: context,\r\n                    stream: stream || null\r\n                };\r\n                node.event.fire(\"WebRtc:remotestreamchange\", args);\r\n            }\r\n            peerConnection_onTrack(event, connection, component, node) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let stream = this.remoteMediaStreams.get(connection.context);\r\n                    stream.addTrack(event.track);\r\n                    let args = {\r\n                        type: \"trackadded\",\r\n                        context: connection.context,\r\n                        stream: stream,\r\n                        track: event.track\r\n                    };\r\n                    node.event.fire(\"WebRtc:remotestreamchange\", args);\r\n                });\r\n            }\r\n            peerConnection_onRemoveTrack(event, connection, component, node) {\r\n                let stream = this.remoteMediaStreams.get(connection.context);\r\n                stream.removeTrack(event.track);\r\n                let args = {\r\n                    type: \"trackremoved\",\r\n                    context: connection.context,\r\n                    stream: stream,\r\n                    track: event.track\r\n                };\r\n                node.event.fire(\"WebRtc:remotestreamchange\", args);\r\n            }\r\n            peerConnection_onConnectionStateChange(event, connection, component, node) {\r\n                let peerConnection = connection.peerConnection;\r\n                if (peerConnection.connectionState === \"disconnected\") {\r\n                    this.destroyRemoteMediaStream(connection.context, node);\r\n                }\r\n            }\r\n            /**\r\n            * Initializes WebRTC.\r\n            * WebRTC components will not send or receive any data until this method is invoked globally.\r\n            * This method is safe to be called multiple times.\r\n            *\r\n            * It is strongly recommended to invoke this method as a result of user-interaction (e.g. a user click)\r\n            * to allow autoplay to work correctly.\r\n            * */\r\n            static initializeWebRtc(init) {\r\n                let config = {\r\n                    mp3NoiseUrl: '/static/images/noise.mp3',\r\n                    oggNoiseUrl: '/static/images/noise.ogg',\r\n                };\r\n                Object.assign(config, init);\r\n                this.initNoiseElement(config);\r\n                DefaultWebRtcComponentView._initializeResolver();\r\n                DefaultWebRtcComponentView._isInitialized = true;\r\n            }\r\n            static uninitializeWebRtc() {\r\n                DefaultWebRtcComponentView._isInitialized = false;\r\n                DefaultWebRtcComponentView.isInitializedAsync = new Promise((_res) => {\r\n                    DefaultWebRtcComponentView._initializeResolver = _res;\r\n                });\r\n                if (DefaultWebRtcComponentView._noiseElement) {\r\n                    DefaultWebRtcComponentView._noiseElement.parentNode.removeChild(DefaultWebRtcComponentView._noiseElement);\r\n                    DefaultWebRtcComponentView._noiseElement = null;\r\n                }\r\n                if (this.userMediaStream && typeof this.userMediaStream.stop === \"function\")\r\n                    this.userMediaStream.stop();\r\n                this.userMediaStream = null;\r\n                this.audioTracks = null;\r\n                this.videoTracks = null;\r\n            }\r\n            static getLocalMediaTracks() {\r\n                let audio = DefaultWebRtcComponentView.audioTracks || [];\r\n                let video = DefaultWebRtcComponentView.videoTracks || [];\r\n                return audio.concat(video);\r\n            }\r\n            static initializeLocalMediaDevicesAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (DefaultWebRtcComponentView.userMediaStream instanceof MediaStream)\r\n                        return;\r\n                    // todo: the userMediaStream fails unless *all* constraints are satisfied???\r\n                    try {\r\n                        // If neither video or audio devices are available, the stream succeeds but with no devices.\r\n                        // If we ask for video+audio, but the user had *just* a one or the other, then the \r\n                        // getUserMedia promise fails.\r\n                        // So, if this promise fails, we ask for audio and video seperately to get the one that is available.\r\n                        try {\r\n                            yield this.initializeAudioVideoDevicesAsync();\r\n                            console.debug(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Successfully initialized Video and Audio devices\");\r\n                        }\r\n                        catch (err) {\r\n                            // we couldn't get both\r\n                            // try to get audio\r\n                            try {\r\n                                console.debug(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Could not initialize Video+Audio, trying Audio Only...\", err);\r\n                                yield this.initializeAudioDevicesAsync();\r\n                                console.debug(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Successfully initialized Audio device\");\r\n                            }\r\n                            catch (err2) {\r\n                                // try to get video\r\n                                try {\r\n                                    console.debug(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Could not initialize Video+Audio or Audio, trying Video Only...\", err2);\r\n                                    yield this.initializeVideoDevicesAsync();\r\n                                    console.debug(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Successfully initialized Video device\");\r\n                                }\r\n                                catch (err3) {\r\n                                    console.debug(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Could not initialize Video+Audio, Audio or Video. Failed device initialization.\", err2);\r\n                                    throw { errors: [err, err2, err3] };\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.error(\"[VERTX:DefaultWebRtcComponentView:initializeMediaDevicesAsync] Failed to initialize media devices\", e);\r\n                        throw e;\r\n                    }\r\n                });\r\n            }\r\n            static initializeAudioVideoDevicesAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    DefaultWebRtcComponentView.userMediaStream = yield navigator.mediaDevices.getUserMedia({ audio: true, video: true });\r\n                    DefaultWebRtcComponentView.audioTracks = yield DefaultWebRtcComponentView.userMediaStream.getAudioTracks();\r\n                    DefaultWebRtcComponentView.videoTracks = yield DefaultWebRtcComponentView.userMediaStream.getVideoTracks();\r\n                });\r\n            }\r\n            static initializeVideoDevicesAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    DefaultWebRtcComponentView.userMediaStream = yield navigator.mediaDevices.getUserMedia({ audio: false, video: true });\r\n                    DefaultWebRtcComponentView.audioTracks = [];\r\n                    DefaultWebRtcComponentView.videoTracks = yield DefaultWebRtcComponentView.userMediaStream.getVideoTracks();\r\n                });\r\n            }\r\n            static initializeAudioDevicesAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    DefaultWebRtcComponentView.userMediaStream = yield navigator.mediaDevices.getUserMedia({ audio: true, video: false });\r\n                    DefaultWebRtcComponentView.audioTracks = yield DefaultWebRtcComponentView.userMediaStream.getAudioTracks();\r\n                    DefaultWebRtcComponentView.videoTracks = [];\r\n                });\r\n            }\r\n            static _fireLocalMediaEvent(node) {\r\n                if (DefaultWebRtcComponentView.userMediaStream) {\r\n                    let tracks = this.getLocalMediaTracks();\r\n                    let args = {\r\n                        type: \"available\",\r\n                        stream: DefaultWebRtcComponentView.userMediaStream,\r\n                        tracks: tracks\r\n                    };\r\n                    node.event.fire(\"WebRtc:localmediachange\", args);\r\n                }\r\n                else {\r\n                    let args = {\r\n                        type: \"unavailable\",\r\n                        stream: null,\r\n                        tracks: []\r\n                    };\r\n                    node.event.fire(\"WebRtc:localmediachange\", args);\r\n                }\r\n            }\r\n            static disposeMediaDevicesAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        // If an existing media stream exists, clean it up\r\n                        if (DefaultWebRtcComponentView.userMediaStream) {\r\n                            let tracks = DefaultWebRtcComponentView.userMediaStream.getTracks();\r\n                            for (let track of tracks)\r\n                                track.stop();\r\n                            DefaultWebRtcComponentView.userMediaStream.stop();\r\n                            DefaultWebRtcComponentView.userMediaStream = null;\r\n                        }\r\n                        // same for the tracks (we should have covered this already)\r\n                        if (DefaultWebRtcComponentView.audioTracks) {\r\n                            for (let track of DefaultWebRtcComponentView.audioTracks) {\r\n                                track.stop();\r\n                            }\r\n                            DefaultWebRtcComponentView.audioTracks = null;\r\n                        }\r\n                        if (DefaultWebRtcComponentView.videoTracks) {\r\n                            for (let track of DefaultWebRtcComponentView.videoTracks) {\r\n                                track.stop();\r\n                            }\r\n                            DefaultWebRtcComponentView.videoTracks = null;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.error(\"Failed to clean up old media devices\", e);\r\n                    }\r\n                });\r\n            }\r\n            static initNoiseElement(config) {\r\n                // Create an element to play some background noise.\r\n                // This not only assures the user that a call is active, but helps autoplay run reliably.\r\n                if (!DefaultWebRtcComponentView._noiseElement) {\r\n                    let audio = document.createElement(\"audio\");\r\n                    audio.id = \"vertexDefaultWebRtcComponent_noiseElement\";\r\n                    audio.style.display = \"none\";\r\n                    audio.autoplay = true;\r\n                    audio.loop = true;\r\n                    audio.controls = false;\r\n                    // todo: check if playsinline is uppercase or not. (Safari-only attribute)\r\n                    audio[\"playsinline\"] = true;\r\n                    document.body.appendChild(audio);\r\n                    DefaultWebRtcComponentView._noiseElement = audio;\r\n                }\r\n                // Clear any existing sources and add new\r\n                for (let child of DefaultWebRtcComponentView._noiseElement.childNodes)\r\n                    child.parentNode.removeChild(child);\r\n                let mp3src = document.createElement('source');\r\n                mp3src.src = config.mp3NoiseUrl;\r\n                let oggsrc = document.createElement('source');\r\n                oggsrc.src = config.oggNoiseUrl;\r\n                DefaultWebRtcComponentView._noiseElement.appendChild(mp3src);\r\n                DefaultWebRtcComponentView._noiseElement.appendChild(oggsrc);\r\n                // Attempt to play the noise element.\r\n                // If it fails, then warn the dev that autoplay wont work.\r\n                let playPromise = DefaultWebRtcComponentView._noiseElement.play();\r\n                if (playPromise instanceof Promise) {\r\n                    let errMsg = \"[VERTX:DefaultWebRtcComponentView:initializeWebRtc] The WebRTC Background Noise could not be autoplayed.\\n\" +\r\n                        \"Try calling initializeWebRtc again as a result of direct user interaction (e.g. a mouse click).\\n\" +\r\n                        \"Some WebRTC elements may fail to autoplay without user interaction.\";\r\n                    try {\r\n                        playPromise\r\n                            .then(_ => {\r\n                            // autoplay succeeded\r\n                            console.log(\"[VERTX:WebRtcComponentSystem:initializeWebRtc] Successfully started playing the WebRTC Background Noise. Autoplays should succeed reliably.\");\r\n                        })\r\n                            .catch((err) => {\r\n                            // autoplay failed\r\n                            console.error(errMsg, err);\r\n                        });\r\n                    }\r\n                    catch (err2) {\r\n                        // catch in case we are in a browser that doesn't support Promise.catch\r\n                        console.error(errMsg, err2);\r\n                    }\r\n                }\r\n            }\r\n            static injectAdapterJsSafe() {\r\n                // adapter improves the compatibility of WebRTC across browsers\r\n                if (!window[\"adapter\"]) {\r\n                    let ele = document.createElement('script');\r\n                    // todo: host on VERTX\r\n                    ele.src = \"https://unpkg.com/webrtc-adapter@7.7.0/out/adapter.js\";\r\n                    document.body.appendChild(ele);\r\n                }\r\n            }\r\n            static _hintIfWebRtcNotInitiailized(context) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let timeout = new Promise((resolve) => {\r\n                        window.setTimeout(resolve, 1000, \"timeout\");\r\n                    });\r\n                    let winner = yield Promise.race([timeout, DefaultWebRtcComponentView.isInitializedAsync]);\r\n                    if (winner === \"timeout\") {\r\n                        console.warn(`[VERTX:${context}] HINT: Waiting for WebRtcComponentView to be initialized.\\n` +\r\n                            \"You must call the static 'WebRtcComponentView.initializeWebRtc()' method before incoming or outgoing WebRTC connections can be made.\\n\\n\" +\r\n                            \"The pending WebRTC call will continue once initialize has been called.\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        DefaultWebRtcComponentView.userMediaStream = null;\r\n        DefaultWebRtcComponentView.audioTracks = null;\r\n        DefaultWebRtcComponentView.videoTracks = null;\r\n        DefaultWebRtcComponentView._noiseElement = null;\r\n        // Implementation Note: _initializeResolver must be declared above 'isInitializedAsync'\r\n        DefaultWebRtcComponentView._initializeResolver = null;\r\n        DefaultWebRtcComponentView._isInitialized = false;\r\n        DefaultWebRtcComponentView.isInitializedAsync = new Promise((_res) => {\r\n            DefaultWebRtcComponentView._initializeResolver = _res;\r\n        });\r\n        NodeComponentModel.DefaultWebRtcComponentView = DefaultWebRtcComponentView;\r\n        class DefaultWebRtcComponentController extends NodeComponentModel.ComponentControllerBase {\r\n            constructor() {\r\n                super(...arguments);\r\n                this.componentChangedHandlers = new Map();\r\n            }\r\n            addComponent(baseComp, node) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let component = baseComp;\r\n                    let changeHandler = this.component_changed.bind(this);\r\n                    this.componentChangedHandlers.set(baseComp, changeHandler);\r\n                    component.onChanged.on(changeHandler);\r\n                    // Ensure WebRTC initialize has been called.\r\n                    // We run this timeout race to display a hint to the developer if they forget to initialize...\r\n                    DefaultWebRtcComponentView._hintIfWebRtcNotInitiailized(\"DefaultWebRtcComponentController:addComponent\");\r\n                    // Initialize the local user's media devices.\r\n                    // We do this now so that the user sees the prompt for Audio/Video at the expected time.\r\n                    // This is NOT awaited on purpose - we just kick it off\r\n                    let mediaPromise = DefaultWebRtcComponentView.initializeLocalMediaDevicesAsync();\r\n                    // We're now ready to handle requests for calls\r\n                    component.onConnect.on((args) => this.component_onConnect.call(this, args, component, node, mediaPromise));\r\n                    // Now wait here for init...\r\n                    yield DefaultWebRtcComponentView.isInitializedAsync;\r\n                    // Send local media availability event when the promise is sorted\r\n                    mediaPromise\r\n                        .then(() => {\r\n                        DefaultWebRtcComponentView._fireLocalMediaEvent(node);\r\n                    })\r\n                        .catch(() => {\r\n                        DefaultWebRtcComponentView._fireLocalMediaEvent(node);\r\n                    });\r\n                });\r\n            }\r\n            removeComponent(baseComp, node) {\r\n                let component = baseComp;\r\n                if (this.componentChangedHandlers.has(baseComp)) {\r\n                    let handler = this.componentChangedHandlers.get(baseComp);\r\n                    this.componentChangedHandlers.delete(baseComp);\r\n                    component.onChanged.off(handler);\r\n                }\r\n                // If we remove the one we're controlling, we'll un-initialize WebRTC again\r\n                if (node.HasToken === true) {\r\n                    DefaultWebRtcComponentView.uninitializeWebRtc();\r\n                    DefaultWebRtcComponentView._fireLocalMediaEvent(node);\r\n                }\r\n            }\r\n            component_changed(baseComp) {\r\n                let component = baseComp;\r\n                this.setTracksEnabled(component);\r\n            }\r\n            setTracksEnabled(component) {\r\n                let audioTracks = DefaultWebRtcComponentView.audioTracks || [];\r\n                for (var track of audioTracks) {\r\n                    track.enabled = component.audio;\r\n                }\r\n                let videoTracks = DefaultWebRtcComponentView.videoTracks || [];\r\n                for (var track of videoTracks) {\r\n                    track.enabled = component.video;\r\n                }\r\n            }\r\n            component_onConnect(args, component, node, mediaDevicesPromise) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    // Wait for the media devices promise from earlier...\r\n                    console.log(\"[VERTX:WebRtcComponentController:onConnect] onConnect fired, handling peer connection once media devices are ready\");\r\n                    yield mediaDevicesPromise;\r\n                    console.log(\"[VERTX:WebRtcComponentController:onConnect] media devices are ready. handling peer connection\");\r\n                    let context = `${component.sndContext}-${args.rcvContext}`;\r\n                    if (node.HasToken === true) {\r\n                        // ensure the local media is correctly enabled/disabled before connecting new person\r\n                        this.setTracksEnabled(component);\r\n                        let mediaSenderConnection = yield component.createConnectionAsync(context, node.Space);\r\n                        let tracks = yield DefaultWebRtcComponentView.getLocalMediaTracks();\r\n                        yield mediaSenderConnection.addTracks(tracks);\r\n                        // don't send the offer here, it will be sent as a result of the 'negotationneeded' event\r\n                        //await mediaSenderConnection.sendOfferAsync();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        NodeComponentModel.DefaultWebRtcComponentController = DefaultWebRtcComponentController;\r\n        class WebRtcConnection {\r\n            constructor(context, space) {\r\n                this.context = null;\r\n                this.signaler = null;\r\n                this.peerConnection = null;\r\n                this.offerSdpFragBuf = \"\";\r\n                this.offerSdpSeq = -1;\r\n                this.answerSdpFragBuf = \"\";\r\n                this.answerSdpSeq = -1;\r\n                this.context = context;\r\n                this.signaler = new Vertex.DataChannel(space);\r\n                this.signaler.id = context;\r\n            }\r\n            initAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.signaler.onMessage.on(this.signaler_onMessage.bind(this));\r\n                    yield this.signaler.init();\r\n                    let rtcConfig = {\r\n                        iceServers: WebRtcConnection.defaultIceServers\r\n                    };\r\n                    this.peerConnection = new RTCPeerConnection(rtcConfig);\r\n                    this.peerConnection.addEventListener(\"connectionstatechange\", this.peerConnection_onConnectionStateChange.bind(this));\r\n                    this.peerConnection.addEventListener(\"icecandidate\", this.peerConnection_onIceCandidate.bind(this));\r\n                    this.peerConnection.addEventListener(\"negotiationneeded\", this.peerConnection_negotiationNeeded.bind(this));\r\n                    // todo: consider allowing the consumer to directly handle the track event\r\n                    //this.peerConnection.addEventListener(\"track\", this.peerConnection_onTrack.bind(this));\r\n                    //this.peerConnection.addEventListener(\"removetrack\", this.peerConnection_onRemoveTrack.bind(this));\r\n                });\r\n            }\r\n            addTracks(tracks) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    for (let track of tracks) {\r\n                        this.peerConnection.addTrack(track);\r\n                    }\r\n                });\r\n            }\r\n            //addStreamWithDelay(stream: MediaStream /*, ...streams: MediaStream[] */) {\r\n            //    //for (let stream of streams) {\r\n            //        //if (stream.getAudioTracks().length > 0) {\r\n            //        //    let audioTransceiver = this.peerConnection.addTransceiver(\"audio\", {\r\n            //        //        direction: \"inactive\"\r\n            //        //    });\r\n            //        //    audioTransceiver.sender.setStreams(stream);\r\n            //        //    audioTransceiver.direction = \"sendonly\";\r\n            //        //}\r\n            //        if (stream.getVideoTracks().length > 0) {\r\n            //            let videoTransceiver = this.peerConnection.addTransceiver(\"video\", {\r\n            //                direction: \"inactive\"\r\n            //            });\r\n            //            window.setTimeout(() => {\r\n            //                videoTransceiver.sender.setStreams(stream);\r\n            //                videoTransceiver.direction = \"sendonly\";\r\n            //            }, 1000);\r\n            //            return videoTransceiver;\r\n            //        }\r\n            //    //}\r\n            //}\r\n            //async addDummyTransciever() {\r\n            //    let t = this.peerConnection.addTransceiver(\"video\", {\r\n            //        direction: \"inactive\"\r\n            //    });\r\n            //    return t;\r\n            //}\r\n            //async removeRandomStream() {\r\n            //    let tArr = this.peerConnection.getTransceivers().filter((t) => {\r\n            //        return t.sender.track && t.sender.track.kind == \"audio\";\r\n            //    });\r\n            //    let i = Math.floor(Math.random() * tArr.length);\r\n            //    let t = tArr[i];\r\n            //    console.log(\"Removing random audio sender\", {\r\n            //        all: tArr,\r\n            //        selected: t\r\n            //    });\r\n            //    t.sender.replaceTrack(null);\r\n            //    //t.direction = \"inactive\";\r\n            //    //t.sender.track.stop();\r\n            //    //if (typeof t.stop === \"function\")\r\n            //    //    t.stop();\r\n            //}\r\n            sendOfferFragmentedAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let offer = yield this.peerConnection.createOffer();\r\n                    yield this.peerConnection.setLocalDescription(offer);\r\n                    const maxFrag = 3072;\r\n                    let fragmentsRequired = Math.floor(offer.sdp.length / maxFrag) + 1; // Math.floor because we want integer divison\r\n                    for (let i = 0; i < fragmentsRequired; ++i) {\r\n                        let sdpFragment = offer.sdp.substr(maxFrag * i, maxFrag);\r\n                        let last = i == (fragmentsRequired - 1);\r\n                        let message = {\r\n                            type: \"fragmented-offer\",\r\n                            seq: i,\r\n                            last: last,\r\n                            sdpFragment: sdpFragment\r\n                        };\r\n                        let json = JSON.stringify(message);\r\n                        console.log(\"Sending Offer Fragment\", { length: json.length, seq: i, reqd: fragmentsRequired, frag: sdpFragment, last: last, message: json });\r\n                        yield this.signaler.sendMessage(json);\r\n                    }\r\n                    //let offerMessage: WebRtcSdpMessage = {\r\n                    //    type: \"offer\",\r\n                    //    message: {\r\n                    //        type: offer.type,\r\n                    //        sdp: offer.sdp\r\n                    //    }\r\n                    //};\r\n                    //let json = JSON.stringify(offerMessage);\r\n                    //console.log(\"SDP Offer\", { length: json.length, message: json });\r\n                    //await this.signaler.sendMessage(json);\r\n                });\r\n            }\r\n            sendAnswerFragmentedAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let answer = yield this.peerConnection.createAnswer();\r\n                    yield this.peerConnection.setLocalDescription(answer);\r\n                    const maxFrag = 3072;\r\n                    let fragmentsRequired = Math.floor(answer.sdp.length / maxFrag) + 1; // Math.floor because we want integer divison\r\n                    for (let i = 0; i < fragmentsRequired; ++i) {\r\n                        let sdpFragment = answer.sdp.substr(maxFrag * i, maxFrag);\r\n                        let last = i == (fragmentsRequired - 1);\r\n                        let message = {\r\n                            type: \"fragmented-answer\",\r\n                            seq: i,\r\n                            last: last,\r\n                            sdpFragment: sdpFragment\r\n                        };\r\n                        let json = JSON.stringify(message);\r\n                        console.log(\"Sending Answer Fragment\", { length: json.length, seq: i, reqd: fragmentsRequired, frag: sdpFragment, last: last, message: json });\r\n                        yield this.signaler.sendMessage(json);\r\n                    }\r\n                    // Send answer message via Signal channel\r\n                    //let answerMsg: WebRtcSdpMessage = {\r\n                    //    type: \"answer\",\r\n                    //    message: {\r\n                    //        type: answer.type,\r\n                    //        sdp: answer.sdp\r\n                    //    }\r\n                    //};\r\n                    //await this.signaler.sendMessage(JSON.stringify(answerMsg));\r\n                });\r\n            }\r\n            close() {\r\n                if (this.peerConnection) {\r\n                    this.peerConnection.close();\r\n                    this.peerConnection = null;\r\n                }\r\n            }\r\n            resetOfferSdpFragState() {\r\n                this.offerSdpFragBuf = \"\";\r\n                this.offerSdpSeq = -1;\r\n            }\r\n            resetAnswerSdpFragState() {\r\n                this.answerSdpFragBuf = \"\";\r\n                this.answerSdpSeq = -1;\r\n            }\r\n            signaler_onMessage(messageJson) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    // todo: validate that the parameter is correct\r\n                    try {\r\n                        let message = JSON.parse(messageJson);\r\n                        if (message.type === \"fragmented-offer\") {\r\n                            console.debug(`[VERTX:WebRtcConnection:onSignalMessage] Offer Fragment Received`, { message: message });\r\n                            let fragMessage = message;\r\n                            // piece together the SDP.\r\n                            // if final, then also handle it as an offer.\r\n                            if ((this.offerSdpSeq + 1) != fragMessage.seq) {\r\n                                console.error(\"[VERTX:WebRtcConnection:onSignalMessage] Received out-of-sequence offer fragment, discarding current sequence. \", {\r\n                                    expectedSeqNumber: this.offerSdpSeq + 1,\r\n                                    receivedSeqNumber: fragMessage.seq,\r\n                                    equal: (this.offerSdpSeq + 1) == fragMessage.seq\r\n                                });\r\n                                this.resetOfferSdpFragState();\r\n                                return;\r\n                            }\r\n                            this.offerSdpSeq = fragMessage.seq;\r\n                            this.offerSdpFragBuf += message.sdpFragment;\r\n                            if (message.last) {\r\n                                // hack: call self with a complete sdp offer message\r\n                                let sdp = this.offerSdpFragBuf;\r\n                                let _newMsg = {\r\n                                    type: \"offer\",\r\n                                    message: {\r\n                                        sdp: sdp,\r\n                                        type: \"offer\"\r\n                                    }\r\n                                };\r\n                                let _json = JSON.stringify(_newMsg);\r\n                                this.resetOfferSdpFragState();\r\n                                yield this.signaler_onMessage(_json);\r\n                            }\r\n                        }\r\n                        if (message.type === \"fragmented-answer\") {\r\n                            console.debug(`[VERTX:WebRtcConnection:onSignalMessage] Answer Fragment Received`, { message: message });\r\n                            let fragMessage = message;\r\n                            // piece together the SDP.\r\n                            // if final, then also handle it as an offer.\r\n                            if ((this.answerSdpSeq + 1) != fragMessage.seq) {\r\n                                console.error(\"[VERTX:WebRtcConnection:onSignalMessage] Received out-of-sequence answer fragment, discarding current sequence. \", {\r\n                                    expectedSeqNumber: this.answerSdpSeq + 1,\r\n                                    receivedSeqNumber: fragMessage.seq,\r\n                                    equal: (this.answerSdpSeq + 1) == fragMessage.seq\r\n                                });\r\n                                this.resetAnswerSdpFragState();\r\n                                return;\r\n                            }\r\n                            this.answerSdpSeq = fragMessage.seq;\r\n                            this.answerSdpFragBuf += message.sdpFragment;\r\n                            if (message.last) {\r\n                                // hack: call self with a complete sdp offer message\r\n                                let sdp = this.answerSdpFragBuf;\r\n                                let _newMsg = {\r\n                                    type: \"answer\",\r\n                                    message: {\r\n                                        sdp: sdp,\r\n                                        type: \"answer\"\r\n                                    }\r\n                                };\r\n                                let _json = JSON.stringify(_newMsg);\r\n                                this.resetAnswerSdpFragState();\r\n                                yield this.signaler_onMessage(_json);\r\n                            }\r\n                        }\r\n                        if (message.type === \"offer\") {\r\n                            console.debug(`[VERTX:WebRtcConnection:onSignalMessage] Offer Received`, { message: message });\r\n                            let sdpMessage = message;\r\n                            try {\r\n                                // todo: previous implementation did not call \"setRemoteDescription\" here.\r\n                                yield this.peerConnection.setRemoteDescription({\r\n                                    type: \"offer\",\r\n                                    sdp: sdpMessage.message.sdp\r\n                                });\r\n                            }\r\n                            catch (e) {\r\n                                console.warn(`[VERTX:WebRtcConnection:onSignalMessage] Failed to set remote description (handling offer)`, { error: e, sdp: message.message });\r\n                            }\r\n                            yield this.sendAnswerFragmentedAsync();\r\n                        }\r\n                        if (message.type === \"answer\") {\r\n                            console.debug(`[VERTX:WebRtcConnection:onSignalMessage] Answer Received`, { message: message });\r\n                            let sdpMessage = message;\r\n                            try {\r\n                                yield this.peerConnection.setRemoteDescription({\r\n                                    type: 'answer',\r\n                                    sdp: sdpMessage.message.sdp\r\n                                });\r\n                            }\r\n                            catch (e) {\r\n                                console.warn(`[VERTX:WebRtcConnection:onSignalMessage] Failed to set remote description (handling answer)`, { error: e, sdp: message.message });\r\n                            }\r\n                        }\r\n                        if (message.type === \"ice\") {\r\n                            let iceMsg = message;\r\n                            console.debug(`[VERTX:WebRtcConnection:onSignalMessage] ICE Candidate Received`, { message: message });\r\n                            // todo: verify that message has the correct format here.\r\n                            // todo: possible bug source\r\n                            // When ICE has finished in a browser, a 'null' candidate is produced.\r\n                            // In some cases, another non-null candidate is produced with empty data.\r\n                            // Both of these upset the peer connection if added. Our implementation avoids sending these,\r\n                            // but we check again here to be sure.\r\n                            // todo: check if this is supposed to receive the null ICE\r\n                            let candidate = iceMsg.message.content;\r\n                            try {\r\n                                if (candidate && candidate.length > 0) {\r\n                                    let iceCandidate = {\r\n                                        candidate: iceMsg.message.content,\r\n                                        sdpMid: iceMsg.message.sdpMid,\r\n                                        sdpMLineIndex: iceMsg.message.sdpMlineIndex\r\n                                    };\r\n                                    yield this.peerConnection.addIceCandidate(iceCandidate);\r\n                                }\r\n                                else {\r\n                                    console.warn(\"[VERTX:WebRtcConnection:onSignalMessage] Received null ICE candidate. This will be ignored, but the sending WebRTC implementation should take care not to send empty ICE candidates!\", { message: message });\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                                console.warn(`[VERTX:WebRtcConnection:onSignalMessage] Failed to add ICE candidate`, { error: e, candidate: message.message });\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        debugger;\r\n                        throw e;\r\n                    }\r\n                });\r\n            }\r\n            peerConnection_onConnectionStateChange(event) {\r\n                // According to MDN, this event type is just Event, and does not actually contain any info about\r\n                // the connection state. They recommend reading directly from the peerConnection to read the connection info.\r\n                console.debug(`[VERTX:WebRtcConnection:onConnecionStateChange] Connection State is now ${this.peerConnection.connectionState}`);\r\n            }\r\n            peerConnection_onIceCandidate(event) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    // This is a noisy one. Only uncomment this when debugging is required.\r\n                    // console.debug(\"[VERTX:WebRtcComponent:icecandidate]\", { event: evt});\r\n                    let candidate = event.candidate;\r\n                    // When ICE has finished, the event sends a null candidate.\r\n                    // In some implementations, a separate event is produced with a non-null candidate, but with no data.\r\n                    // Both of these upset the peer connection if you pass null ICE candidates, so we wont send them.\r\n                    if (candidate && candidate.candidate.length > 0) {\r\n                        // todo: validate that this is the correct format to send\r\n                        let iceMsg = {\r\n                            type: \"ice\",\r\n                            message: {\r\n                                content: candidate.candidate,\r\n                                sdpMid: candidate.sdpMid,\r\n                                sdpMlineIndex: candidate.sdpMLineIndex\r\n                            }\r\n                        };\r\n                        yield this.signaler.sendMessage(JSON.stringify(iceMsg));\r\n                    }\r\n                });\r\n            }\r\n            peerConnection_negotiationNeeded(evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let pc = evt.target;\r\n                    console.log(\"[WebRtcConnection] [Re]negotiation Needed, creating and sending SDP...\", { peerConnection: pc });\r\n                    yield this.sendOfferFragmentedAsync();\r\n                });\r\n            }\r\n        }\r\n        WebRtcConnection.defaultIceServers = [\r\n            {\r\n                urls: \"stun:public.stun.vertx.cloud:3478\"\r\n            },\r\n            {\r\n                urls: \"turn:public.turn.vertx.cloud:3478\",\r\n                username: \"visr\",\r\n                credential: \"visr\",\r\n                credentialType: \"password\"\r\n            }\r\n        ];\r\n        NodeComponentModel.WebRtcConnection = WebRtcConnection;\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\n/// <reference path=\"../componentsystembase.ts\"/>\r\n/// <reference path=\"../rpc.ts\"/>\r\n/// <reference path=\"janusapi.ts\"/>\r\n/// <reference path=\"janussessionobserver.ts\"/>\r\n/// <reference path=\"webrtc-componentlifecycle.ts\"/>\r\n/// <reference path=\"mediafactory.ts\"/>\r\n// this ref is not required by this file but it's referenced here to keep the classes nearby\r\n/// <reference path=\"webrtccomponent-legacy.ts\"/>\r\n/// <reference path=\"webrtcstats.ts\"/>\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let NodeComponentModel;\r\n    (function (NodeComponentModel) {\r\n        // component\r\n        class WebRtcComponent extends NodeComponentModel.Component {\r\n            constructor() {\r\n                super();\r\n                this.sndContext = \"null\";\r\n                this.isActive = false;\r\n                this.video = false;\r\n                this.audio = false;\r\n                /**\r\n                 * the ID of the call that this component belongs to.\r\n                 * if this value is unset, it should be assumed to be the space ID.\r\n                 */\r\n                this.callId = \"\";\r\n                // not serialized\r\n                this.connections = new Map();\r\n                /**\r\n                 * (deprecated) this value is not used or serialzed.\r\n                 * @deprecated\r\n                 */\r\n                this.rcvContext = \"null\";\r\n                this.sndContext = Vertex.Guid.NewGuid();\r\n                this.callId = \"\";\r\n                this.isActive = false;\r\n                this.video = false;\r\n                this.audio = false;\r\n                this.onConnect = new NodeComponentModel.RPCEventBus(\"OnConnect\", WebRtcOnConnectArgs);\r\n                this.events.set(this.onConnect.eventName, this.onConnect);\r\n                // not serialized\r\n                this.rcvContext = Vertex.Guid.NewGuid();\r\n            }\r\n            writeData(writer, delta) {\r\n                super.writeData(writer, delta);\r\n                writer.setDebugState(\"[WebRtcComponent]\", this);\r\n                writer.writeString(this.sndContext);\r\n                writer.writeBool(this.isActive);\r\n                writer.writeBool(this.video);\r\n                writer.writeBool(this.audio);\r\n            }\r\n            readData(reader) {\r\n                super.readData(reader);\r\n                reader.setDebugState(\"[WebRtcComponent]\", this);\r\n                this.sndContext = reader.readString();\r\n                this.isActive = reader.readBool();\r\n                this.video = reader.readBool();\r\n                this.audio = reader.readBool();\r\n            }\r\n            bsonReadAction(name, type, reader) {\r\n                //if (name === \"SndContext\" && type === Vertex.BsonType.String)\r\n                if (name === \"SndContext\") {\r\n                    reader.readString(this, \"sndContext\");\r\n                    return;\r\n                }\r\n                //if (name === \"IsActive\" && type === Vertex.BsonType.Boolean)\r\n                if (name === \"IsActive\") {\r\n                    reader.readBoolean(this, \"isActive\");\r\n                    return;\r\n                }\r\n                //if (name === \"Video\" && type === Vertex.BsonType.Boolean)\r\n                if (name === \"Video\") {\r\n                    reader.readBoolean(this, \"video\");\r\n                    return;\r\n                }\r\n                //if (name === \"Audio\" && type === Vertex.BsonType.Boolean)\r\n                if (name === \"Audio\") {\r\n                    reader.readBoolean(this, \"audio\");\r\n                    return;\r\n                }\r\n                if (name === \"CallId\") {\r\n                    reader.readString(this, \"callId\");\r\n                }\r\n            }\r\n            readDataBSON(reader) {\r\n                reader.readObject(this.bsonReadAction.bind(this));\r\n            }\r\n            writeDataBSON(writer) {\r\n                let ctx = writer.startObject();\r\n                writer.writeString(\"SndContext\", this.sndContext);\r\n                writer.writeString(\"CallId\", this.callId);\r\n                writer.writeBoolean(\"IsActive\", this.isActive);\r\n                writer.writeBoolean(\"Video\", this.video);\r\n                writer.writeBoolean(\"Audio\", this.audio);\r\n                writer.endObject(ctx);\r\n            }\r\n            /**\r\n             * deprecated: only used by legacy webrtc component\r\n             * @deprecated\r\n             */\r\n            createConnectionAsync(context, space) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (this.connections.has(\"context\")) {\r\n                        throw new Error(`[VERTX:WebRtcComponent:createConnectionAsync] A connection already exists with context '${context}'.`);\r\n                    }\r\n                    let connection = new NodeComponentModel.WebRtcConnection(context, space);\r\n                    yield connection.initAsync();\r\n                    this.connections.set(context, connection);\r\n                    return connection;\r\n                });\r\n            }\r\n            /**\r\n            * deprecated: only used by legacy webrtc component\r\n            * @deprecated\r\n            */\r\n            getConnection(context) {\r\n                return this.connections.get(context);\r\n            }\r\n            /**\r\n            * deprecated: only used by legacy webrtc component\r\n            * @deprecated\r\n            */\r\n            getConnections() {\r\n                return this.connections.values();\r\n            }\r\n            /**\r\n            * deprecated: only used by legacy webrtc component\r\n            * @deprecated\r\n            */\r\n            clearConnections() {\r\n                for (let connection of this.connections.values())\r\n                    connection.close();\r\n                this.connections.clear();\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcComponent = WebRtcComponent;\r\n        class WebRtcOnConnectArgs extends NodeComponentModel.Structure {\r\n            constructor() {\r\n                super();\r\n                this.rcvContext = \"null\";\r\n                this.rcvContext = \"\";\r\n            }\r\n            writeData(writer, delta) {\r\n                super.writeData(writer, delta);\r\n                writer.setDebugState(\"[WebRtcOnConnectArgs]\", this);\r\n                writer.writeString(this.rcvContext);\r\n            }\r\n            readData(reader) {\r\n                super.readData(reader);\r\n                reader.setDebugState(\"[WebRtcOnConnectArgs]\", this);\r\n                this.rcvContext = reader.readString();\r\n            }\r\n            bsonReadAction(name, type, reader) {\r\n                if (name === \"RcvContext\") {\r\n                    reader.readString(this, \"rcvContext\");\r\n                    return;\r\n                }\r\n            }\r\n            readDataBSON(reader) {\r\n                reader.readObject(this.bsonReadAction.bind(this));\r\n            }\r\n            writeDataBSON(writer) {\r\n                let ctx = writer.startObject();\r\n                writer.writeString(\"RcvContext\", this.rcvContext);\r\n                writer.endObject(ctx);\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcOnConnectArgs = WebRtcOnConnectArgs;\r\n        /**\r\n         * Prints message if condition is falsy.\r\n         *\r\n         * Does NOT throw/stop execution.\r\n         * @param condition\r\n         * @param message\r\n         */\r\n        function assert(condition, message) {\r\n            if (!condition) {\r\n                // get a stack trace\r\n                let err = new Error();\r\n                console.error(`WebRTC Assertion Failed: ${(message || '<no message>')}`, { message: message, stack: err.stack });\r\n            }\r\n        }\r\n        class WebRtcComponentSystem2 {\r\n            constructor() {\r\n                // general settings\r\n                this.iceServers = [\r\n                    {\r\n                        urls: \"stun:public.stun.vertx.cloud:3478\"\r\n                    },\r\n                    {\r\n                        urls: \"turn:public.turn.vertx.cloud:3478\",\r\n                        username: \"visr\",\r\n                        credential: \"visr\",\r\n                        credentialType: \"password\"\r\n                    }\r\n                ];\r\n                this.remoteAudioEnabled = true;\r\n                this.remoteVideoEnabled = true;\r\n                this.localAudioEnabled = true;\r\n                this.localVideoEnabled = true;\r\n                this.mp3noiseurl = \"/static/images/noise.mp3\";\r\n                this.oggnoiseurl = \"/static/images/noise.ogg\";\r\n                // debug settings\r\n                this.useDebugVp8Room = false;\r\n                this.useDebugH264Room = false;\r\n                // private/internal variables\r\n                this.initTcs = null;\r\n                this.sessionInfo = null;\r\n                /** the janus api */\r\n                this.janus = null;\r\n                this.sessionObserver = null;\r\n                /** the janus videoroom handle for publishing */\r\n                this.janusVrHandlePublisher = null;\r\n                this._publisherId = 0;\r\n                this.localPublisherIdChanged = new NodeComponentModel._WebRTCEvent();\r\n                this.peerConnectionsByVideoRoomHandle = new Map();\r\n                // local media\r\n                this.userMediaStream = null;\r\n                this._callId = \"\";\r\n                this._currentSpaceId = \"\";\r\n                this.onresize_logScreenSize = () => {\r\n                    this.statTracker.set(\"system\", \"screenSize\", `${screen.width}x${screen.height}@${window.devicePixelRatio}`);\r\n                };\r\n                if (!WebRtcComponentSystem2._singletonInstance)\r\n                    WebRtcComponentSystem2._singletonInstance = this;\r\n                this.initTcs = new NodeComponentModel.TaskCompletionSource();\r\n                if (!this.statTracker)\r\n                    this.statTracker = new Vertex.WebRtc.WebRtcStatTracker();\r\n                this.onWebRtcInitialized = new Vertex.EventBus();\r\n                this.onWebRtcUninitialized = new Vertex.EventBus();\r\n                this.userMediaFactory = new NodeComponentModel.DefaultWebRtcUserMediaFactory();\r\n            }\r\n            get publisherId() {\r\n                return this._publisherId;\r\n            }\r\n            /**\r\n             * can be set to a guid to join a specific call.\r\n             * if this is unset/an empty string, the current VERTX Space ID will be used as the Call ID.\r\n             *\r\n             * the callId will be converted to lowercase on set.\r\n             */\r\n            get callId() {\r\n                return this._callId;\r\n            }\r\n            set callId(value) {\r\n                // todo: validate guid\r\n                if (this.isInitialized) {\r\n                    throw new Error(\"callId cannot be changed while WebRTC is initialized. Uninitialize WebRTC (and await shutdown) before changing callId.\");\r\n                }\r\n                this._callId = value && value.toLowerCase() || \"\";\r\n            }\r\n            get spaceId() {\r\n                return this._currentSpaceId;\r\n            }\r\n            createSystem() {\r\n                let view = new NodeComponentModel.WebRtcComponentView2Impl(this, WebRtcComponentView2);\r\n                let controller = new NodeComponentModel.WebRtcComponentController2Impl(this, WebRtcComponentController2);\r\n                let system = new NodeComponentModel.WebRtcComponentSystem2Impl(this, \"WebRtc\", view, controller);\r\n                return system;\r\n            }\r\n            createComponent() {\r\n                return new WebRtcComponent();\r\n            }\r\n            /** returns the instance of the system. this is for convenience and has undefined behaviour\r\n             * if multiple instances have been created. */\r\n            static getInstance() {\r\n                return this._singletonInstance;\r\n            }\r\n            /** enables webrtc calling.\r\n             * ideally, this should be called directly by a user interaction (such as clicking a 'join call' button). this will help prevent\r\n             * any potential issues with autoplay/muted video etc */\r\n            initializeWebRtc() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.checkForWebRtcAdapter();\r\n                    this.statTracker.set(\"system\", \"initialized\", true);\r\n                    this.initNoiseElement();\r\n                    // todo: this space should be the one associated to the component system, not just the singleton.\r\n                    let space = Vertex.Globals.runtime.space;\r\n                    let spaceId = space.id;\r\n                    this._currentSpaceId = spaceId;\r\n                    let vpId = space.spaceLink.client.ViewpointId;\r\n                    let tkn = Vertex.Globals.bearerToken;\r\n                    if (this.callId) {\r\n                        this.statTracker.set(\"system\", \"vertexIds.originalSpaceId\", spaceId, true);\r\n                        this.statTracker.set(\"system\", \"vertexIds.usingCustomCallId\", \"true\", true);\r\n                        console.log(`[WebRtcComponentSystem] CallId is set: connecting to ${this.callId} instead of ${spaceId}`);\r\n                        spaceId = this.callId;\r\n                    }\r\n                    // telemetry for screen size\r\n                    // todo: unbind?\r\n                    window.addEventListener('resize', this.onresize_logScreenSize);\r\n                    this.onresize_logScreenSize();\r\n                    this.statTracker.set(\"system\", \"uaString\", navigator.userAgent);\r\n                    this.statTracker.set(\"system\", \"vertexIds.stack\", Vertex.Globals.vertexStackUrl);\r\n                    this.statTracker.set(\"system\", \"vertexIds.spaceId\", spaceId, true);\r\n                    this.statTracker.set(\"system\", \"vertexIds.viewpointId\", vpId, true);\r\n                    this.janus = new NodeComponentModel.JanusApi(`https://${Vertex.Globals.vertexStackUrl}/`);\r\n                    // some extra logic here - if we're running off-stack, a bearer token must be set\r\n                    if (!tkn) {\r\n                        let runningOnVertex = location.hostname === \"vertx.cloud\" || location.hostname.endsWith(\".vertx.cloud\");\r\n                        if (!runningOnVertex) {\r\n                            throw new Error(\"You must set Vertex.Globals.bearerToken to use WebRTC\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.janus.setBearerToken(tkn);\r\n                    }\r\n                    if (!spaceId || !vpId) {\r\n                        // log in case the caller didnt await the task\r\n                        throw new Error(\"Init failed. Maybe you're not connected to the space yet? (Space or Viewpoint ID is not set, or not authenticated)\");\r\n                    }\r\n                    if (this.useDebugVp8Room) {\r\n                        this.statTracker.set(\"system\", \"debug.forceVp8Room\", true);\r\n                        console.warn(\"[WebRtcComponentSystem] DEBUG: Force joining room VP8 Test Room\");\r\n                    }\r\n                    if (this.useDebugH264Room) {\r\n                        this.statTracker.set(\"system\", \"debug.forceH264Room\", true);\r\n                        console.warn(\"[WebRtcComponentSystem] DEBUG: Force joining room H264 Test Room\");\r\n                    }\r\n                    this.statTracker.set(\"system\", \"vertexIds.sessionId\", \"pending\");\r\n                    this.statTracker.set(\"system\", \"vertexIds.roomId\", \"pending\");\r\n                    this.sessionInfo = yield this.janus.createVertexWebRtcSessionAsync(spaceId, vpId, this.useDebugVp8Room, this.useDebugH264Room);\r\n                    if (this.sessionInfo == null) {\r\n                        this.statTracker.set(\"system\", \"vertexIds.sessionId\", \"Failed!!\");\r\n                        this.statTracker.set(\"system\", \"vertexIds.roomId\", \"Failed!!\");\r\n                        // log in case the caller didnt await the task\r\n                        throw new Error(\"Init failed. Failed to create session. Try again later.\");\r\n                    }\r\n                    this.statTracker.set(\"system\", \"vertexIds.sessionId\", this.sessionInfo.jSession, true);\r\n                    this.statTracker.set(\"system\", \"vertexIds.roomId\", this.sessionInfo.roomId, true);\r\n                    let observer = new NodeComponentModel.JanusSessionObserver(this.janus, this.statTracker);\r\n                    observer.onError.add(this.observer_onError, this);\r\n                    observer.onKeepAlive.add(this.observer_onKeepAlive, this);\r\n                    observer.onEvent.add(this.observer_onEvent, this);\r\n                    observer.onVideoRoomEvent.add(this.observer_onVideoRoomEvent, this);\r\n                    observer.onWebRtcUp.add(this.observer_onWebRtcUp, this);\r\n                    observer.onWebRtcHangup.add(this.observer_onWebRtcHangup, this);\r\n                    observer.onWebRtcMedia.add(this.observer_onWebRtcMedia, this);\r\n                    observer.onWebRtcSlowLink.add(this.observer_onWebRtcSlowLink, this);\r\n                    observer.observeSession(this.sessionInfo.jSession, spaceId, vpId);\r\n                    this.sessionObserver = observer;\r\n                    this.statTracker.set(\"system\", \"vertexIds.publishHandle\", \"Pending\");\r\n                    // note: we make one handle now for publishing, and then we create more later for subscribing\r\n                    var vrResult = yield this.janus.createVideoRoomPluginHandle(this.sessionInfo.jSession);\r\n                    if (vrResult.error) {\r\n                        this.statTracker.set(\"system\", \"vertexIds.publishHandle\", \"Failed!\");\r\n                        // log in case the caller didnt await the task\r\n                        console.error(\"vrResult error\", vrResult.error);\r\n                        throw new Error(\"Init failed. Couldn't join VideoRoom as Publisher\");\r\n                    }\r\n                    this.statTracker.set(\"system\", \"vertexIds.publishHandle\", vrResult.handle, true);\r\n                    this.janusVrHandlePublisher = vrResult.handle;\r\n                    // join as publisher (required for both view and controller - controller explicitly starts publishing later)\r\n                    this.statTracker.set(\"system\", \"publishJoined\", \"Pending\");\r\n                    // hack: send a few invalid async requests to the videoroom. this will help flush out events from a previous observer\r\n                    // so we don't miss messages.\r\n                    for (let i = 0; i < 3; ++i) {\r\n                        this.statTracker.set(\"system\", \"publishJoined\", `FlushingMessages: ${i + 1} of 3`);\r\n                        yield this.janus.leaveVideoRoom(this.sessionInfo.jSession, this.janusVrHandlePublisher);\r\n                    }\r\n                    this.statTracker.set(\"system\", \"publishJoined\", `Joining`);\r\n                    // todo: join as publisher (required for both view and controller - controller explicitly starts publishing later)\r\n                    var joinResult = yield this.janus.joinVideoRoomAsPublisher(this.sessionInfo.jSession, this.janusVrHandlePublisher, this.sessionInfo.roomId, \"Web User\");\r\n                    if (joinResult.error) {\r\n                        console.error(\"joinResult error\", joinResult.error);\r\n                        throw new Error(\"Init failed. Couldn't join VideoRoom as Publisher\");\r\n                    }\r\n                    this.statTracker.set(\"system\", \"publishJoined\", !joinResult.error);\r\n                    // the result of this message shows up as a message/event on the observer\r\n                    this.initTcs.trySetResult();\r\n                    this.onWebRtcInitialized.trigger({\r\n                        sender: this\r\n                    });\r\n                });\r\n            }\r\n            setPeerConnectionForHandle(handle, peerConnection) {\r\n                if (peerConnection)\r\n                    this.peerConnectionsByVideoRoomHandle.set(handle, peerConnection);\r\n                else\r\n                    this.peerConnectionsByVideoRoomHandle.delete(handle);\r\n            }\r\n            getVideoRoomPublishHandle() {\r\n                return this.janusVrHandlePublisher;\r\n            }\r\n            createVideoRoomHandle() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let result = yield this.janus.createVideoRoomPluginHandle(this.sessionInfo.jSession);\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    return result.handle;\r\n                });\r\n            }\r\n            destroyVideoRoomHandle(handle) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let result = yield this.janus.detachPluginHandle(this.sessionInfo.jSession, handle);\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    return;\r\n                });\r\n            }\r\n            setStatsWindowVisible(isVisible) {\r\n                this.statTracker.setWindowVisible(isVisible);\r\n            }\r\n            subscribeTo(handle, publisherId) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    console.debug(\"[WebRTC] Subscribing with settings \", {\r\n                        audioEnabled: this.remoteAudioEnabled,\r\n                        videoEnabled: this.remoteVideoEnabled\r\n                    });\r\n                    if (handle == 0)\r\n                        throw new Error(\"Invalid Handle\");\r\n                    let result = yield this.janus.videoRoomSubscribe(this.sessionInfo.jSession, handle, publisherId, this.sessionInfo.roomId, this.remoteAudioEnabled, this.remoteVideoEnabled);\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                });\r\n            }\r\n            unsubscribeFrom(handle, publisherId) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (handle == 0)\r\n                        throw new Error(\"Invalid Handle\");\r\n                    let result = yield this.janus.leaveVideoRoom(this.sessionInfo.jSession, handle);\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                });\r\n            }\r\n            switchSubscriptionTo(handle, publisherId) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    console.debug(\"[WebRTC] Switching to new publisher \" + publisherId);\r\n                    if (handle == 0)\r\n                        throw new Error(\"Invalid Handle\");\r\n                    let result = yield this.janus.videoRoomSwitch(this.sessionInfo.jSession, handle, publisherId);\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    let result2 = yield this.janus.videoRoomConfigureRestart(this.sessionInfo.jSession, handle);\r\n                    if (result2.error) {\r\n                        throw result2.error;\r\n                    }\r\n                });\r\n            }\r\n            sendJsep(handle, type, content) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (handle === this.janusVrHandlePublisher) {\r\n                        yield this.janus.publishToVideoRoom(this.sessionInfo.jSession, handle, this.localAudioEnabled, this.localVideoEnabled, type, content);\r\n                    }\r\n                    else {\r\n                        yield this.janus.startSubscribe(this.sessionInfo.jSession, handle, type, content);\r\n                    }\r\n                });\r\n            }\r\n            sendIce(handle, sdpMid, sdpMlineIndex, content) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    yield this.janus.sendTrickleIce(this.sessionInfo.jSession, handle, sdpMid, sdpMlineIndex, content);\r\n                });\r\n            }\r\n            sendIceComplete(handle) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    yield this.janus.sendTrickleIceCompleted(this.sessionInfo.jSession, handle);\r\n                });\r\n            }\r\n            observer_onKeepAlive(sender, data) {\r\n                // console.log(`Received KeepAlive from Janus`, data);\r\n            }\r\n            observer_onEvent(sender, data) {\r\n                console.debug(`[WebRTC] Janus Event`, data);\r\n            }\r\n            observer_onWebRtcUp(sender, data) {\r\n                console.log(\"[WebRTC] WebRTC Up! (Janus connection established)\", data);\r\n                this.statTracker.set(`vrh${data.sender}`, \"backchannel.status\", \"WebRtcUp\");\r\n                this.statTracker.set(`vrh${data.sender}`, \"backchannel.statusTime\", new Date());\r\n            }\r\n            observer_onWebRtcHangup(sender, data) {\r\n                console.warn(\"[WebRTC] WebRTC Hangup! (Janus WebRTC connection ended)\", data);\r\n                this.statTracker.set(`vrh${data.sender}`, \"backchannel.status\", `WebRtcHangup Reason: ${data.reason}`);\r\n                this.statTracker.set(`vrh${data.sender}`, \"backchannel.statusTime\", new Date());\r\n            }\r\n            observer_onWebRtcMedia(sender, data) {\r\n                this.statTracker.set(`vrh${data.sender}`, `media_${data.type}.serverReceiving`, data.receiving);\r\n                if (data.receiving) {\r\n                    console.debug(`[WebRTC] Janus is now receiving ${data.type} (vrh ${data.sender})`, data);\r\n                }\r\n                else {\r\n                    console.warn(`[WebRTC] Janus is no longer receiving ${data.type} (vrh ${data.sender})`, data);\r\n                }\r\n            }\r\n            observer_onWebRtcSlowLink(sender, data) {\r\n                let direction = data.uplink ? 'up' : 'down';\r\n                this.statTracker.set(`vrh${data.sender}`, `slowlink_${direction}`, data.nacks);\r\n                this.statTracker.increment(`vrh${data.sender}`, `slowlink_${direction}_total`, data.nacks);\r\n                console.log(`[WebRTC] Slow ${direction}link - ${data.nacks} nacks`, data);\r\n            }\r\n            observer_onVideoRoomEvent(sender, data) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let videoRoomData = data.plugindata.data;\r\n                    let videoRoomMessage = videoRoomData.videoroom;\r\n                    if (videoRoomMessage == \"event\") {\r\n                        // The \"configured\" message is generally a response to 'publish'/'configure' messages when we start sending.\r\n                        // However, it is also received if a stream we're subscribing to needs to re-negotiate.\r\n                        if (videoRoomData.configured === \"ok\") {\r\n                            let acodec = videoRoomData.audio_codec || \"unknown\";\r\n                            let vcodec = videoRoomData.video_codec || \"unknown\";\r\n                            console.debug(`[WebRTC] Video Room Reconfigured. Using codecs ${vcodec}/${acodec}. Handling JSEP...`, data);\r\n                            let vrHandle = data.sender;\r\n                            let pc = this.peerConnectionsByVideoRoomHandle.get(vrHandle);\r\n                            if (!pc) {\r\n                                console.error(\"[WebRTC] Received configure for a peerconnection we haven't set up yet!\");\r\n                            }\r\n                            if (!data.jsep) {\r\n                                console.error(\"[WebRTC] Expected JSEP with 'configured' event!\");\r\n                            }\r\n                            else {\r\n                                //this.fixSdp(data.jsep);\r\n                                yield pc.setRemoteDescription({\r\n                                    type: data.jsep.type,\r\n                                    sdp: data.jsep.sdp\r\n                                });\r\n                                // if this was an offer (such as if janus asked us to renegotiate)\r\n                                // then we need to create an answer\r\n                                if (data.jsep.type == \"offer\") {\r\n                                    let answer = yield pc.createAnswer();\r\n                                    console.log(`Sending answer`, answer);\r\n                                    yield pc.setLocalDescription(answer);\r\n                                    yield this.sendJsep(vrHandle, answer.type, answer.sdp);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    // handle \"joined\" message, which is sent in response to a publisher joining.\r\n                    // We use this to find our own publisher ID for later use.\r\n                    if (videoRoomMessage == \"joined\") {\r\n                        let room = videoRoomData.room;\r\n                        let desc = videoRoomData.description || \"<no description>\";\r\n                        let myId = videoRoomData.id;\r\n                        this._publisherId = myId;\r\n                        this.localPublisherIdChanged.invoke(this, this._publisherId);\r\n                        console.log(`[WebRTC] Joined Room ${room} (${desc}) successfully! Our publisher ID is ${myId}`);\r\n                    }\r\n                    // the \"attached\" message is fired when we have sent a \"subscribe\" message that was successful.\r\n                    // it tells us the \"id\" (presumbaly the same publisher id we already told it)\r\n                    // and also tells us the display name.\r\n                    // It will be accompanied by a jsep offer, which we should handle.\r\n                    // the \"sender\" property on the root will help us find the right peer connection.\r\n                    if (videoRoomMessage == \"attached\") {\r\n                        let room = videoRoomData.room;\r\n                        let pubId = videoRoomData.id;\r\n                        let pubDisplay = videoRoomData.display || \"<no name>\";\r\n                        if (pubId == this.publisherId) {\r\n                            console.log(`Not subscribing to ${pubId} (${pubDisplay}) because that's our own stream`);\r\n                            return;\r\n                        }\r\n                        console.debug(`[WebRTC] Subscribing to ${pubId} (${pubDisplay}) in room ${room}...`);\r\n                        let senderHandle = data.sender;\r\n                        let pc = this.peerConnectionsByVideoRoomHandle.get(senderHandle);\r\n                        if (pc) {\r\n                            var jsep = data.jsep;\r\n                            console.debug(`[WebRTC] Applying incoming SDP for ${pubId}`, jsep);\r\n                            yield pc.setRemoteDescription({\r\n                                type: jsep.type,\r\n                                sdp: jsep.sdp\r\n                            });\r\n                            let answer = yield pc.createAnswer();\r\n                            console.debug(`[WebRTC] Sending asnwer for ${pubId}`, answer);\r\n                            yield pc.setLocalDescription(answer);\r\n                            yield this.sendJsep(senderHandle, answer.type, answer.sdp);\r\n                        }\r\n                        else {\r\n                            console.error(`[WebRTC] No peer connection registered for ${pubId}`);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            observer_onError(sender, data) {\r\n                console.error(`Observer Error`, data);\r\n            }\r\n            uninitializeWebRtc() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    this.initTcs.trySetCancelled();\r\n                    this.initTcs = new NodeComponentModel.TaskCompletionSource();\r\n                    // leave the room\r\n                    yield this.janus.leaveVideoRoom(this.sessionInfo.jSession, this.janusVrHandlePublisher);\r\n                    try {\r\n                        // destroy the publisher handle\r\n                        yield this.janus.detachPluginHandle(this.sessionInfo.jSession, this.janusVrHandlePublisher);\r\n                    }\r\n                    catch (_a) {\r\n                        // doesn't matter if this fails\r\n                    }\r\n                    this.janusVrHandlePublisher = 0;\r\n                    // set the publisherid back to 0\r\n                    this._publisherId = 0;\r\n                    this.localPublisherIdChanged.invoke(this, this.publisherId);\r\n                    // ensure all connections were destroyed \r\n                    for (let [handle, pc] of this.peerConnectionsByVideoRoomHandle.entries()) {\r\n                        assert(!pc, `The PeerConnection for ${handle} has not been destroyed. Destroying now.`);\r\n                        if (pc) {\r\n                            pc.close();\r\n                        }\r\n                    }\r\n                    this.peerConnectionsByVideoRoomHandle.clear();\r\n                    if (this.sessionObserver) {\r\n                        this.sessionObserver.destroy();\r\n                        this.sessionObserver = null;\r\n                    }\r\n                    this.sessionInfo = null;\r\n                    this.janus = null;\r\n                    this.onWebRtcUninitialized.trigger({\r\n                        sender: this\r\n                    });\r\n                });\r\n            }\r\n            isInitializedAsyncTask() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    return this.initTcs.task;\r\n                });\r\n            }\r\n            get isInitialized() {\r\n                return this.initTcs.isCompleted;\r\n            }\r\n            // todo: convert this to a factory too\r\n            initNoiseElement() {\r\n                // Create an element to play some background noise.\r\n                // This not only assures the user that a call is active, but helps autoplay run reliably.\r\n                if (!this.noiseElement) {\r\n                    let audio = document.createElement(\"audio\");\r\n                    audio.id = \"vertexDefaultWebRtcComponent_noiseElement\";\r\n                    audio.style.display = \"none\";\r\n                    audio.autoplay = true;\r\n                    audio.loop = true;\r\n                    audio.controls = false;\r\n                    // playsInline is a safari-only attribute for iOS - and generally only concerns video.\r\n                    // always good to be safe though.\r\n                    audio[\"playsinline\"] = true;\r\n                    audio[\"playsInline\"] = true;\r\n                    document.body.appendChild(audio);\r\n                    this.noiseElement = audio;\r\n                }\r\n                // Clear any existing sources and add new\r\n                for (let child of this.noiseElement.childNodes)\r\n                    child.parentNode.removeChild(child);\r\n                let mp3src = document.createElement('source');\r\n                mp3src.src = this.mp3noiseurl;\r\n                let oggsrc = document.createElement('source');\r\n                oggsrc.src = this.oggnoiseurl;\r\n                this.noiseElement.appendChild(mp3src);\r\n                this.noiseElement.appendChild(oggsrc);\r\n                // Attempt to play the noise element.\r\n                // If it fails, then warn the dev that autoplay wont work.\r\n                let playPromise = this.noiseElement.play();\r\n                if (playPromise instanceof Promise) {\r\n                    let errMsg = \"[VERTX:DefaultWebRtcComponentView:initializeWebRtc] The WebRTC Background Noise could not be autoplayed.\\n\" +\r\n                        \"Try calling initializeWebRtc again as a result of direct user interaction (e.g. a mouse click).\\n\" +\r\n                        \"Some WebRTC elements may fail to autoplay without user interaction.\";\r\n                    try {\r\n                        playPromise\r\n                            .then(_ => {\r\n                            // autoplay succeeded\r\n                            console.log(\"[VERTX:WebRtcComponentSystem:initializeWebRtc] Successfully started playing the WebRTC Background Noise. Autoplays should succeed reliably.\");\r\n                        })\r\n                            .catch((err) => {\r\n                            // autoplay failed\r\n                            console.error(errMsg, err);\r\n                        });\r\n                    }\r\n                    catch (err2) {\r\n                        // catch in case we are in a browser that doesn't support Promise.catch\r\n                        console.error(errMsg, err2);\r\n                    }\r\n                }\r\n            }\r\n            checkForWebRtcAdapter() {\r\n                // inject webrtc adapter. this improves webrtc compatibility across browsers.\r\n                if (!window[\"adapter\"]) {\r\n                    // if running on VERTX, then we can just load the adapter\r\n                    let vertexHosts = [\"vertx.cloud\", \"nx-staging.vertx.cloud\", \"dev.vertx.cloud\"];\r\n                    if (vertexHosts.indexOf(location.host) >= 0) {\r\n                        let ele = document.createElement('script');\r\n                        ele.src = `/runtime/js/webrtc-adapter/adapter.js`;\r\n                        document.body.appendChild(ele);\r\n                    }\r\n                    else {\r\n                        // not running on VERTX - we can still load from VERTX if the stack URL is set\r\n                        if (Vertex.Globals.vertexStackUrl) {\r\n                            try {\r\n                                let uri = new URL(Vertex.Globals.vertexStackUrl);\r\n                                if (vertexHosts.indexOf(uri.host) >= 0) {\r\n                                    console.error(`[WebRtcComponentSystem.initializeWebRtc] WebRTC Adapter (adapter.js) has not been loaded.\\nTo maximize WebRTC compatibility, adapter.js should ` +\r\n                                        `be loaded before init. adapter is available from npm at 'webrtc-adapter', with a version of at least 7.7.0\\n\\n` +\r\n                                        `Adapter will automatically be loaded from VERTX, but this behaviour will be removed in the future.`);\r\n                                    let ele = document.createElement('script');\r\n                                    ele.src = `https://${uri.host}/runtime/js/webrtc-adapter/adapter.js`;\r\n                                    document.body.appendChild(ele);\r\n                                }\r\n                                else {\r\n                                    throw new Error(\"invalid stack url\");\r\n                                }\r\n                            }\r\n                            catch (_a) {\r\n                                console.error(`[WebRtcComponentSystem.initializeWebRtc] WebRTC Adapter (adapter.js) has not been loaded.\\nTo maximize WebRTC compatibility, adapter.js should ` +\r\n                                    `be loaded before WebRTC init. The 'webrtc-adapter' package is available on NPM, and should be loaded with a version of at least 7.7.0`);\r\n                            }\r\n                        }\r\n                        else {\r\n                            console.error(`[WebRtcComponentSystem.initializeWebRtc] WebRTC Adapter (adapter.js) has not been loaded.\\nTo maximize WebRTC compatibility, adapter.js should ` +\r\n                                `be loaded before WebRTC init. The 'webrtc-adapter' package is available on NPM, and should be loaded with a version of at least 7.7.0`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        WebRtcComponentSystem2._singletonInstance = null;\r\n        NodeComponentModel.WebRtcComponentSystem2 = WebRtcComponentSystem2;\r\n        class WebRtcComponentView2 extends NodeComponentModel.BaseWebRtcComponentView {\r\n            constructor() {\r\n                super(...arguments);\r\n                this.initTcs = new NodeComponentModel.CancellationTokenSource();\r\n                /** the videoroom handle for this view's janus subscription */\r\n                this.subscriberHandle = Promise.resolve(0);\r\n                this.currentSubscriptionId = 0;\r\n                this.currentSubscriptionInfo = null;\r\n                this._hasSubscribedToAny = false;\r\n            }\r\n            isValidCall() {\r\n                // if the view doesn't match the call ID, completely ignore it.\r\n                let componentCallId = this.component.callId.toLowerCase();\r\n                if (!componentCallId)\r\n                    componentCallId = this.system.spaceId;\r\n                this.system.statTracker.set(`View ${this.node.id}`, \"callId\", componentCallId, false);\r\n                if (componentCallId != this.system.callId) {\r\n                    this.system.statTracker.set(`View ${this.node.id}`, \"ignored\", \"yes: callId does not match\", false);\r\n                    return false;\r\n                }\r\n                this.system.statTracker.set(`View ${this.node.id}`, \"ignored\", \"no: callId matches\", false);\r\n                return true;\r\n            }\r\n            // Vertex\r\n            bindComponent(system, node, component) {\r\n                this.system.statTracker.set(`View ${node.id}`, \"bound\", true);\r\n                // store the bound handler so we can unbind it later\r\n                this.changeHandler = this.component_onChanged.bind(this);\r\n                component.onChanged.on(this.changeHandler);\r\n                // Bind listeners for reacting to init/uninit\r\n                this.initHandler = this.system_onWebRtcInitialized.bind(this);\r\n                system.onWebRtcInitialized.on(this.initHandler);\r\n                this.uninitHandler = this.system_onWebRtcUninitialized.bind(this);\r\n                system.onWebRtcUninitialized.on(this.uninitHandler);\r\n                // Fire the init behaviour if already inited\r\n                if (system.isInitialized) {\r\n                    this.startWebRtcAsync(this.initTcs)\r\n                        .catch(this.logErrors);\r\n                }\r\n            }\r\n            unbindComponent(system, node, component) {\r\n                this.system.statTracker.set(`View ${node.id}`, \"bound\", false);\r\n                // unbind the bound handler\r\n                if (this.changeHandler)\r\n                    component.onChanged.off(this.changeHandler);\r\n                this.changeHandler = null;\r\n                // Unbind listeners for reacting to init/uninit\r\n                if (this.initHandler)\r\n                    system.onWebRtcInitialized.off(this.initHandler);\r\n                this.initHandler = null;\r\n                if (this.uninitHandler)\r\n                    system.onWebRtcUninitialized.off(this.uninitHandler);\r\n                this.uninitHandler = null;\r\n                this.initTcs.cancel();\r\n                // unconditionally stop. don't pass the cancellation token since we just cancelled it\r\n                this.stopWebRtcAsync()\r\n                    .catch(this.logErrors);\r\n            }\r\n            // System Events\r\n            system_onWebRtcInitialized(args) {\r\n                this.startWebRtcAsync()\r\n                    .catch(this.logErrors);\r\n            }\r\n            system_onWebRtcUninitialized(args) {\r\n                this.stopWebRtcAsync()\r\n                    .catch(this.logErrors);\r\n            }\r\n            // Vertex Events\r\n            component_onChanged(basecomp) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    let component = basecomp;\r\n                    var ctx = component.sndContext;\r\n                    console.debug(`[WebRTC] WebRtcComponent Changed: Context: ${ctx}, Audio: ${component.audio}, Video: ${component.video}`);\r\n                    let publisherId = this.parseHandle(ctx);\r\n                    this.currentSubscriptionId = publisherId;\r\n                    this.system.statTracker.set(`View ${this.node.id}`, \"subscriptionId\", this.currentSubscriptionId, true);\r\n                    this.updateSubscriptionState();\r\n                });\r\n            }\r\n            // WebRtc\r\n            startWebRtcAsync(ct) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    ct = NodeComponentModel.CancellationTokenSource.ensure(ct);\r\n                    this.system.statTracker.set(`View ${this.node.id}`, \"callId\", this.component.callId, true);\r\n                    if (!this.isValidCall()) {\r\n                        return;\r\n                    }\r\n                    this.subscriberHandle = this.system.createVideoRoomHandle();\r\n                    yield this.subscriberHandle;\r\n                    this._hasSubscribedToAny = false;\r\n                    let publisherId = this.parseHandle(this.component.sndContext);\r\n                    this.currentSubscriptionId = publisherId;\r\n                    // trigger the change to ubsub/sub\r\n                    this.updateSubscriptionState();\r\n                });\r\n            }\r\n            stopWebRtcAsync(stopImmediate, ct) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    ct = NodeComponentModel.CancellationTokenSource.ensure(ct);\r\n                    // if we have time, try nicely to clear up\r\n                    if (!stopImmediate) {\r\n                        let self = this;\r\n                        this.subscriberHandle.then((handle) => {\r\n                            try {\r\n                                // try this but it may fail if the session has already been destroyed.\r\n                                return self.system.destroyVideoRoomHandle(handle);\r\n                            }\r\n                            catch (_a) {\r\n                                // doesn't matter if this fails\r\n                                return null;\r\n                            }\r\n                        });\r\n                        this.subscriberHandle = Promise.resolve(0);\r\n                    }\r\n                    this.currentSubscriptionId = 0;\r\n                    this.updateSubscriptionState();\r\n                });\r\n            }\r\n            // View Stuff\r\n            updateSubscriptionState() {\r\n                let currentId = (this.currentSubscriptionInfo && this.currentSubscriptionInfo.publisherId) || 0;\r\n                // if the newly updated subscriber ID is the same as the one we're already subscribed to, then there's nothing to do\r\n                if (currentId == this.currentSubscriptionId)\r\n                    return;\r\n                // otherwise, bin the last connection and start a new one\r\n                if (this.currentSubscriptionInfo && typeof this.currentSubscriptionInfo.cancel === 'function') {\r\n                    this.currentSubscriptionInfo.cancel();\r\n                    this.currentSubscriptionInfo = null;\r\n                }\r\n                // don't view ourselves\r\n                if (this.node.HasToken == false && this.currentSubscriptionId != 0) {\r\n                    this.currentSubscriptionInfo = this.subscribeToCurrent();\r\n                }\r\n            }\r\n            subscribeToCurrent() {\r\n                let info = new WebRtcViewSubscriptionInfo(this.currentSubscriptionId, this, this.system.remoteMediaFactory);\r\n                info.initAsync()\r\n                    .catch(this.logErrors);\r\n                return info;\r\n            }\r\n            // utils\r\n            parseHandle(raw) {\r\n                let result = +raw;\r\n                if (typeof result != \"number\") {\r\n                    console.warn(`Invalid handle - ${raw} is not a number type`);\r\n                    return 0;\r\n                }\r\n                if (isNaN(result)) {\r\n                    console.warn(`Invalid handle - ${raw} is Not a Number`);\r\n                    return 0;\r\n                }\r\n                if (!Number.isInteger(result)) {\r\n                    console.warn(`Invalid handle - ${raw} is not an integer`);\r\n                    return 0;\r\n                }\r\n                if (result < 0) {\r\n                    console.warn(`Invalid handle - ${raw} is not a positive integer`);\r\n                    return 0;\r\n                }\r\n                return result;\r\n            }\r\n            logErrors(error) {\r\n                console.error(`A promise faulted in WebRtcComponentView`, error);\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcComponentView2 = WebRtcComponentView2;\r\n        class WebRtcComponentController2 extends NodeComponentModel.BaseWebRtcComponentController {\r\n            constructor() {\r\n                super(...arguments);\r\n                this.initCts = new NodeComponentModel.CancellationTokenSource();\r\n                this.publisherId = 0;\r\n                this.isWebRtcUp = false;\r\n                this.publisherHandle = 0;\r\n                this.mediaFactoryContext = null;\r\n                this.mediaFactoryWasInitialized = false;\r\n                this.peerConnection = null;\r\n                this.localMediaStream = null;\r\n            }\r\n            // Vertex\r\n            bindComponent(system, node, component) {\r\n                this.system.statTracker.set(`Controller ${node.id}`, \"bound\", true);\r\n                // component changed\r\n                this.changedHandler = this.component_onComponentChanged.bind(this);\r\n                component.onChanged.on(this.changedHandler);\r\n                // system init/uninit\r\n                this.initHandler = this.system_onWebRtcInitialized.bind(this);\r\n                system.onWebRtcInitialized.on(this.initHandler);\r\n                this.uninitHandler = this.system_onWebRtcUninitialized.bind(this);\r\n                system.onWebRtcUninitialized.on(this.uninitHandler);\r\n                // assert some important stuff for later\r\n                assert(this.system.localMediaFactory, \"localMediaFactory is not set on the WebRtcComponentSystem - errors will occur if this client \" +\r\n                    \"attempts to send audio/video in a WebRTC call\");\r\n                assert(this.system.userMediaFactory, \"userMediaFactory is not set on the WebRtcComponentSystem - errors will occur if this client \" +\r\n                    \"attempts to send audio/video in a WebRTC call\");\r\n                // fire init if already inited\r\n                if (system.isInitialized) {\r\n                    this.startWebRtcAsync(this.initCts)\r\n                        .catch(this.logErrors);\r\n                }\r\n            }\r\n            unbindComponent(system, node, component) {\r\n                this.system.statTracker.set(`Controller ${node.id}`, \"bound\", false);\r\n                // unbind the bound handler\r\n                if (this.changedHandler)\r\n                    component.onChanged.off(this.changedHandler);\r\n                this.changedHandler = null;\r\n                // Unbind listeners for reacting to init/uninit\r\n                if (this.initHandler)\r\n                    system.onWebRtcInitialized.off(this.initHandler);\r\n                this.initHandler = null;\r\n                if (this.uninitHandler)\r\n                    system.onWebRtcUninitialized.off(this.uninitHandler);\r\n                this.uninitHandler = null;\r\n                // cancel init \r\n                this.initCts.cancel();\r\n                // unconditionally stop. don't pass the cancellation token since we just cancelled it\r\n                this.stopWebRtcAsync()\r\n                    .catch(this.logErrors);\r\n                return;\r\n                system.localPublisherIdChanged.remove(this.system_localPublisherIdChanged);\r\n                system.sessionObserver.onWebRtcUp.remove(this.sessionObserver_onWebRtcUp);\r\n                component.audio = false;\r\n                component.video = false;\r\n                component.triggerOnChanged();\r\n                component.onChanged.off(this.component_onComponentChanged);\r\n                try {\r\n                    //component.onConnect.off(component_OnConnect);\r\n                }\r\n                catch (_a) { }\r\n            }\r\n            // System Events\r\n            system_onWebRtcInitialized(args) {\r\n                this.startWebRtcAsync(this.initCts)\r\n                    .catch(this.logErrors);\r\n            }\r\n            system_onWebRtcUninitialized(args) {\r\n                this.stopWebRtcAsync()\r\n                    .catch(this.logErrors);\r\n            }\r\n            // WebRTC\r\n            startWebRtcAsync(ct) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    ct = NodeComponentModel.CancellationTokenSource.ensure(ct);\r\n                    // todo: start/stop lock: tryenter\r\n                    try {\r\n                        this.system.localPublisherIdChanged.add(this.system_localPublisherIdChanged, this);\r\n                        this.system.sessionObserver.onWebRtcUp.add(this.sessionObserver_onWebRtcUp, this);\r\n                        this.publisherHandle = this.system.getVideoRoomPublishHandle();\r\n                        assert(!this.publisherId, \"publisherId was set earlier than expected\");\r\n                        assert(!this.isWebRtcUp, \"webrtcup was set earlier than expected\");\r\n                        // write 0 to the component\r\n                        this.updatePublishingState();\r\n                        // if we happen to already know our publisher id, then we can just set this now.\r\n                        // if not, it'll get sent once we start broadcasting\r\n                        this.publisherId = this.system.publisherId;\r\n                        this.updatePublishingState();\r\n                        assert(this.node && this.node.HasToken, \"node no longer exists or we don't own the token\");\r\n                        if (this.node && this.node.HasToken) {\r\n                            yield this.createPeerConnectionAsync(ct);\r\n                        }\r\n                    }\r\n                    finally {\r\n                        // todo: start/stop lock: release\r\n                    }\r\n                });\r\n            }\r\n            stopWebRtcAsync(stopImmediate, ct) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    ct = NodeComponentModel.CancellationTokenSource.ensure(ct);\r\n                    // todo: start/stop lock: tryenter\r\n                    try {\r\n                        if (this.system && this.system.sessionObserver) {\r\n                            // note: this is commented out in the cs code as of vertex-client-unity#0ddcdfeb4cf17290fe5fc63a7624f57cbc87d21d\r\n                            // but does not seem to cause any issues there?\r\n                            // this.system.localPublisherIdChanged.remove(this.system_localPublisherIdChanged);\r\n                            this.system.sessionObserver.onWebRtcUp.remove(this.sessionObserver_onWebRtcUp);\r\n                        }\r\n                        // the system still holds the actual handle - the system itself will destroy it\r\n                        // when needed\r\n                        this.publisherHandle = 0;\r\n                        this.publisherId = 0;\r\n                        this.isWebRtcUp = false;\r\n                        this.updatePublishingState();\r\n                        yield this.destroyPeerConnectionAsync();\r\n                        // sanity checks\r\n                        assert(!this.component || this.component.sndContext == \"0\", \"component.sndContext has not been reset on cleanup\");\r\n                        assert(!this.mediaFactoryContext, \"media factory was not destroyed on cleanup\");\r\n                        assert(!this.mediaFactoryWasInitialized, \"media factory was not de-inited on cleanup\");\r\n                        assert(!this.publisherHandle, \"publisherHandle was not reset\");\r\n                        assert(!this.publisherId, \"publisherId was not reset\");\r\n                    }\r\n                    finally {\r\n                        // todo: start/stop lock: release\r\n                    }\r\n                });\r\n            }\r\n            updatePublishingState() {\r\n                if (this.node && this.node.HasToken) {\r\n                    if (this.isWebRtcUp) {\r\n                        this.component.sndContext = '' + this.publisherId;\r\n                    }\r\n                    else {\r\n                        this.component.sndContext = '0';\r\n                    }\r\n                    this.component.triggerOnChanged();\r\n                }\r\n            }\r\n            updateAudioVideoEnabledStates() {\r\n                if (this.localMediaStream) {\r\n                    let audioTracks = this.localMediaStream.getAudioTracks();\r\n                    let videoTracks = this.localMediaStream.getVideoTracks();\r\n                    for (let track of audioTracks) {\r\n                        track.enabled = this.component.audio;\r\n                    }\r\n                    for (let track of videoTracks) {\r\n                        track.enabled = this.component.video;\r\n                    }\r\n                }\r\n            }\r\n            createPeerConnectionAsync(ct) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    assert(this.system.isInitialized, \"system is not initialized\");\r\n                    assert(!this.mediaFactoryWasInitialized && !this.mediaFactoryContext, \"media has already been instantiated\");\r\n                    assert(this.system.localMediaFactory, \"no local media factory was provided\");\r\n                    // from now, most stats are associated to the janus handle rather than the node.\r\n                    this.system.statTracker.set(`Controller ${this.node.id}`, \"vrHandle\", this.publisherHandle);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"node.id\", this.node.id);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"node.kind\", \"controller/sender\");\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"peerConnection\", \"creating...\");\r\n                    //this.system.statTracker.set(`vrh${this.publisherHandle}`, \"turnServers\", \"todo\");\r\n                    // we create the peerconnection ourselves before invoking the local media factory\r\n                    this.peerConnection = new RTCPeerConnection({\r\n                        iceServers: this.system.iceServers\r\n                    });\r\n                    this.system.statTracker.trackPeerConnection(`vrh${this.publisherHandle}`, `rtcStats`, this.peerConnection);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"iceCandidatesGenerated\", 0);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"iceCandidatesSent\", 0);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"pcStatus.iceGatheringState\", this.peerConnection.iceGatheringState);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"pcStatus.iceConnectionState\", this.peerConnection.iceConnectionState);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"pcStatus.connectionState\", this.peerConnection.connectionState);\r\n                    this.peerConnection.addEventListener(\"icecandidate\", this.pc_onIceCandidate.bind(this));\r\n                    this.peerConnection.addEventListener(\"icegatheringstatechange\", this.pc_onIceGatheringStateChange.bind(this));\r\n                    this.peerConnection.addEventListener(\"iceconnectionstatechange\", this.pc_onIceConnectionStateChange.bind(this));\r\n                    this.peerConnection.addEventListener(\"connectionstatechange\", this.pc_onConnectionStateChange.bind(this));\r\n                    this.peerConnection.addEventListener(\"negotiationneeded\", this.pc_onNegotiationNeeded.bind(this));\r\n                    // no ontrack event for local media - 'track' is only fired for remote webrtc tracks.\r\n                    this.system.setPeerConnectionForHandle(this.publisherHandle, this.peerConnection);\r\n                    this.localMediaStream = new MediaStream();\r\n                    let trackChangeHandler = this.updateAudioVideoEnabledStates.bind(this);\r\n                    this.localMediaStream.addEventListener('addtrack', trackChangeHandler);\r\n                    this.localMediaStream.addEventListener('removetrack', trackChangeHandler);\r\n                    // create the element\r\n                    this.mediaFactoryContext = this.system.localMediaFactory.create({\r\n                        peerConnection: this.peerConnection,\r\n                        mediaStream: this.localMediaStream,\r\n                        component: this.component,\r\n                    });\r\n                    this.mediaFactoryWasInitialized = true;\r\n                    // warm up the local media devices\r\n                    this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.initState\", \"Initializing...\");\r\n                    try {\r\n                        yield this.system.userMediaFactory.initializeUserMediaAsync({\r\n                            initAudio: this.system.localAudioEnabled,\r\n                            initVideo: this.system.localVideoEnabled\r\n                        });\r\n                        this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.initState\", \"Initialized.\");\r\n                    }\r\n                    catch (e) {\r\n                        console.error(`[WebRTC] userMediaFactory threw error in initializeUserMediaAsync. This may cause unpredictable results with WebRTC calls.`, e);\r\n                        this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.initState\", \"Failed\");\r\n                        throw e;\r\n                    }\r\n                    // add the media to our peerconnection\r\n                    this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.acquisitionState\", \"Acquiring...\");\r\n                    try {\r\n                        let tracks = yield this.system.userMediaFactory.getCurrentMediaAsync();\r\n                        this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.totalTracksAcquired\", tracks.length);\r\n                        for (let track of tracks) {\r\n                            this.system.statTracker.set(`Controller ${this.node.id}`, `localTracks.${track.id}`, `Adding [${track.kind}] ${track.label}]`);\r\n                            this.localMediaStream.addTrack(track);\r\n                            this.peerConnection.addTrack(track, this.localMediaStream);\r\n                            this.system.statTracker.set(`Controller ${this.node.id}`, `localTracks.${track.id}`, `[${track.kind}] ${track.label}]`);\r\n                        }\r\n                        this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.acquisitionState\", \"Complete\");\r\n                    }\r\n                    catch (e) {\r\n                        console.error(`[WebRTC] userMediaFactory threw error in getCurrentMediaAsync. This may cause unpredictable results with WebRTC calls.`, e);\r\n                        this.system.statTracker.set(`Controller ${this.node.id}`, \"userMedia.acquisitionState\", \"Failed\");\r\n                    }\r\n                    this.updateAudioVideoEnabledStates();\r\n                    // don't start the connection here: it gets started automatically by the 'negotiationneeded' event\r\n                    // todo: what if it doesn't?\r\n                });\r\n            }\r\n            destroyPeerConnectionAsync(ct) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    ct = NodeComponentModel.CancellationTokenSource.ensure(ct);\r\n                    try {\r\n                        this.system.localMediaFactory.destroy({\r\n                            peerConnection: this.peerConnection,\r\n                            mediaStream: this.localMediaStream,\r\n                            context: this.mediaFactoryContext,\r\n                            component: this.component\r\n                        });\r\n                        this.mediaFactoryWasInitialized = false;\r\n                    }\r\n                    catch (e) {\r\n                        console.error(`[WebRTC] localMediaFactory.destroy threw an error`, { originalError: e });\r\n                    }\r\n                    if (this.peerConnection)\r\n                        this.peerConnection.close();\r\n                    this.system.statTracker.untrackPeerConnection(this.peerConnection);\r\n                    this.peerConnection = null;\r\n                    this.mediaFactoryContext = null;\r\n                    if (this.localMediaStream) {\r\n                        try {\r\n                            for (let track of this.localMediaStream.getTracks()) {\r\n                                try {\r\n                                    track.enabled = false;\r\n                                    track.stop();\r\n                                    this.localMediaStream.removeTrack(track);\r\n                                }\r\n                                catch (e) {\r\n                                    console.error(`[WebRTC] Failed to stop/remove track from localMediaStream`, {\r\n                                        stream: this.localMediaStream,\r\n                                        track: track,\r\n                                        error: e\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            console.error(`[WebRTC] Failed to remove tracks from localMediaStream`, {\r\n                                localMediaStream: this.localMediaStream,\r\n                                error: e\r\n                            });\r\n                        }\r\n                        try {\r\n                            if (typeof this.localMediaStream['stop'] === 'function')\r\n                                this.localMediaStream['stop']();\r\n                            else\r\n                                console.log(`[WebRTC] This browser does not have a 'stop' function on MediaStream (attempting to stop localMediaStream)`);\r\n                        }\r\n                        catch (e) {\r\n                            console.error(`[WebRTC] Failed to stop localMediaStream`);\r\n                        }\r\n                        this.localMediaStream = null;\r\n                    }\r\n                });\r\n            }\r\n            // VERTX events\r\n            component_onComponentChanged(baseComponent) {\r\n                let component = baseComponent;\r\n                try {\r\n                    this.updateAudioVideoEnabledStates();\r\n                }\r\n                catch (e) {\r\n                    this.logErrors(e);\r\n                }\r\n            }\r\n            sessionObserver_onWebRtcUp(sender, message) {\r\n                if (message.sender == this.system.getVideoRoomPublishHandle()) {\r\n                    console.log(\"[WebRTC] WebRTC is now up! (media sending successful)\", message);\r\n                    this.isWebRtcUp = true;\r\n                    this.updatePublishingState();\r\n                }\r\n            }\r\n            system_localPublisherIdChanged(sender, publisherId) {\r\n                console.debug(`[WebRTC] Our Publish ID is now ${publisherId}`);\r\n                this.publisherId = publisherId;\r\n                this.updatePublishingState();\r\n            }\r\n            // peerconnection events\r\n            pc_onIceCandidate(evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    assert(this.publisherHandle, \"publisherHandle is not set (ice candidate ready)\");\r\n                    let candidate = evt.candidate;\r\n                    let handle = this.publisherHandle;\r\n                    if (candidate) {\r\n                        this.system.statTracker.increment(`vrh${this.publisherHandle}`, \"iceCandidatesGenerated\");\r\n                        yield this.system.sendIce(handle, candidate.sdpMid, candidate.sdpMLineIndex, candidate.candidate);\r\n                        this.system.statTracker.increment(`vrh${this.publisherHandle}`, \"iceCandidatesSent\");\r\n                    }\r\n                    else {\r\n                        this.system.statTracker.set(`vrh${this.publisherHandle}`, \"iceCandidates.complete\", \"Sending\");\r\n                        yield this.system.sendIceComplete(handle);\r\n                        this.system.statTracker.set(`vrh${this.publisherHandle}`, \"iceCandidates.complete\", \"Sent\");\r\n                    }\r\n                });\r\n            }\r\n            pc_onIceGatheringStateChange(evt) {\r\n                this.system.statTracker.set(`vrh${this.publisherHandle}`, \"pcStatus.iceGatheringState\", this.peerConnection.iceGatheringState);\r\n            }\r\n            pc_onIceConnectionStateChange(evt) {\r\n                this.system.statTracker.set(`vrh${this.publisherHandle}`, \"pcStatus.iceConnectionState\", this.peerConnection.iceConnectionState);\r\n            }\r\n            pc_onConnectionStateChange(evt) {\r\n                this.system.statTracker.set(`vrh${this.publisherHandle}`, \"pcStatus.connectionState\", this.peerConnection.connectionState);\r\n            }\r\n            pc_onNegotiationNeeded(evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    console.log(\"[WebRTC] PeerConnection needs negotiation\", { event: evt, peerConnection: evt.currentTarget });\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"peerConnection\", \"CreatingOffer\");\r\n                    let offer = yield this.peerConnection.createOffer();\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"peerConnection\", \"SettingLocalDesc\");\r\n                    yield this.peerConnection.setLocalDescription(offer);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"peerConnection\", \"MakingOffer\");\r\n                    yield this.system.sendJsep(this.publisherHandle, offer.type, offer.sdp);\r\n                    this.system.statTracker.set(`vrh${this.publisherHandle}`, \"peerConnection\", \"SentOffer\");\r\n                });\r\n            }\r\n            // utils\r\n            logErrors(error) {\r\n                console.error(`A promise faulted in WebRtcComponentView`, error);\r\n            }\r\n        }\r\n        NodeComponentModel.WebRtcComponentController2 = WebRtcComponentController2;\r\n        // internal classes\r\n        class WebRtcViewSubscriptionInfo {\r\n            constructor(publisherId, view, mediaFactory) {\r\n                this.cts = new NodeComponentModel.CancellationTokenSource();\r\n                this.cts.register(this.onCancelled.bind(this));\r\n                this.publisherId = publisherId;\r\n                this.view = view;\r\n                this.mediaFactory = mediaFactory;\r\n            }\r\n            // convenience properties\r\n            get component() { return this.view.component; }\r\n            get node() { return this.view.node; }\r\n            get system() { return this.view.system; }\r\n            initAsync() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    // publisherId is immutable within this class, so if we know it's invalid, we know we\r\n                    // don't need to do any more setup\r\n                    if (!this.publisherId)\r\n                        return;\r\n                    assert(this.mediaFactory, \"no mediaFactory was provided\");\r\n                    yield Promise.race([this.system.isInitializedAsyncTask(), this.cts.promise()]);\r\n                    if (this.cts.isCancellationRequested)\r\n                        return;\r\n                    if (!this.view.isValidCall()) {\r\n                        return;\r\n                    }\r\n                    this.subscriberHandle = yield this.view.subscriberHandle;\r\n                    // construct the html view\r\n                    // equivalent of 'instantiate the prefab' in unity\r\n                    [this.peerConnection, this.mediaStream] = this.createIncomingPeerConnection();\r\n                    // get the factory to create the media\r\n                    this.factoryContext = this.mediaFactory.create({\r\n                        peerConnection: this.peerConnection,\r\n                        mediaStream: this.mediaStream,\r\n                        component: this.component\r\n                    });\r\n                    // unity inits a signaler here - we have no such concept, we just send the messages\r\n                    // directly via system.sendIce etc\r\n                    // in view, we don't create an offer, janus sends it to us.\r\n                    if (this.subscriberHandle != 0 && this.publisherId != 0) {\r\n                        this.system.setPeerConnectionForHandle(this.subscriberHandle, this.peerConnection);\r\n                        if (this.view._hasSubscribedToAny == false) {\r\n                            this.view._hasSubscribedToAny = true;\r\n                            yield this.system.subscribeTo(this.subscriberHandle, this.publisherId);\r\n                        }\r\n                        else {\r\n                            yield this.system.switchSubscriptionTo(this.subscriberHandle, this.publisherId);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            cancel() {\r\n                this.cts.cancel();\r\n            }\r\n            onCancelled() {\r\n                this.mediaFactory.destroy({\r\n                    peerConnection: this.peerConnection,\r\n                    mediaStream: this.mediaStream,\r\n                    context: this.factoryContext,\r\n                    component: this.component\r\n                });\r\n                this.factoryContext = null;\r\n                this.destroyPeerConnection();\r\n            }\r\n            createIncomingPeerConnection() {\r\n                this.system.statTracker.set(`View ${this.node.id}`, \"vrHandle\", this.subscriberHandle);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"node.id\", this.node.id);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"node.kind\", \"view/receiver\");\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"peerConnection\", \"creating...\");\r\n                //this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"turnServers\", \"todo\");\r\n                let peerConnection = new RTCPeerConnection({\r\n                    iceServers: this.system.iceServers\r\n                });\r\n                this.system.statTracker.trackPeerConnection(`vrh${this.subscriberHandle}`, \"rtcStats\", peerConnection);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"iceCandidatesGenerated\", 0);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"iceCandidatesSent\", 0);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"pcStatus.iceGatheringState\", peerConnection.iceGatheringState);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"pcStatus.iceConnectionState\", peerConnection.iceConnectionState);\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"pcStatus.connectionState\", peerConnection.connectionState);\r\n                peerConnection.addEventListener(\"icecandidate\", this.pc_onIceCandidate.bind(this));\r\n                // todo: unbind?\r\n                peerConnection.addEventListener(\"icegatheringstatechange\", (evt) => {\r\n                    this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"pcStatus.iceGatheringState\", peerConnection.iceGatheringState);\r\n                });\r\n                peerConnection.addEventListener(\"iceconnectionstatechange\", (evt) => {\r\n                    this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"pcStatus.iceGatheringState\", peerConnection.iceGatheringState);\r\n                });\r\n                peerConnection.addEventListener(\"connectionstatechange\", (evt) => {\r\n                    this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"pcStatus.iceGatheringState\", peerConnection.iceGatheringState);\r\n                });\r\n                peerConnection.addEventListener(\"track\", this.pc_onTrack.bind(this));\r\n                // this might not be the best way of doing this (we are blindly bundling all webrtc tracks\r\n                // from the peerconnection into one stream. In some advanced scenarios, this might not be the best idea.)\r\n                let mediaStream = new MediaStream();\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"peerConnection\", \"Created\");\r\n                return [peerConnection, mediaStream];\r\n            }\r\n            destroyPeerConnection() {\r\n                if (this.mediaStream) {\r\n                    for (let track of this.mediaStream.getTracks()) {\r\n                        track.enabled = false;\r\n                        track.stop();\r\n                        this.mediaStream.removeTrack(track);\r\n                    }\r\n                    if (typeof this.mediaStream['stop'] === \"function\")\r\n                        this.mediaStream['stop']();\r\n                    this.mediaStream = null;\r\n                }\r\n                if (this.peerConnection) {\r\n                    this.peerConnection.close();\r\n                    this.system.statTracker.untrackPeerConnection(this.peerConnection);\r\n                    this.peerConnection = null;\r\n                }\r\n            }\r\n            pc_onIceCandidate(evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    assert(this.subscriberHandle, \"subscriberHandle is not set (ice candidate ready)\");\r\n                    let candidate = evt.candidate;\r\n                    let handle = this.subscriberHandle;\r\n                    if (candidate) {\r\n                        this.system.statTracker.increment(`vrh${this.subscriberHandle}`, \"iceCandidatesGenerated\");\r\n                        yield this.system.sendIce(handle, candidate.sdpMid, candidate.sdpMLineIndex, candidate.candidate);\r\n                        this.system.statTracker.increment(`vrh${this.subscriberHandle}`, \"iceCandidatesSent\");\r\n                    }\r\n                    else {\r\n                        this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"iceCandidates.complete\", \"Sending\");\r\n                        yield this.system.sendIceComplete(handle);\r\n                        this.system.statTracker.set(`vrh${this.subscriberHandle}`, \"iceCandidates.complete\", \"Sent\");\r\n                    }\r\n                });\r\n            }\r\n            pc_onTrack(evt) {\r\n                assert(this.mediaStream, \"mediaStream is not ready (ontrack)\");\r\n                this.system.statTracker.set(`vrh${this.subscriberHandle}`, `remote_${evt.track.id}`, `[${evt.track.kind}/${evt.track.enabled}] ${evt.track.label}`);\r\n                this.mediaStream.addTrack(evt.track);\r\n                // fun fact: there is no 'removetrack' in webrtc, they only get disabled.\r\n            }\r\n        }\r\n    })(NodeComponentModel = Vertex.NodeComponentModel || (Vertex.NodeComponentModel = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let UI;\r\n    (function (UI) {\r\n        class InspectorPanel {\r\n            constructor() {\r\n                this.showObjects = false;\r\n                this.arrayBreakout = 4;\r\n                this.excludedProperties = new Array();\r\n                this.customRenderers = new Map();\r\n                this.onInputChanged = new Vertex.EventBus();\r\n                this.wasModified = false;\r\n            }\r\n            propertyRenderer(propertyName, renderer) {\r\n                this.customRenderers.set(propertyName, renderer);\r\n            }\r\n            excludeProperty(propertyName) {\r\n                this.excludedProperties.push(propertyName);\r\n            }\r\n            handleInputChangedEvent(evt) {\r\n                this.onInputChanged.trigger(evt);\r\n                this.wasModified = true;\r\n            }\r\n            bind(targetElement, target) {\r\n                this.targetElement = targetElement;\r\n                this.targetElement.innerHTML = \"\";\r\n                this.target = target;\r\n                if (this.title)\r\n                    this.renderTitleBar(this.title);\r\n                for (var property in this.target) {\r\n                    let renderMethod = this.renderDataRow.bind(this);\r\n                    if (this.customRenderers.has(property)) {\r\n                        let customRenderer = this.customRenderers.get(property);\r\n                        renderMethod = customRenderer.RenderProperty.bind(customRenderer);\r\n                    }\r\n                    var dataRow = renderMethod(property, target);\r\n                    if (dataRow)\r\n                        this.targetElement.appendChild(dataRow);\r\n                }\r\n            }\r\n            renderTitleBar(title) {\r\n                var row = document.createElement(\"div\");\r\n                row.classList.add(\"row\", \"control-heading\", \"control-heading-pin-top\");\r\n                var titleElement = document.createElement(\"div\");\r\n                titleElement.classList.add(\"col\", \"pl-1\");\r\n                titleElement.innerText = title;\r\n                row.appendChild(titleElement);\r\n                let deleteBtn = document.createElement('div');\r\n                deleteBtn.classList.add('inspector-delete-btn');\r\n                deleteBtn.innerHTML = \"&times;\";\r\n                deleteBtn.title = \"Remove Component\";\r\n                let self = this;\r\n                deleteBtn.addEventListener('click', () => {\r\n                    let component = self.target;\r\n                    if ('name' in component == false) {\r\n                        console.error('Delete Component was invoked, but the inspector target did not seem to be a component.');\r\n                        return;\r\n                    }\r\n                    if (!this.targetNode) {\r\n                        console.error('Delete Component was invoked, but the inspector does not have a targetNode assigned.');\r\n                        return;\r\n                    }\r\n                    this.targetNode.removeComponent(component.name);\r\n                    console.log(`Removed '${component.name} component from node.`);\r\n                    Vertex.Globals.event.fire(\"editor:selectNode\", this.targetNode);\r\n                });\r\n                row.appendChild(deleteBtn);\r\n                this.targetElement.appendChild(row);\r\n            }\r\n            renderDataRow(property, currentTarget) {\r\n                if (this.excludedProperties.indexOf(property) !== -1)\r\n                    return;\r\n                var propertyValue = currentTarget[property];\r\n                if (propertyValue === null || typeof propertyValue === 'undefined')\r\n                    return;\r\n                if (propertyValue.toString().startsWith('[object Object]') && this.showObjects === false) {\r\n                    if (propertyValue instanceof Vertex.NodeComponentModel.Structure) {\r\n                        let dataRow = document.createElement(\"div\");\r\n                        dataRow.classList.add(\"row\", \"control-group\");\r\n                        dataRow.classList.add(\"row\", \"m-1\");\r\n                        dataRow.style.backgroundColor = \"#171718\";\r\n                        dataRow.dataset[\"vtxBinding\"] = currentTarget.name + \".\" + property;\r\n                        let label = document.createElement(\"div\");\r\n                        label.classList.add(\"col-12\", \"control-heading\");\r\n                        label.style.textAlign = \"left\";\r\n                        label.innerText = property;\r\n                        let value = document.createElement(\"div\");\r\n                        value.classList.add(\"col-12\", \"inspector-control-section\");\r\n                        propertyValue[\"name\"] = property;\r\n                        propertyValue[\"_isStructure\"] = true;\r\n                        let nestedInspector = new InspectorPanel();\r\n                        nestedInspector.arrayBreakout = 0;\r\n                        nestedInspector.excludedProperties.push(\"name\");\r\n                        nestedInspector.excludedProperties.push(\"_isStructure\");\r\n                        nestedInspector.bind(value, propertyValue);\r\n                        let self = this;\r\n                        nestedInspector.onInputChanged.on((evt) => {\r\n                            let targetInput = evt.target;\r\n                            let vtxBindingData = evt.target[\"dataset\"][\"vtxBinding\"];\r\n                            console.log(vtxBindingData);\r\n                            if (vtxBindingData && vtxBindingData.startsWith(property)) {\r\n                                let splitString = vtxBindingData;\r\n                                splitString = splitString.split(\".\")[1];\r\n                                if (typeof propertyValue[splitString] !== \"undefined\" || true) {\r\n                                    if ((typeof propertyValue[splitString]) === \"number\") {\r\n                                        propertyValue[splitString] = targetInput.valueAsNumber;\r\n                                    }\r\n                                    else if ((typeof propertyValue[splitString]) === \"string\") {\r\n                                        propertyValue[splitString] = \"\" + targetInput.value;\r\n                                    }\r\n                                    else {\r\n                                        propertyValue[splitString] = \"\" + targetInput.value;\r\n                                    }\r\n                                }\r\n                            }\r\n                            //nasty little jam to make this work with the node inspector, this could cause us issues later [ld] HACK HACK HACK\r\n                            self.handleInputChangedEvent({ srcElement: dataRow, target: dataRow, getAttribute: function (e) { return currentTarget.name + \".\" + property; } });\r\n                        });\r\n                        dataRow.appendChild(label);\r\n                        dataRow.appendChild(value);\r\n                        return dataRow;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n                let dataRow = document.createElement(\"div\");\r\n                dataRow.classList.add(\"row\", \"control-group\");\r\n                let isArray = Array.isArray(propertyValue);\r\n                var label = document.createElement(\"div\");\r\n                label.classList.add(\"col-3\", \"control-label\");\r\n                label.innerText = property;\r\n                if (isArray) {\r\n                    let self = this;\r\n                    label.style.cursor = \"pointer\";\r\n                    label.title = \"Click to Set Array Size\";\r\n                    label.addEventListener('click', (evt) => {\r\n                        let controlValue = document.createElement('div');\r\n                        controlValue.classList.add('control-value');\r\n                        controlValue.style.position = \"fixed\";\r\n                        controlValue.style.left = (evt.clientX - 40) + \"px\";\r\n                        controlValue.style.top = (evt.clientY - 20) + \"px\";\r\n                        controlValue.style.width = \"80px\";\r\n                        let input = this.renderInputField(\"\", \"number\");\r\n                        input.placeholder = \"Array Length\";\r\n                        let changeArrSizeFunc = function (newSize) {\r\n                            if (typeof newSize !== 'number') {\r\n                                console.warn(\"Array Size was not a number\");\r\n                                return;\r\n                            }\r\n                            if (isNaN(newSize)) {\r\n                                console.warn(\"Array Size was NaN, not setting.\");\r\n                                return;\r\n                            }\r\n                            if (newSize < 0) {\r\n                                console.warn(\"Not setting array size less than 0\");\r\n                                return;\r\n                            }\r\n                            if (newSize > 32) {\r\n                                console.warn(\"Not setting array size greater than 32\");\r\n                                return;\r\n                            }\r\n                            // hall-of-mirrors level reflection going on here...\r\n                            // Pass in a false bson writer object and wait to see which\r\n                            //  writer method it calls for the property to determine the correct type.\r\n                            let typePromise = new Promise((resolve, reject) => {\r\n                                let bsonWriterMethod = currentTarget.writeDataBSON;\r\n                                if (typeof bsonWriterMethod !== 'function') {\r\n                                    throw \"BSON Writer not found\";\r\n                                }\r\n                                let _currentType = null;\r\n                                var bsonWriterFacade = {\r\n                                    startObject: () => { },\r\n                                    endObject: () => {\r\n                                        if (_currentType != null)\r\n                                            resolve(_currentType);\r\n                                        else\r\n                                            reject();\r\n                                    },\r\n                                    writeInt16: () => { return \"number\"; },\r\n                                    writeInt32: () => { return \"number\"; },\r\n                                    writeInt64: () => { return \"number\"; },\r\n                                    writeUInt16: () => { return \"number\"; },\r\n                                    writeUInt32: () => { return \"number\"; },\r\n                                    writeUInt64: () => { return \"number\"; },\r\n                                    writeSingle: () => { return \"number\"; },\r\n                                    writeDouble: () => { return \"number\"; },\r\n                                    writeString: () => { return \"string\"; },\r\n                                    writeBoolean: () => { return \"boolean\"; },\r\n                                    writeArray: (name, _, action) => {\r\n                                        if (name.toLowerCase() === property.toLowerCase())\r\n                                            _currentType = action();\r\n                                    }\r\n                                };\r\n                                bsonWriterMethod.call(currentTarget, bsonWriterFacade);\r\n                                // if we dont get a result in 300ms, it's probably failed.\r\n                                window.setTimeout(reject, 300);\r\n                            });\r\n                            typePromise.then((type) => {\r\n                                // populate the array with default type\r\n                                console.log(\"Array type is\", type);\r\n                                let oldSize = currentTarget[property].length;\r\n                                currentTarget[property] = currentTarget[property].slice(0, newSize);\r\n                                for (let i = oldSize; i < newSize; ++i) {\r\n                                    currentTarget[property][i] = defaultValueFor(type);\r\n                                }\r\n                                currentTarget.triggerOnChanged();\r\n                                Vertex.Globals.event.fire(\"editor:clearSelection\");\r\n                                Vertex.Globals.event.fire(\"editor:selectNode\", self.targetNode);\r\n                            }).catch((error) => {\r\n                                console.warn(\"Cannot determine array type\", error);\r\n                            });\r\n                        };\r\n                        let defaultValueFor = function (type) {\r\n                            switch (type) {\r\n                                case \"number\":\r\n                                    return 0;\r\n                                case \"boolean\":\r\n                                    return false;\r\n                                default:\r\n                                    return \"\";\r\n                            }\r\n                        };\r\n                        input.addEventListener('blur', (evt) => {\r\n                            if (controlValue.parentNode && controlValue)\r\n                                controlValue.parentNode.removeChild(controlValue);\r\n                        });\r\n                        input.addEventListener('keyup', (evt) => {\r\n                            switch (evt.key) {\r\n                                case \"Escape\":\r\n                                    // cancel\r\n                                    input.blur();\r\n                                    break;\r\n                                case \"Enter\":\r\n                                    // set new value\r\n                                    let newLength = +input.value;\r\n                                    changeArrSizeFunc(newLength);\r\n                                    input.blur();\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        });\r\n                        controlValue.appendChild(input);\r\n                        dataRow.appendChild(controlValue);\r\n                        input.focus();\r\n                    });\r\n                }\r\n                dataRow.appendChild(label);\r\n                var value = document.createElement(\"div\");\r\n                value.classList.add(\"col\", \"control-value\");\r\n                var input = null;\r\n                if (!isArray) {\r\n                    input = this.renderInputField(propertyValue, typeof currentTarget[property]);\r\n                    input.setAttribute(\"data-vtx-binding\", currentTarget.name + \".\" + property);\r\n                    input.addEventListener(\"change\", this.handleInputChangedEvent.bind(this));\r\n                    value.appendChild(input);\r\n                }\r\n                else { // isArray\r\n                    if (propertyValue.length <= this.arrayBreakout) {\r\n                        var idx = 0;\r\n                        for (var val of propertyValue) {\r\n                            input = this.renderInputField(val, typeof currentTarget[property][idx]);\r\n                            input.setAttribute(\"data-vtx-binding\", currentTarget.name + \".\" + property + \".\" + idx);\r\n                            input.setAttribute(\"data-vtx-array\", idx.toString());\r\n                            input.addEventListener(\"change\", this.handleInputChangedEvent.bind(this));\r\n                            value.appendChild(input);\r\n                            idx++;\r\n                        }\r\n                    }\r\n                    // todo: render array breakout fields properly [ld]\r\n                    else {\r\n                        input = this.renderInputField(propertyValue, typeof currentTarget[property]);\r\n                        input.setAttribute(\"data-vtx-binding\", currentTarget.name + \".\" + property);\r\n                        input.addEventListener(\"change\", this.handleInputChangedEvent.bind(this));\r\n                        value.appendChild(input);\r\n                    }\r\n                }\r\n                dataRow.appendChild(value);\r\n                return dataRow;\r\n            }\r\n            renderInputField(value, type) {\r\n                if (type === \"boolean\") {\r\n                    var list = document.createElement(\"select\");\r\n                    list.classList.add(\"form-control\");\r\n                    var trueOption = document.createElement(\"option\");\r\n                    trueOption.value = \"true\";\r\n                    trueOption.innerText = \"True\";\r\n                    trueOption.selected = !!value;\r\n                    var falseOption = document.createElement(\"option\");\r\n                    falseOption.value = \"false\";\r\n                    falseOption.innerText = \"False\";\r\n                    falseOption.selected = !value;\r\n                    list.appendChild(trueOption);\r\n                    list.appendChild(falseOption);\r\n                    return list;\r\n                }\r\n                else {\r\n                    var input = document.createElement(\"input\");\r\n                    input.classList.add(\"form-control\");\r\n                    input.autocomplete = \"off\";\r\n                    input.value = value;\r\n                    input.type = \"text\";\r\n                    if (typeof value === \"number\") {\r\n                        input.type = \"number\";\r\n                        if (value !== 0)\r\n                            input.value = value.toPrecision(4);\r\n                    }\r\n                    input.spellcheck = false;\r\n                    return input;\r\n                }\r\n            }\r\n        }\r\n        UI.InspectorPanel = InspectorPanel;\r\n    })(UI = Vertex.UI || (Vertex.UI = {}));\r\n})(Vertex || (Vertex = {}));\r\nvar Vertex;\r\n(function (Vertex) {\r\n    let UI;\r\n    (function (UI) {\r\n        class ScrollFlex {\r\n            constructor() {\r\n                let scrollingDiv = document.createElement(\"span\");\r\n                scrollingDiv.classList.add(\"scrollFlex\");\r\n                let isDown = false;\r\n                let startX;\r\n                let scrollLeft;\r\n                scrollingDiv.addEventListener('mousedown', (e) => {\r\n                    e.preventDefault();\r\n                    isDown = true;\r\n                    scrollingDiv.classList.add('active');\r\n                    startX = e.pageX - scrollingDiv.offsetLeft;\r\n                    scrollLeft = scrollingDiv.scrollLeft;\r\n                });\r\n                document.addEventListener('mouseup', (e) => {\r\n                    if (isDown) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        isDown = false;\r\n                        scrollingDiv.classList.remove('active');\r\n                    }\r\n                });\r\n                document.addEventListener('mousemove', (e) => {\r\n                    e.stopPropagation();\r\n                    if (!isDown)\r\n                        return;\r\n                    e.preventDefault();\r\n                    const x = e.pageX - scrollingDiv.offsetLeft;\r\n                    const walk = (x - startX) * 3;\r\n                    scrollingDiv.scrollLeft = scrollLeft - walk;\r\n                });\r\n                scrollingDiv.addEventListener(\"drag\", (e) => { e.stopPropagation(); });\r\n                this.scrollingDiv = scrollingDiv;\r\n            }\r\n        }\r\n        UI.ScrollFlex = ScrollFlex;\r\n    })(UI = Vertex.UI || (Vertex.UI = {}));\r\n})(Vertex || (Vertex = {}));\r\n//# sourceMappingURL=vertexruntime.js.map"],"names":[],"version":3,"file":"index.da9e0195.js.map","sourceRoot":"/__parcel_source_root/"}